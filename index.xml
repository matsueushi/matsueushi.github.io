<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Home on matsueushi</title>
    <link>https://matsueushi.github.io/</link>
    <description>Recent content in Home on matsueushi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright © 2019–2022</copyright>
    <lastBuildDate>Sun, 18 Sep 2022 11:07:07 +0900</lastBuildDate>
    
	<atom:link href="https://matsueushi.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>行ったライブの記録</title>
      <link>https://matsueushi.github.io/other/live/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matsueushi.github.io/other/live/</guid>
      <description>&lt;p&gt;自分用メモ&lt;/p&gt;
&lt;p&gt;行ったライブの記録。まだ他にもあるはず……&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;日付&lt;/th&gt;
&lt;th&gt;企画名&lt;/th&gt;
&lt;th&gt;バンド&lt;/th&gt;
&lt;th&gt;会場&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2010/6/27&lt;/td&gt;
&lt;td&gt;Shimokitazawa Indie Fanclub 2010&lt;/td&gt;
&lt;td&gt;神聖かまってちゃん &lt;br&gt; OGRE YOU ASSHOLE &lt;br&gt;踊ってばかりの国 &lt;br&gt; 住所不定無職 &lt;br&gt; and more&lt;/td&gt;
&lt;td&gt;ERA, Shelter, Garden, etc&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.livefans.jp/events/140687&#34;&gt;2010/9/19&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;窓辺で手紙を調弦っす。vermail&lt;/td&gt;
&lt;td&gt;神聖かまってちゃん&lt;br&gt; 川本真琴&lt;br&gt;フルカワミキ&lt;/td&gt;
&lt;td&gt;SHIBUYA-AX&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2011/7/2&lt;/td&gt;
&lt;td&gt;UNIT 7th Anniversary&lt;/td&gt;
&lt;td&gt;Wire&lt;br&gt; Friction&lt;br&gt; and more&lt;/td&gt;
&lt;td&gt;UNIT&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012/4/12&lt;/td&gt;
&lt;td&gt;裏の仕業&lt;/td&gt;
&lt;td&gt;踊ってばかりの国&lt;/td&gt;
&lt;td&gt;下北沢SHELTER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012/9/8&lt;/td&gt;
&lt;td&gt;BAYCAMP2012&lt;/td&gt;
&lt;td&gt;0.8秒と衝撃。 &lt;br&gt; Czecho No Republic &lt;br&gt; group_inou &lt;br&gt; 快速東京&lt;br&gt; and more&lt;/td&gt;
&lt;td&gt;川崎市東扇島東公園&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013/2/7&lt;/td&gt;
&lt;td&gt;My Bloody Valentine Japan Tour 2013&lt;/td&gt;
&lt;td&gt;My Bloody Valentine&lt;/td&gt;
&lt;td&gt;Studio Coast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013/9/11&lt;/td&gt;
&lt;td&gt;ふぇのたすのきかく～2013ねん、なつ～&lt;/td&gt;
&lt;td&gt;ふぇのたす&lt;br&gt; 藤岡みなみ&amp;amp;ザ・モローンズ&lt;br&gt; 椎名琴音&lt;br&gt; THEピンクトカレフ&lt;/td&gt;
&lt;td&gt;代田橋FEVER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013/9/30&lt;/td&gt;
&lt;td&gt;My Bloody Valentine World Premium Live &amp;ldquo;New Tracks&amp;rdquo;&lt;/td&gt;
&lt;td&gt;My Bloody Valentine&lt;br&gt; 相対性理論&lt;/td&gt;
&lt;td&gt;東京国際フォーラム ホールA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013/10/31&lt;/td&gt;
&lt;td&gt;Wild Nothing Japan Tour 2013&lt;/td&gt;
&lt;td&gt;Wild Nothing&lt;/td&gt;
&lt;td&gt;渋谷クラブクアトロ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014/2/25&lt;/td&gt;
&lt;td&gt;Nine Inch Nails&lt;/td&gt;
&lt;td&gt;Nine Inch Nails&lt;/td&gt;
&lt;td&gt;Studio Coast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014/10/15&lt;/td&gt;
&lt;td&gt;andymori ラストライブ&lt;/td&gt;
&lt;td&gt;andymori&lt;/td&gt;
&lt;td&gt;日本武道館&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014/12/31&lt;/td&gt;
&lt;td&gt;ふぇのたす大晦日大忘年会、でも曲は忘れないように全曲ライブ&lt;/td&gt;
&lt;td&gt;ふぇのたす&lt;/td&gt;
&lt;td&gt;南青山Lunar&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015/7/5&lt;/td&gt;
&lt;td&gt;JAPAN SHOEGAZER FESTIVAL 2015&lt;/td&gt;
&lt;td&gt;Lemon&amp;rsquo;s Chair&lt;br&gt; Plastic Girl In Closet&lt;br&gt; 少女スキップ&lt;/td&gt;
&lt;td&gt;吉祥寺CLUB SEATA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015/8/15&lt;/td&gt;
&lt;td&gt;Hostess Club All-Nighter&lt;/td&gt;
&lt;td&gt;Spiritualized&lt;br&gt; F.F.S&lt;br&gt; Bo Ningen&lt;br&gt; and more&lt;/td&gt;
&lt;td&gt;幕張メッセ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015/9/19&lt;/td&gt;
&lt;td&gt;＜第一部＞ふぇのたす解散ライブ〜2015年、なつ〜&lt;/td&gt;
&lt;td&gt;ふぇのたす&lt;/td&gt;
&lt;td&gt;代田橋FEVER&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015/11/26&lt;/td&gt;
&lt;td&gt;&amp;ldquo;Psychocandy&amp;rdquo; 30th Anniversary Japan Tour&lt;/td&gt;
&lt;td&gt;The Jesus and Mary Chain&lt;/td&gt;
&lt;td&gt;Ex Theater Roppongi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015/12/1&lt;/td&gt;
&lt;td&gt;『Wordplay vol. 31』&lt;/td&gt;
&lt;td&gt;波多野浩史 (People In The Box)&lt;br&gt; 田中茉裕&lt;/td&gt;
&lt;td&gt;渋谷La.mama&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/5/5&lt;/td&gt;
&lt;td&gt;〈腹痛が痛い Vol.3〉〜こどもの日もお腹が痛い〜&lt;/td&gt;
&lt;td&gt;空中メトロ&lt;br&gt; 校庭カメラガールツヴァイ&lt;br&gt; the End&lt;/td&gt;
&lt;td&gt;渋谷TSUTAYA O-west&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/5/25&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;New Order&lt;/td&gt;
&lt;td&gt;Studio Coast&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/6/12&lt;/td&gt;
&lt;td&gt;『カネコアヤノとさぐりあい～柴田聡子編～』&lt;/td&gt;
&lt;td&gt;カネコアヤノ&lt;br&gt; 柴田聡子&lt;/td&gt;
&lt;td&gt;神保町 視聴室&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/7/2&lt;/td&gt;
&lt;td&gt;TOKYO SWING 3MAN SP.&lt;/td&gt;
&lt;td&gt;シャンプーハッツ&lt;br&gt; ダンカンバカヤロー！&lt;br&gt; Emily Likes Tennis&lt;/td&gt;
&lt;td&gt;新宿Motion&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/7/9&lt;/td&gt;
&lt;td&gt;BULK・期末&lt;/td&gt;
&lt;td&gt;BELLRING少女ハート&lt;br&gt; 挫・人間&lt;br&gt; DOTAMA&lt;br&gt; 校庭カメラガールツヴァイ&lt;/td&gt;
&lt;td&gt;渋谷TSUTAYA O-nest&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/8/21&lt;/td&gt;
&lt;td&gt;Hostess Club All-Nighter&lt;/td&gt;
&lt;td&gt;Deerhunter&lt;br&gt; Dinasour Jr.&lt;br&gt; Animal Collective&lt;br&gt; and more&lt;/td&gt;
&lt;td&gt;幕張メッセ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/10/7&lt;/td&gt;
&lt;td&gt;NME JAPAN presents Richard Ashcroft Japan Tour 2016&lt;/td&gt;
&lt;td&gt;Richard Ashcroft&lt;/td&gt;
&lt;td&gt;Zepp Tokyo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016/10/28&lt;/td&gt;
&lt;td&gt;りりぱ・わんまん &amp;ldquo;ちょおじつりょくはせんげん&amp;rdquo;&lt;/td&gt;
&lt;td&gt;挫・人間&lt;/td&gt;
&lt;td&gt;WWW&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/1/16&lt;/td&gt;
&lt;td&gt;MALTINE SEED STAGE 01&lt;/td&gt;
&lt;td&gt;Lolica Tonica&lt;br&gt; 食品まつり &lt;br&gt;Hercelot &lt;br&gt;長谷川白紙&lt;/td&gt;
&lt;td&gt;CIRCUS Tokyo&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/2/27&lt;/td&gt;
&lt;td&gt;Hostess Club &amp;amp; Creativeman Presents&lt;/td&gt;
&lt;td&gt;Pixies&lt;/td&gt;
&lt;td&gt;Ex Theater Roppongi&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/8/1&lt;/td&gt;
&lt;td&gt;&amp;ldquo;An Evening With&amp;rdquo; Sigur Ros&lt;/td&gt;
&lt;td&gt;Sigur Ros&lt;/td&gt;
&lt;td&gt;東京国際フォーラム ホールA&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/8/17&lt;/td&gt;
&lt;td&gt;Hostess Club All-Nighter&lt;/td&gt;
&lt;td&gt;Mogwai&lt;br&gt; Ride&lt;br&gt; Cigarettes After Sex&lt;br&gt; Ride&lt;br&gt; and more&lt;/td&gt;
&lt;td&gt;幕張メッセ&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/9/10&lt;/td&gt;
&lt;td&gt;EPでたよパーティー&lt;/td&gt;
&lt;td&gt;chelmico&lt;br&gt; Jabba Da Hutt Football Club &lt;br&gt; Tempalay&lt;/td&gt;
&lt;td&gt;Sound Museum Vision&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/9/13&lt;/td&gt;
&lt;td&gt;集団行動の単独公演&lt;/td&gt;
&lt;td&gt;集団行動&lt;/td&gt;
&lt;td&gt;Shibuya WWW&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017/10/23&lt;/td&gt;
&lt;td&gt;Wolf Alice Japan Tour 2017&lt;/td&gt;
&lt;td&gt;Wolf Alice&lt;/td&gt;
&lt;td&gt;WWW X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/1/21&lt;/td&gt;
&lt;td&gt;The Pains of Being Pure At Heart Japan Tour 2018&lt;/td&gt;
&lt;td&gt;The Pains of Being Pure At Heart&lt;/td&gt;
&lt;td&gt;WWW X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/1/30&lt;/td&gt;
&lt;td&gt;CY8ER 1st ALBUM『ハローニュージェネレーション』発売記念&lt;/td&gt;
&lt;td&gt;CY8ER&lt;/td&gt;
&lt;td&gt;ヴィレッジヴァンガード渋谷&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/2/23&lt;/td&gt;
&lt;td&gt;Pia Fraus Japan Tour 2018&lt;/td&gt;
&lt;td&gt;Pia Fraus&lt;br&gt; Plastic Girl in Closet&lt;/td&gt;
&lt;td&gt;Koenji High&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/4/13&lt;/td&gt;
&lt;td&gt;The fin. Tour 2018&lt;/td&gt;
&lt;td&gt;The fin.&lt;/td&gt;
&lt;td&gt;WWW X&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/7/31&lt;/td&gt;
&lt;td&gt;Television&lt;/td&gt;
&lt;td&gt;Television&lt;/td&gt;
&lt;td&gt;Elsewhere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/9/8&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Mac Demarco&lt;br&gt; Juan Wauters&lt;/td&gt;
&lt;td&gt;Summer Stage, Central Park&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/9/26&lt;/td&gt;
&lt;td&gt;WFUV presents Alvvays (Night 1)&lt;/td&gt;
&lt;td&gt;Alvvays&lt;br&gt; Hatchie&lt;br&gt; Snail Mail&lt;/td&gt;
&lt;td&gt;Warsaw Concerts&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/9/21&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Sales&lt;br&gt; No Vacation&lt;br&gt; Hana Vu&lt;/td&gt;
&lt;td&gt;The Bowery Ballroom&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/12/12&lt;/td&gt;
&lt;td&gt;PopGun Presents&lt;/td&gt;
&lt;td&gt;Curls&lt;br&gt; Fletcher C Johnson&lt;/td&gt;
&lt;td&gt;Elsewhere&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018/12/29&lt;/td&gt;
&lt;td&gt;Minty Boi Presents&lt;/td&gt;
&lt;td&gt;No Vacation&lt;br&gt; Plastic Picnic&lt;br&gt; Navy Gangs&lt;/td&gt;
&lt;td&gt;Market Hotel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/1/17&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Japanese Breakfast&lt;/td&gt;
&lt;td&gt;Brooklyn Steel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/2/16&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Interpol&lt;br&gt; Car Seat Headrest&lt;br&gt; Snail Mail&lt;/td&gt;
&lt;td&gt;Madison Square Garden&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/2/27&lt;/td&gt;
&lt;td&gt;The Bowery Presents&lt;/td&gt;
&lt;td&gt;Deerhunter&lt;/td&gt;
&lt;td&gt;Brooklyn Steel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/5/3&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The Feelies&lt;/td&gt;
&lt;td&gt;Rough Trade NYC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/5/5&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Last Dinosaurs&lt;/td&gt;
&lt;td&gt;Mercury Lounge&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/5/20&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;MGMT&lt;/td&gt;
&lt;td&gt;The Capital Theatre&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/6/14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Real Estate&lt;br&gt; Palm&lt;/td&gt;
&lt;td&gt;Webstar Hall&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/7/25&lt;/td&gt;
&lt;td&gt;Produced by The Bowery Presents&lt;/td&gt;
&lt;td&gt;Kurt Vile and The Violators, &lt;br&gt; Dinasour Jr. &lt;br&gt; Cate Le Bon&lt;/td&gt;
&lt;td&gt;Summerstage, Central Park&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/7/31&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Snail Mail, Sasami, Duster&lt;/td&gt;
&lt;td&gt;Blooklyn Steel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/8/6&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Mac Demarco&lt;/td&gt;
&lt;td&gt;Prospect Park Bandshell&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.setlist.fm/setlist/hatchie/2019/rough-trade-nyc-brooklyn-ny-239cbc23.html&#34;&gt;2019/9/4&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Hatchie&lt;/td&gt;
&lt;td&gt;Rought Trade NYC&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.setlist.fm/setlist/deerhunter/2019/webster-hall-new-york-ny-239c80af.html&#34;&gt;2019/9/11&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Deerhunter &lt;br&gt; Dirty Projectors&lt;/td&gt;
&lt;td&gt;Webster Hall&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/10/10&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Kero Kero Bonito&lt;/td&gt;
&lt;td&gt;Blooklyn Steel&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/10/17&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Yung Bae &lt;br&gt; Birocratic &lt;br&gt; Billy Marchiafava&lt;/td&gt;
&lt;td&gt;Blooklyn Bowl&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/11/6&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;JPEGMAFIA&lt;/td&gt;
&lt;td&gt;The Bowery Ballroom&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;a href=&#34;https://www.setlist.fm/setlist/the-feelies/2019/white-eagle-hall-jersey-city-nj-239a9c03.html&#34;&gt;2019/11/16&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;The Feelies&lt;/td&gt;
&lt;td&gt;White Eagele Hall&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019/12/14&lt;/td&gt;
&lt;td&gt;-&lt;/td&gt;
&lt;td&gt;Plaid&lt;/td&gt;
&lt;td&gt;Elsewhere (Hall)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
</description>
    </item>
    
    <item>
      <title>AxSxEまとめ</title>
      <link>https://matsueushi.github.io/other/axsxe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matsueushi.github.io/other/axsxe/</guid>
      <description>&lt;h2 id=&#34;axsxe提供曲&#34;&gt;AxSxE提供曲&lt;/h2&gt;
&lt;p&gt;AxSxEが他のアーティストに提供している曲を調べました。リリース日は正確ではないかもしれません。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;リリース&lt;/th&gt;
&lt;th&gt;アーティスト&lt;br&gt;曲名&lt;/th&gt;
&lt;th&gt;作詞&lt;/th&gt;
&lt;th&gt;作曲/編曲&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;2001.8.8&lt;/td&gt;
&lt;td&gt;TOKIO&lt;br&gt;カンパイ!!&lt;/td&gt;
&lt;td&gt;おちまさと&lt;br&gt;Bill Martin&lt;br&gt;Philip Coulter&lt;/td&gt;
&lt;td&gt;阿瀬研一&lt;br&gt;Bill Martin&lt;br&gt;Philip Coulter &lt;br&gt; / 船山基紀&lt;br&gt;永見竜生&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2006.7.19&lt;/td&gt;
&lt;td&gt;MAI&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/MAI_(%E6%AD%8C%E6%89%8B)&#34;&gt;夏NATSUxxx,&lt;br&gt;エブリボデー&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;MAI&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2007.2.7&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/Scratch_(%E6%9C%A8%E6%9D%91%E3%82%AB%E3%82%A8%E3%83%A9%E3%81%AE%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0)&#34;&gt;L.drunk&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008.4.2&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%2B1_(%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0)&#34;&gt;STARs&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2008.9.10&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%9E%E3%82%B9%E3%82%BF%E3%83%83%E3%82%B7%E3%83%A5/memories&#34;&gt;マスタッシュ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2009.6.24&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/HOCUS_POCUS&#34;&gt;season&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=Bx-Lt8RnWTA&#34;&gt;📺&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2011.3.2&lt;/td&gt;
&lt;td&gt;LOOP CHILD&lt;br&gt;&lt;a href=&#34;https://www.uta-net.com/movie/108115/&#34;&gt;魔法のレシピ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;柴野真理子&lt;br&gt;カワムラユキ&lt;/td&gt;
&lt;td&gt;柴野真理子&lt;br&gt;篠崎哲也&lt;br&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012.2.22&lt;/td&gt;
&lt;td&gt;ジェロ&lt;br&gt;&lt;a href=&#34;https://tower.jp/article/news/2012/01/17/n07&#34;&gt;黄昏メトロ&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;アイン&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012.5.16&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%9F%E3%83%AC%E3%83%AB&#34;&gt;マミレル&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012.5.16&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%9E%E3%83%9F%E3%83%AC%E3%83%AB&#34;&gt;Synchronicity&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2012.12.5&lt;/td&gt;
&lt;td&gt;南波志帆&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E4%B9%99%E5%A5%B3%E5%A4%B1%E6%A0%BC%E3%80%82&#34;&gt;「ありゃりゃ？」&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;津野米咲&lt;/td&gt;
&lt;td&gt;AxSxE / 矢野博康&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2013.12.4&lt;/td&gt;
&lt;td&gt;後藤まりこ&lt;br&gt;&lt;a href=&#34;https://skream.jp/news/2013/11/gotomariko_2nd_jaket.php&#34;&gt;すばらしい世界。&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;後藤まりこ&lt;br&gt;AxSxE&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014.4.2&lt;/td&gt;
&lt;td&gt;lyrical school&lt;br&gt;brand new day&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=IAiBzgYTW-o&#34;&gt;📺&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;LITTLE&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2014.12.17&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/MIETA&#34;&gt;one more&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2015.9.2&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/EGG_(%E6%9C%A8%E6%9D%91%E3%82%AB%E3%82%A8%E3%83%A9%E3%81%AE%E6%9B%B2)&#34;&gt;SHOW TIME&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / H ZETT M&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016.7.6&lt;/td&gt;
&lt;td&gt;lyrical school&lt;br&gt;サマーファンデーション&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=x5CZr8XGBxI&#34;&gt;📺&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;LITTLE&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016.10.19&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/EGG_(%E6%9C%A8%E6%9D%91%E3%82%AB%E3%82%A8%E3%83%A9%E3%81%AE%E6%9B%B2)&#34;&gt;Happyな法被&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2016.11.23&lt;/td&gt;
&lt;td&gt;ONEPIXCEL&lt;br&gt;&lt;a href=&#34;https://tower.jp/item/4366366/TONDEKE-Analoganize&#34;&gt;TONDEKE&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=YAm3NgaTOq8&#34;&gt;📺&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;IMATETSU&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2017.5.10&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/HOLIDAYS_(%E6%9C%A8%E6%9D%91%E3%82%AB%E3%82%A8%E3%83%A9%E3%81%AE%E6%9B%B2)&#34;&gt;HOLIDAYS&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018.6.6&lt;/td&gt;
&lt;td&gt;私立恵比寿中学&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%81%A7%E3%81%8B%E3%81%A9%E3%82%93%E3%81%A7%E3%82%93&#34;&gt;響&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;後藤まりこ&lt;/td&gt;
&lt;td&gt;AxSxE / 野村陽一郎&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018.10.31&lt;/td&gt;
&lt;td&gt;近田春夫&lt;br&gt;&lt;a href=&#34;https://www.jvcmusic.co.jp/-/Discography/A026255/VICL-65050.html&#34;&gt;超冗談だから&lt;/a&gt;&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=r1cMyneq5Hs&#34;&gt;📺&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;児玉雨子&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2018.11.21&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;COLOR&lt;br&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=u8eKS4_kW7w&#34;&gt;📺&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2019.7.31&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;br&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%81%84%E3%81%A1%E3%81%94_(%E6%9C%A8%E6%9D%91%E3%82%AB%E3%82%A8%E3%83%A9%E3%81%AE%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0)&#34;&gt;戦闘的ファンタジー&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;木村カエラ&lt;/td&gt;
&lt;td&gt;AxSxE / AxSxE&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2021.11.24&lt;/td&gt;
&lt;td&gt;アンナ・ジ・エンド&lt;br&gt;&lt;a href=&#34;https://tower.jp/article/news/2021/11/02/tg005&#34;&gt;はっぴーばーすでー&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;アンナ・ジ・エンド&lt;/td&gt;
&lt;td&gt;AxSxE&lt;br&gt;アンナ・ジ・エンド&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/playlist/5vW7DMMXM8zvhirIZih6CD&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;h2 id=&#34;インタビュー&#34;&gt;インタビュー&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.loft-prj.co.jp/interview/0509/09.html&#34;&gt;『感情的format』発売記念対談『感情的音楽談義』&lt;/a&gt; (&lt;a href=&#34;https://archive.is/2whPe&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://tower.jp/article/interview/2005/03/03/100039375&#34;&gt;『bounce』 262号(2005/2/25) NATSUMEN&lt;/a&gt; (&lt;a href=&#34;https://archive.is/PGB6F&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rooftop1976.com/interview/070501194705.php&#34;&gt;【復刻インタビュー】吉田 肇（PANICSMILE）×AxSxE（2007年5月号）- 結成15周年を迎えるPANICSMILEが提唱する素晴らしき情操教育！ - インタビュー | Rooftop (1)&lt;/a&gt; (&lt;a href=&#34;https://archive.fo/G3x4L&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rooftop1976.com/interview/070501194705.php?page=2&#34;&gt;【復刻インタビュー】吉田 肇（PANICSMILE）×AxSxE（2007年5月号）- 結成15周年を迎えるPANICSMILEが提唱する素晴らしき情操教育！ - インタビュー | Rooftop (2)&lt;/a&gt; (&lt;a href=&#34;https://archive.fo/zToNx&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rooftop1976.com/interview/070501194705.php?page=3&#34;&gt;【復刻インタビュー】吉田 肇（PANICSMILE）×AxSxE（2007年5月号）- 結成15周年を迎えるPANICSMILEが提唱する素晴らしき情操教育！ - インタビュー | Rooftop (3)&lt;/a&gt; (&lt;a href=&#34;https://archive.fo/7gy9J&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://bridge-inc.net/?pid=17723181&#34;&gt;「セカンドライン vol.1」(SL001) AxSxE独占ロングインタビュー 言いっ放しの業界覆面座談会＠某ビニールハウス～「AxSxEは●●先輩だった！」&lt;/a&gt; (&lt;a href=&#34;https://archive.fo/i4kOO&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.hmv.co.jp/artist_Book_000000000120250/item_INDIES-ISSUE-58_4174282&#34;&gt;INDIES ISSUE 58 対談・の子×AxSxE 「『つまんね』のころから、自分が表現したい神秘的な部分をうまい具合に引き出せている」&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;秋葉原CLUB GOODMAN&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=580&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #01&lt;/a&gt; (&lt;a href=&#34;https://archive.vn/ieHD3&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=576&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #02&lt;/a&gt; (&lt;a href=&#34;https://archive.vn/5ywe0&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=570&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #03&lt;/a&gt; (&lt;a href=&#34;https://archive.vn/5Yi15&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=165&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #04&lt;/a&gt; (&lt;a href=&#34;https://archive.vn/MjDHr&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=479&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #05&lt;/a&gt; (&lt;a href=&#34;https://archive.vn/L9oqI&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=1185&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #06&lt;/a&gt; (&lt;a href=&#34;https://archive.is/zEh5d&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.clubgoodman.com/blog/?p=1977&#34;&gt;【偏見対談】 AxSxE（NATSUMEN）編 #07&lt;/a&gt; (&lt;a href=&#34;https://archive.is/WTzoP&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;axsxeレコーディングエンジニア参加リスト&#34;&gt;AxSxEレコーディングエンジニア参加リスト&lt;/h2&gt;
&lt;p&gt;作成中&amp;hellip;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.discogs.com/ja/artist/1309189-AxSxE?noanv=1&#34;&gt;https://www.discogs.com/ja/artist/1309189-AxSxE?noanv=1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2010年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.vap.co.jp/tate/info/info.html&#34;&gt;3rdフルアルバム「Harkitek or ta ayoro (ハルキテク オッ タ アヨロ)」2010.4.21 発売&lt;/a&gt; (&lt;a href=&#34;https://archive.is/ckBCM&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2011年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ukproject.exblog.jp/15823058/&#34;&gt;住所不定無職 ジャカジャーン&lt;/a&gt; (&lt;a href=&#34;https://archive.is/dc1mK&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2012年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cinra.net/review/20120517_music_WUJABINBIN&#34;&gt;元ビークルのケイタイモ率いる豪華13人のプログレ吹奏楽バンドによる会心の初作&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2014年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.cinra.net/news/2013/01/22/120001&#34;&gt;うみのて1stフルアルバムは『IN RAINBOW TOKYO』、エンジニアはAxSxE&lt;/a&gt; (&lt;a href=&#34;https://archive.is/dc1mK&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2014年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.m-on-music.jp/0000095772/2/&#34;&gt;東京カランコロン – いちろーがメイン・ボーカルとしてフィーチャーされた３曲を収めたシングル「笑うドッペルゲンガー」について、いちろー＆せんせいに話を聞く。&lt;/a&gt; (&lt;a href=&#34;https://archive.is/1KApN&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rooftop.cc/news/2014/02/03170000.php&#34;&gt;ご近所の個性派ミュージシャン集結バンドOishiiOishii（おいしいおいしい）デビューアルバム発売&lt;/a&gt; (&lt;a href=&#34;https://archive.is/RmE4n&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ameblo.jp/azs/entry-11767564874.html&#34;&gt;WUJA BIN BIN 2st ALBUM&lt;/a&gt; (&lt;a href=&#34;https://archive.is/TkttW&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2016年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rooftop.cc/news/2016/02/24195004.php&#34;&gt;FUCKER（谷ぐち順）1stアルバム発売、レコ発開催決定！&lt;/a&gt; (&lt;a href=&#34;https://archive.is/EMgHr&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mikiki.tokyo.jp/articles/-/10893&#34;&gt;MUSIC FROM THE MARS、9年ぶり新作『After Midnight』より新世代ジャズ耳にも◎な“Motion”公開&amp;amp;類家心平迎えたレコ発も&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2017年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://lineblog.me/zaningen/archives/9305485.html&#34;&gt;挫・人間 公式ブログ - 明日、俺はAxSxEになる……その1&lt;/a&gt; (&lt;a href=&#34;https://archive.is/Hrjqo&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lineblog.me/zaningen/archives/9350481.html&#34;&gt;挫・人間 公式ブログ - 明日、俺はAxSxEになる……その2&lt;/a&gt; (&lt;a href=&#34;https://archive.is/TlNp0&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lineblog.me/zaningen/archives/9350587.html&#34;&gt;挫・人間 公式ブログ - 明日、俺はAxSxEになる……その3&lt;/a&gt; (&lt;a href=&#34;https://archive.is/q1GQy&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://lineblog.me/zaningen/archives/9350775.html&#34;&gt;挫・人間 公式ブログ - 明日、俺はAxSxEになる……その4&lt;/a&gt; (&lt;a href=&#34;https://archive.is/d2Mm9&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ototoy.jp/news/86678&#34;&gt;bossston cruizing mania、6年振り新AL完成披露イベント開催 収録曲MVも公開&lt;/a&gt; (&lt;a href=&#34;https://archive.is/orWwT&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;2019年&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://blog.stereo-records.com/index.php/yamaoka/5412/&#34;&gt;【OishiiOishii Country Blues Tour】&lt;/a&gt; (&lt;a href=&#34;https://archive.fo/084Tc&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BOaTまとめ</title>
      <link>https://matsueushi.github.io/other/boat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matsueushi.github.io/other/boat/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../../posts/boat-roro/&#34;&gt;アルバムの紹介&lt;/a&gt;にも書いたバンド&lt;a href=&#34;https://ja.wikipedia.org/wiki/BOAT&#34;&gt;BOaT&lt;/a&gt;の情報がインターネット上で見つかりづらいので、
関連する情報をこのページにまとめていきたいと思います。&lt;/p&gt;
&lt;p&gt;当初はBOaT関連の情報だけまとめようと思っていたのですが、NATSUMEN関連の情報や、自分がメモしておきたい情報も混ざってきています。&lt;/p&gt;
&lt;p&gt;耳寄りな情報があればコメント欄などで教えていただけるとありがたいです。&lt;/p&gt;
&lt;h2 id=&#34;公式サイト&#34;&gt;公式サイト&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://web.archive.org/web/20010926093602/http://boat.d4k.net:80/&#34;&gt;BOaT &lt;em&gt;(Internet Archive)&lt;/em&gt;&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;アーティスト紹介&#34;&gt;アーティスト紹介&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fujitv.co.jp/FACTORY/CX0006/0001pro.html&#34;&gt;FACTORY8&lt;/a&gt; (&lt;a href=&#34;https://archive.is/6k2jm&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://wmg.jp/boat/&#34;&gt;ワーナーミュージック&lt;/a&gt; (&lt;a href=&#34;https://archive.vn/Nkxe2&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;discography&#34;&gt;Discography&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.discogs.com/artist/1401530-Boat-2&#34;&gt;Discogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://web.archive.org/web/20181105125919/http://www.geocities.jp/summerphase/boat.html&#34;&gt;私設 NATSUMEN データベース内のboatのページ &lt;em&gt;(Internet Archive)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://inundow.shop-pro.jp/?pid=3126638&#34;&gt;いぬん堂: M☆N☆T 80&amp;rsquo;s&lt;/a&gt; 上二つには載っていない&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;インタビュー記事雑誌掲載など&#34;&gt;インタビュー記事、雑誌掲載など&lt;/h2&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;媒体名&lt;/th&gt;
&lt;th&gt;号数・日付&lt;/th&gt;
&lt;th&gt;記事タイトル&lt;/th&gt;
&lt;th&gt;Archive&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN’ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/8&lt;/td&gt;
&lt;td&gt;new comer boat 恐るべし、天然記念物級の無防備ギターポップ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN’ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/8&lt;/td&gt;
&lt;td&gt;FRUITS★Lee広告「梅雨明け宣言！夏だ！プールを占拠しろ！」&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Indies Magazine&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.rittor-music.co.jp/magazine/detail/1998201108/&#34;&gt;1998/8 (Vol.16)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;究極の胸キュン☆パワーポップ&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://archive.is/kShPy&#34;&gt;Archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;FM OSAKA EZM&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.roy.hi-ho.ne.jp/mask/ezm/ezm98.htm&#34;&gt;1998/12/25 OA&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.roy.hi-ho.ne.jp/mask/ezm/on-air/guest06.htm#981225&#34;&gt;EZM2(ゲスト)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://archive.is/1KEhi&#34;&gt;Archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Web Jungle&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;boat 1999.4&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20050924212738/http://www.jungle.ne.jp/catalog/interviews/boat.html&#34;&gt;Archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bounce&lt;/td&gt;
&lt;td&gt;1999/4&lt;/td&gt;
&lt;td&gt;キャラや遊び心が初期サザンを彷彿とさせるBOATのポップでパンクでドリーミーな世界!&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN’ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/4&lt;/td&gt;
&lt;td&gt;沖縄レコーディングで大苦戦&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/4&lt;/td&gt;
&lt;td&gt;BOATってこんな奴！&lt;br&gt;連載第1回 ASE (ギター&amp;amp;ボーカル担当)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/4&lt;/td&gt;
&lt;td&gt;Disc Review(SOUL, THRASH, TRAIN)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sound and Recording Magazine&lt;/td&gt;
&lt;td&gt;1999/5&lt;/td&gt;
&lt;td&gt;捨て曲も全然力は抜いてないんですよ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Indies Magazine&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.rittor-music.co.jp/magazine/detail/1998201105/&#34;&gt;1999/5 (Vol.23)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;全人類抹殺のための宣戦布告！&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://archive.is/x79Ud&#34;&gt;Archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/5&lt;/td&gt;
&lt;td&gt;「楽しくやってる」風に映るのを変えたいと思った&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/5&lt;/td&gt;
&lt;td&gt;BOATってこんな奴！&lt;br&gt;連載第2回 アイン(ボーカル&amp;amp;ミミング担当)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;クイック・ジャパン&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;http://www.ohtabooks.com/qj100/archives/025/&#34;&gt;1999/6 (Vol.25)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;今度、作りますよ、「僕、ブルーハーツが好きだ」って曲。&amp;ldquo;BOAT&amp;quot;リーダーA.S.E氏インタビュー&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/6&lt;/td&gt;
&lt;td&gt;BOATってこんな奴！&lt;br&gt;連載第3回 シオリ(ベース&amp;amp;ボーカル担当)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/7&lt;/td&gt;
&lt;td&gt;BOATってこんな奴！&lt;br&gt;連載第4回 サカイ(キーボード&amp;amp;コーラス担当)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;1999/8&lt;/td&gt;
&lt;td&gt;BOATってこんな奴！&lt;br&gt;連載第5回 マユコ(ドラムス&amp;amp;コーラス担当)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;happy voice&lt;/td&gt;
&lt;td&gt;vol 00 side a 1999/8&lt;/td&gt;
&lt;td&gt;お父さんとかも気に入るんやーってびっくりしましたよ(笑)。(A.S.E.)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;happy voice&lt;/td&gt;
&lt;td&gt;vol 00 side a 1999/8&lt;/td&gt;
&lt;td&gt;Questionnarie (A.S.E.)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;B-PASS&lt;/td&gt;
&lt;td&gt;1999/8&lt;/td&gt;
&lt;td&gt;INDIES ATTACK! ACT4&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;bounce&lt;/td&gt;
&lt;td&gt;1999/9&lt;/td&gt;
&lt;td&gt;headstart&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;So-net Music music club on line&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Brand New Artist 2000.6.22&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://web.archive.org/web/20070121143448/http://www.so-net.ne.jp/mc/brandnew/&#34;&gt;Archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;happy voice&lt;/td&gt;
&lt;td&gt;vol 03&lt;/td&gt;
&lt;td&gt;happy voice &amp;amp; BoaT (from A.S.E.&amp;amp;アイン) 商店街でお買いもの!!&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音楽と人&lt;/td&gt;
&lt;td&gt;2000/8&lt;/td&gt;
&lt;td&gt;メッセージを届けに&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Maqruee&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.hmv.co.jp/en/artist_Book_000000000120250/item_MARQUEE-VOL-26_850877&#34;&gt;2000/8 (Vol.26)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;ASE presents&amp;hellip; LIVE TRANCE UNDER THE SKY&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Rhythm &amp;amp; Drums magazine&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.rittor-music.co.jp/backnumber/dm/dm200009.html&#34;&gt;2000/9&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;BoaTマユコ&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音楽と人&lt;/td&gt;
&lt;td&gt;2000/9&lt;/td&gt;
&lt;td&gt;Front Issue! BOaT&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;音楽と人&lt;/td&gt;
&lt;td&gt;2000/9&lt;/td&gt;
&lt;td&gt;LISTENING SUICIDAL広告&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;2000/9&lt;/td&gt;
&lt;td&gt;Disc Review(LISTENING SUICIDAL)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bass magazine&lt;/td&gt;
&lt;td&gt;2000/9&lt;/td&gt;
&lt;td&gt;しおりインタビュー&lt;br&gt;「新世代のミクスチャー・ポップ・ロック」&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Sound &amp;amp; Recording magazine&lt;/td&gt;
&lt;td&gt;2000/10&lt;/td&gt;
&lt;td&gt;ファースト・テイクには何かがある その精神をアイゴンに注入されました&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Guitar magazine&lt;/td&gt;
&lt;td&gt;2000/10&lt;/td&gt;
&lt;td&gt;アセ(BOaT)インタビュー&lt;br&gt;「今の時点でどっちに転ぶかはわからない。……沼地に行くんか青空に行くんか、どっちかわからん。」&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Indies Magazine&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://www.rittor-music.co.jp/magazine/detail/2000201110/&#34;&gt;2000/10 (Vol.40)&lt;/a&gt;&lt;/td&gt;
&lt;td&gt;矛盾だらけの妄想好き？『LISTENING SUICIDAL』の真実&lt;/td&gt;
&lt;td&gt;&lt;a href=&#34;https://archive.is/7CpKT&#34;&gt;Archive&lt;/a&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;out voice&lt;/td&gt;
&lt;td&gt;happy voice*spring2001&lt;/td&gt;
&lt;td&gt;BOAT x 界&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;ROCKIN&amp;rsquo;ON JAPAN&lt;/td&gt;
&lt;td&gt;2001/4&lt;/td&gt;
&lt;td&gt;Disc Review (RORO)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Bass magazine&lt;/td&gt;
&lt;td&gt;2001/5&lt;/td&gt;
&lt;td&gt;〜ベースと彼女とエトセトラ〜 ガールスクール SHIORI(BOAT)&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;Keyboard Magazine&lt;/td&gt;
&lt;td&gt;2001/5&lt;/td&gt;
&lt;td&gt;坂井キヨオシインタビュー&lt;br&gt;「同じフレーズを繰り返すことで、陶酔感みたいな効果を出したかったんです」&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h2 id=&#34;sns-配信&#34;&gt;SNS, 配信&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Boat_(band)&#34;&gt;アメリカの同名バンド&lt;/a&gt;と一緒のページにまとめられている場合がある。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.last.fm/music/Boat&#34;&gt;last.fm&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rateyourmusic.com/artist/boat_f1&#34;&gt;Rate Your Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://musicbrainz.org/artist/1a503a83-426b-43f8-97b5-463468f92b18&#34;&gt;MusicBrainz&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mixi.jp/view_community.pl?id=457650&#34;&gt;mixiコミュニティ BOaT（BOAT） ～2001&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music.apple.com/us/artist/boat/1534705456&#34;&gt;Apple Music&lt;/a&gt;
「フルーツ☆リー」「SOUL.THRASH.TRAIN」が配信されている。-&amp;gt;ROROやListening Suicidalも配信されました&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.spotify.com/artist/3HlXFEii3WxgUGM58fslGX?si=LGWtSzQjRnmSvWXdntwwBA&#34;&gt;Spotify&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;2ch5ch過去ログ&#34;&gt;2ch/5ch過去ログ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://piza.5ch.net/test/read.cgi/musicj/986373365&#34;&gt;BOAT&lt;/a&gt; (2001/4/4 - 2001/4/15)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://cheese.5ch.net/test/read.cgi/music/987668377/&#34;&gt;「ｂｏａｔ」&lt;/a&gt; (2001/04/19 - 2001/05/14)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music.5ch.net/test/read.cgi/musicj/1004181561/&#34;&gt;今度こそ浮沈ＢＯＡＴにするスレだ！！！&lt;/a&gt; (2001/10/27 - 2002/01/11)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music2.5ch.net/test/read.cgi/minor/1054659746/&#34;&gt;○BOAT / NATSUMEN○&lt;/a&gt; (2003/06/04 - 2004/02/16)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music4.5ch.net/test/read.cgi/minor/1096422448/&#34;&gt;○NATSUMEN / BOAT○ part.xxx&lt;/a&gt; (2004/09/29 - 2005/03/05)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music6.5ch.net/test/read.cgi/legend/1112098129/&#34;&gt;◆BOaT◆&lt;/a&gt; (2005/03/29 - 2007/03/03)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://yomogi.5ch.net/test/read.cgi/legend/1173109472/&#34;&gt;【ついに】BOaT【復活？】&lt;/a&gt; (2007/03/06 - )&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;(参考) NATSUMENスレ&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://music4.5ch.net/test/read.cgi/minor/1109943989/&#34;&gt;xxx　NATSUMEN　xxx&lt;/a&gt; (2005/03/04 - 2005/07/20)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music4.5ch.net/test/read.cgi/minor/1121791489/&#34;&gt;xxx　NATSUMEN　part.2　xxx&lt;/a&gt; (2005/07/20 - 2006/02/08)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://music6.5ch.net/test/read.cgi/minor/1139303273/&#34;&gt;xxx　NATSUMEN part.3 xxx&lt;/a&gt; (2006/02/07 - 2006/08/30)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mamono.5ch.net/test/read.cgi/minor/1156868503/&#34;&gt;xxx　NATSUMEN part.4 xxx&lt;/a&gt; (2006/08/30 - 2008/10/10)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mamono.5ch.net/test/read.cgi/minor/1223729830/&#34;&gt;xxx　NATSUMEN part.5 xxx&lt;/a&gt; (2008/10/11 - 2008/11/16)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://awabi.5ch.net/test/read.cgi/minor/1228355665/&#34;&gt;xxx NATSUMEN pt.5 xxx&lt;/a&gt; (2008/12/04 - 2014/03/20)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mamono.5ch.net/test/read.cgi/minor/1228407601/&#34;&gt;xxx　NATSUMEN part.6 xxx&lt;/a&gt; (2008/12/05 - 2008/12/05)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://awabi.2ch.sc/test/read.cgi/minor/1403533861/l50&#34;&gt;xxx NATSUMEN pt.6 xxx&lt;/a&gt; (2014/06/23 - 2014/08/23)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;reddit&#34;&gt;reddit&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/listentothis/comments/1yxqh1/boat_all_japanese_postrock_2001/&#34;&gt;BOaT - All [japanese post-rock] (2001)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/postrock/comments/d9jpxz/boat_all_postrock_from_japan_2001/&#34;&gt;BOaT - All (Post-rock from Japan, 2001)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/postrock/comments/e0ccbq/boat_roro_stupidly_underrated_japanese/&#34;&gt;BOAT - RORO (Stupidly underrated Japanese post-rock/alt rock album)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.reddit.com/r/AlbumArtPorn/comments/i486o8/boat_roro_2001/&#34;&gt;BOaT - Roro [2001]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ライブ情報ライブレポ感想など&#34;&gt;ライブ情報、ライブレポ、感想など&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://web.archive.org/web/20011025042518/http://boat.d4k.net/concerts.html&#34;&gt;公式サイトのライブのお知らせ &lt;em&gt;(Internet Archive)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rooftop.cc/loftarchives/shelter/1999/01/&#34;&gt;下北沢シェルター 1999.1.21&lt;/a&gt; (&lt;a href=&#34;https://archive.is/4CaVc&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://web.archive.org/web/20080725105719/http://www.bea-net.com/beavoice/issue263/imspremium.html&#34;&gt;WEB BEA VOICE Vol.263 &lt;em&gt;(Internet Archive)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;happy voice vol 02 side a, happy voice night 004&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://web.archive.org/web/20190321130058/http://www.geocities.co.jp/Hollywood-Miyuki/6142/00/boat&#34;&gt;ライブビート 2000/7/5 &lt;em&gt;(Internet Archive, 文字化け)&lt;/em&gt;&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.fujitv.co.jp/FACTORY/CX0006/0001live.html&#34;&gt;FACTORY8 #0006 Opening Act : boat - Live&lt;/a&gt; (&lt;a href=&#34;https://archive.is/I709J&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://onabenchinthepark.hatenablog.com/entry/20010504/1184033919&#34;&gt;onabenchinthepark - S.E.P. 2001 @Electric Lady Land&amp;amp;ell.FITS ALL (NANANINE / ハックルベリーフィン / YOGURT-pooh / HAGANE / SCREAMING SOUL HILL / 古明地洋哉 / CHOKO / KICK THE CAN CREW / BOAT / ケツメイシ / アルファ / SOUL&amp;rsquo;D OUT )&lt;/a&gt; (&lt;a href=&#34;https://archive.is/CBGiI&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ukproject.com/que/livereport/01report/010928.html&#34;&gt;Club Cue LIVE REPORT 2001, 2001.9.28 &amp;ldquo;THE 7 WONDERS OF Que～CLUB Que 7th Anniversary～&amp;rdquo; Clingon vs BOAT&lt;/a&gt; (&lt;a href=&#34;https://archive.is/1NWOn&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://smashing.sakura.ne.jp/mag/tour/01tr/010922date.html&#34;&gt;Date Cource Pentagon Royal Garden @ Shibuya Quattro (22nd Sept. &amp;lsquo;01)&lt;/a&gt; (&lt;a href=&#34;https://archive.is/wWmPUQ&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://benice.blog.fc2.com/blog-entry-332.html&#34;&gt;Wouldn&amp;rsquo;t It Be Nice - BOaT : RORO (2001)&lt;/a&gt; (&lt;a href=&#34;https://archive.is/UzwOg&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;その他&#34;&gt;その他&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.shimokitazawa.info/news/2015/07/powann_po/&#34;&gt;しもブロ 第3-1回『ぽわん』 ～ コラム：下北沢は通過点でかまわない&lt;/a&gt; (&lt;a href=&#34;https://archive.is/J1o5v&#34;&gt;アーカイブ&lt;/a&gt;)
ライブの写真が見れる&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://web.archive.org/web/20020126201019/http://www2.justnet.ne.jp/~ichiro/oto-crazy-boat.htm&#34;&gt;サークルサウンズの輪 - boat&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://uroros.net/interview/circlesounds/&#34;&gt;CIRCLE SOUNDS インタビュー | 30周年を迎えたリハーサルスタジオが見てきた景色とは&lt;/a&gt; (&lt;a href=&#34;https://archive.is/WipIb#selection-581.2-613.68&#34;&gt;アーカイブ&lt;/a&gt;)&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www10.plala.or.jp/puusan/review/al_dom/boat.htm&#34;&gt;アルバム全曲レビュースレ（in 2ch.邦楽板）勝手にまとめサイト：BOaT&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rustでインタラクティブの問題を解く</title>
      <link>https://matsueushi.github.io/atcoder/rust-interactive/</link>
      <pubDate>Sun, 18 Sep 2022 11:07:07 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/rust-interactive/</guid>
      <description>&lt;p&gt;RustでAtCoderのインタラクティブ問題の入出力方法がわからなかったのでメモ&lt;/p&gt;
&lt;p&gt;proconio クレートの &lt;code&gt;[fastout]&lt;/code&gt; は使わないで下のようにすれば良い。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::io::BufReader;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; proconio::{input, source::line::LineSource};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; stdin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; std::io::stdin();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; source &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; LineSource::new(BufReader::new(stdin));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    input&lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        from &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; source,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        n: &lt;span style=&#34;color:#66d9ef&#34;&gt;usize&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.(&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;省略&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc269/submissions/34963751&#34;&gt;https://atcoder.jp/contests/abc269/submissions/34963751&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoderで水色になりました</title>
      <link>https://matsueushi.github.io/atcoder/cyan/</link>
      <pubDate>Sun, 18 Sep 2022 09:48:50 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/cyan/</guid>
      <description>&lt;p&gt;UNICORNプログラミングコンテスト2022(AtCoder Beginner Contest 269)でAtCoder水色に上がりました。
&lt;a href=&#34;https://atcoder.jp/users/matsueushi&#34;&gt;https://atcoder.jp/users/matsueushi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;緑に上がった後にJuliaではなくRustを使い始めたので最初のうちは言語の違いに苦戦していました。
とはいえまだコレクションの扱いなどはいつもドキュメントや自分のメモを見返しながら実装しているので慣れたいですね。&lt;/p&gt;
&lt;p&gt;バーチャルコンテストなどはやっておらずAtCoderProblemsで緑diffの問題を中心に解くというやり方でした。
今後は水色維持・青色達成に向けてわからない問題の解説をしっかり読み込んでいこうと思います。&lt;/p&gt;
&lt;h3 id=&#34;課題だと思っているもの&#34;&gt;課題だと思っているもの&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;水、青diffで解いている問題数が純粋に少ない&lt;/li&gt;
&lt;li&gt;実装速度&lt;/li&gt;
&lt;li&gt;インタラクティブ問題: Rustで解いたことがなかったので、ABC269のコンテストにJuliaで慌てて解くことになりました&lt;/li&gt;
&lt;li&gt;mod計算のライブラリ&lt;/li&gt;
&lt;li&gt;Mo&amp;rsquo;s algorithm&lt;/li&gt;
&lt;li&gt;グラフアルゴリズム&lt;/li&gt;
&lt;li&gt;FFT&lt;/li&gt;
&lt;li&gt;ヒューリスティック: 全くやっていません。「&lt;a href=&#34;https://book.mynavi.jp/ec/products/detail/id=131288&#34;&gt;競技プログラミングの鉄則&lt;/a&gt;」を買ったので、挑戦してみたいです&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;../green/&#34;&gt;AtCoderで緑色になりました&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 268 C Chinese Restaurant</title>
      <link>https://matsueushi.github.io/atcoder/abc268c/</link>
      <pubDate>Sun, 11 Sep 2022 22:55:10 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc268c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc268/tasks/abc268_c&#34;&gt;https://atcoder.jp/contests/abc268/tasks/abc268_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;人 $i$ の前に料理 $p_i$ が置かれている場合、その皿だけ考えると、mod Nで考えて、
$i-p_i-1, i-p_i, i-p_i+1$ だけ料理をずらした時に幸福値が1増えてそれ以外だと幸福値は増えない。&lt;/p&gt;
&lt;p&gt;xs[i] = (テーブルをiだけずらした時の幸福数)&lt;/p&gt;
&lt;p&gt;としてxsを更新していけば良い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc268/submissions/34802426&#34;&gt;https://atcoder.jp/contests/abc268/submissions/34802426&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AERO GROS M - Chocolate Hearts and Stag Beetles (2021)</title>
      <link>https://matsueushi.github.io/posts/aero-gros-m-chocolate-hearts-and-stag-beetles/</link>
      <pubDate>Wed, 31 Aug 2022 18:27:44 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/aero-gros-m-chocolate-hearts-and-stag-beetles/</guid>
      <description>&lt;p&gt;HexD という音楽のジャンルがある。&lt;/p&gt;
&lt;p&gt;2010 年後半に SoundCloud で発生した新しいジャンルで、 ハードコアやトランス、クラウドラップ、ブレイクコア、トラップなどのエレクトロニックミュージックを土台として、 音割れしたビットクラッシャーノイズが前面に散りばめられているLo-fiサウンドが大きな特徴だ。&lt;/p&gt;
&lt;p&gt;曲の中でもアニメやゲームの楽曲や効果音がサンプリングされて使われていることもしばしば。この辺りのサンプリング文化はVaporwaveやFuture Funkに通じるところがある。&lt;/p&gt;
&lt;iframe style=&#34;border: 0; width: 350px; height: 786px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=1285367536/size=large/bgcol=ffffff/linkcol=0687f5/transparent=true/&#34; seamless&gt;&lt;a href=&#34;https://erogros.bandcamp.com/album/chocolate-hearts-and-stag-beetles&#34;&gt;Chocolate Hearts and Stag Beetles by AERO GROS M&lt;/a&gt;&lt;/iframe&gt;
&lt;p&gt;シューゲイザーがロックミュージックと楽器による轟音ノイズの融合だとすると、HexD はエレクトロミュージックとデジタルノイズの融合である。&lt;/p&gt;
&lt;p&gt;一時期シューゲイザーにハマっていた私にとっては轟音ビットクラッシュノイズで埋め尽くされるような音像が描き出される HexD は新鮮であると同時にどこか親しみを感じさせるジャンルだ。&lt;/p&gt;
&lt;p&gt;HexD というジャンル名は、SoundCloud のにアップロードされた Rare RCB hexD.mp3 という曲名から由来しているらしい。Surge とも呼ばれることがあるようだ。&lt;/p&gt;
&lt;p&gt;HexDのアーティストの代表格はおそらくFax Gangなのではないかと思う。だが今回はあえてAERO GROS M のアルバム “Chocolate Hearts and Stag Beetles” を紹介したい。(Fax GangのPK Shellboyと2曲目で共作している。)&lt;/p&gt;
&lt;p&gt;エコーがかかったデジタルノイズが刻まれたビートに乗って脳に流れ込む。音の輪郭が曖昧になり、陶酔感を超えて酩酊した時のような混沌が脳の中に作り出される感じがしてとても良い。&lt;/p&gt;
&lt;p&gt;アルバムの中でもCloud rap のスタイルで魔法少女まどか☆マギカの「コネクト」のサンプリングがノイズ、効果音と神々しく混じり合う&amp;quot;loveliescrushing&amp;quot;という曲は特に素晴らしい。&lt;/p&gt;
&lt;p&gt;YouTubeに本人？がアップロードした動画の説明に&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/l1VL72Yzw60&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;this is a song about how much we hate you. if you think this isn&amp;rsquo;t about you, it probably is.&lt;/p&gt;
&lt;p&gt;なんて不穏なことが書いてありますね。&lt;/p&gt;
&lt;p&gt;暴力的な音圧のノイズ(This HeatのTestcardを連想した)と甘いメロティが混沌と入れ替わる&amp;quot;&amp;amp;&amp;ldquo;も聴いていてとにかく新鮮だ。&lt;/p&gt;
&lt;p&gt;好きな曲: loveliescrushing, &amp;amp;, FL€€T FOXES, In the Hull of a Dying Spaceship&lt;/p&gt;
&lt;hr&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://erogros.bandcamp.com/album/chocolate-hearts-and-stag-beetles&#34;&gt;bandcamp&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://rateyourmusic.com/genre/hexd/&#34;&gt;Rate Your Music - HexD&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://avyss-magazine.com/2021/01/05/22954/&#34;&gt;ビットクラッシュの海で泳ぐ｜Fax Gangがデビューアルバム『Aethernet』をリリース&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://avyss-magazine.com/2022/04/15/35315/&#34;&gt;ビットクラッシュの未来を想う｜Fax Gangが新作アルバム『Dataprism』を発表&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://daily.bandcamp.com/features/fax-gang-aethernet-interview&#34;&gt;Meet Fax Gang, the Discord Server-Turned Music Collective Built Around “Bitcrushing”&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rustでcargo test中にprintlnする</title>
      <link>https://matsueushi.github.io/posts/rust-test-nocapture/</link>
      <pubDate>Sun, 28 Aug 2022 13:42:37 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/rust-test-nocapture/</guid>
      <description>&lt;p&gt;&lt;code&gt;cargo test&lt;/code&gt;でテストを実行しているとき、出力はキャプチャされてしまってテスト実行画面に出てこないが、&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ cargo test -- --nocapture
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;で出てくるようにできるようだ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://jonalmeida.com/posts/2015/01/23/print-cargo/&#34;&gt;Enabling print statements in Cargo tests&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 181 F - Silver Woods</title>
      <link>https://matsueushi.github.io/atcoder/abc181-f/</link>
      <pubDate>Sat, 20 Aug 2022 11:55:41 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc181-f/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc181/tasks/abc181_f&#34;&gt;https://atcoder.jp/contests/abc181/tasks/abc181_f&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$r$ を動かした時に、動かす円の中心が存在できない範囲を考えてみる。
壁もしくは障害物から距離 $r$ 未満の位置に円の中心を配置することができないことを考えると、動かせない範囲は下の青色で示した領域の内部になる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/atcoder/abc181-f-0.svg&#34; alt=&#34;fig0&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/atcoder/abc181-f-1.svg&#34; alt=&#34;fig1&#34;&gt;&lt;/p&gt;
&lt;p&gt;上の壁と下の壁が図で示した青色の領域を通じて繋がっていなければ円が通過でき、繋がっていれば円が通過できない。
繋がっているか繋がっていないかはUnionFindで判定できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$y=100$ と 釘 $(x_i, y_i)$ が繋がっている &amp;lt;=&amp;gt; $y_i + 2 r &amp;gt; 100$&lt;/li&gt;
&lt;li&gt;$y=-100$ と 釘 $(x_i, y_i)$ が繋がっている &amp;lt;=&amp;gt; $y_i - 2 r &amp;lt; 100$&lt;/li&gt;
&lt;li&gt;釘 $(x_i, y_i)$ と 釘 $(x_j, y_j)$ が繋がっている &amp;lt;=&amp;gt; $(x_i-x_j)^2 + (y_i-y_j)^2 &amp;lt; (2r)^2$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これで $r$ が与えられたときの判定方法がわかったので、あとは $r$ を二分探索する。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc181/submissions/34127397&#34;&gt;https://atcoder.jp/contests/abc181/submissions/34127397&lt;/a&gt; (Rust, 14ms)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Toytown - Killed My Dog (2019)</title>
      <link>https://matsueushi.github.io/posts/toytown-killed-my-dog/</link>
      <pubDate>Sat, 13 Aug 2022 22:26:20 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/toytown-killed-my-dog/</guid>
      <description>&lt;iframe style=&#34;border-radius:12px&#34; src=&#34;https://open.spotify.com/embed/album/5CM0APYOX2xwhrSCT8Yn1c?utm_source=generator&#34; width=&#34;100%&#34; height=&#34;380&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;&#34; allow=&#34;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;オーストラリアのシンガーソングライターCeleb Toogoodによるソロプロジェクト（多分）Toytown。&lt;/p&gt;
&lt;p&gt;ゆるいベッドルーム・ポップだが曲がどれもいい。どこかふざけた感じというか捻った感じがあるのも自分にはストライク。
マック・デマルコが好きな人なら刺さるのではないでしょうか。&lt;/p&gt;
&lt;p&gt;かなり推したいアルバム、アーティストなのだが、悲しいことに知名度が無に近く、詳しい情報も不明です。
Spotifyの再生回数、YouTubeのMVの再生回数、Facebookのいいね数、軒並みどれも低く、謎です。&lt;/p&gt;
&lt;p&gt;アルバムを2019年に出して以降目立った活動が見られないですが、
どうかこのままフェードアウトせずに次の作品を聞かせてほしいです。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://toytown.bandcamp.com/&#34;&gt;bamdcamp&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/user/muccadore&#34;&gt;YouTube&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/toytowntunes&#34;&gt;Facebook&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.instagram.com/_toytown_/&#34;&gt;Instagram&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://soundcloud.com/toytowntunes&#34;&gt;SoundCloud&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Dockerコンテナ上でコミットしようとしたらGPGのエラーが出てきた</title>
      <link>https://matsueushi.github.io/posts/vscode-container-gpg/</link>
      <pubDate>Sat, 13 Aug 2022 17:57:16 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/vscode-container-gpg/</guid>
      <description>&lt;p&gt;vscodeでアタッチしたコンテナからコミットしようとすると、&lt;/p&gt;
&lt;p&gt;fatal: cannot run /usr/local/bin/gpg: No such file or directory&lt;/p&gt;
&lt;p&gt;というメッセージが出てコミットできない。ローカルではGPGの設定をしているのだが、コンテナ内では設定されていないので怒られている模様。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&amp;gt; git -c user.useConfigOnly&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true commit --quiet --allow-empty-message --file - -S
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fatal: cannot run /usr/local/bin/gpg: No such file or directory
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;error: gpg failed to sign the data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fatal: failed to write commit object
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/36941533/git-hub-desktop-on-mac-error-cannot-run-gpg-no-such-file-or-directory&#34;&gt;https://stackoverflow.com/questions/36941533/git-hub-desktop-on-mac-error-cannot-run-gpg-no-such-file-or-directory&lt;/a&gt;
を参考にして、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;git config --global gpg.program &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;which gpg&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;をコンテナ内で実行したら解決した。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Rustでargminやargmaxはどう書くのか</title>
      <link>https://matsueushi.github.io/posts/julia-rust/</link>
      <pubDate>Sat, 23 Jul 2022 14:15:19 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-rust/</guid>
      <description>&lt;p&gt;Julia では &lt;code&gt;argmin&lt;/code&gt; とか &lt;code&gt;argmax&lt;/code&gt; などの関数が用意されていたのですが、
Rust で同様の処理をする方法がわからず毎回調べて時間を消耗していたので、まとめておこうと思います。&lt;/p&gt;
&lt;p&gt;もっと簡単な書き方があれば教えてください。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;fld-cld&#34;&gt;&lt;code&gt;fld&lt;/code&gt;, &lt;code&gt;cld&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;fld&lt;/code&gt;は&lt;code&gt;/&lt;/code&gt;を単に使えば良い気もします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; a: &lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(num::Integer::div_floor(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;a, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;b), &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; a: &lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(num::Integer::div_ceil(&lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;a, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;b), &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;broadcast&#34;&gt;&lt;code&gt;broadcast&lt;/code&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;map&lt;/code&gt; を使えば良い。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x: &lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x.abs());
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().map(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x:&lt;span style=&#34;color:#66d9ef&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x.abs()).collect::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;diff&#34;&gt;diff&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;(){
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; d: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a.windows(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;).map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;w&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; w[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; w[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]).collect();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(d, [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;findminitrhttpsdocsjulialangorgenv1basecollectionsbasefindmin&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/collections/#Base.findmin&#34;&gt;&lt;code&gt;findmin(itr)&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().enumerate().min_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;(_, x)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, Some((&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;(index, x)&lt;/code&gt; の順になる。&lt;a href=&#34;https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.min_by_key&#34;&gt;&lt;code&gt;min_by_key&lt;/code&gt;&lt;/a&gt; は最小値を達成するインデックスが複数ある場合、最初のインデックスを返すところは &lt;code&gt;findmin&lt;/code&gt; と同じですね。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;findmaxitrhttpsdocsjulialangorgenv1basecollectionsbasefindmax&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/collections/#Base.findmax&#34;&gt;&lt;code&gt;findmax(itr)&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://doc.rust-lang.org/stable/std/iter/trait.Iterator.html#method.max_by_key&#34;&gt;&lt;code&gt;max_by_key&lt;/code&gt;&lt;/a&gt; を使って書くと&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().enumerate().max_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;(_, x)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, Some((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;(index, x)&lt;/code&gt; の順になる。&lt;code&gt;max_by_key&lt;/code&gt;は最大値が達成するインデックスが複数ある時、最後のインデックスが帰ってくるので、
最初のインデックスを返す &lt;code&gt;findmax&lt;/code&gt; とは挙動が異なる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; core::cmp::Reverse;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().enumerate().min_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;(_, x)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Reverse(x));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, Some((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;)));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば最初のインデックスを返せる。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;argminitrhttpsdocsjulialangorgenv1basecollectionsbaseargmin&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/collections/#Base.argmin&#34;&gt;&lt;code&gt;argmin(itr)&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;findmin&lt;/code&gt; とほぼ同じ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().enumerate().min_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;(_, x)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x).map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, Some(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;argmaxitrhttpsdocsjulialangorgenv1basecollectionsbaseargmax&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/collections/#Base.argmax&#34;&gt;&lt;code&gt;argmax(itr)&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;findmax&lt;/code&gt; とほぼ同じ。最大値を取る添字が複数ある場合に最後のインデックスを返したければ、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().enumerate().max_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;(_, x)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x).map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, Some(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最初としたければ、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; core::cmp::Reverse;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .iter()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .enumerate()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .min_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;(_, x)&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; Reverse(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .map(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x.&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, Some(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;cumsumitrhttpsdocsjulialangorgenv1basearraysbasecumsum&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/arrays/#Base.cumsum&#34;&gt;&lt;code&gt;cumsum(itr)&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;itertools_num&lt;/code&gt; を使ってよければ、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; itertools_num::ItertoolsNum;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; x: Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;i64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.iter().cumsum().collect();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最初に0を入れ込みたい場合は、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;v.len() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x.push(x[i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; v[i]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://toslunar.hatenablog.com/entry/2022/01/20/213251&#34;&gt;Rust の Iterator で cumsum をどう書くべきか、あるいは map の闇&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;cumproditrhttpsdocsjulialangorgenv1basearraysbasecumprod&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/arrays/#Base.cumprod&#34;&gt;&lt;code&gt;cumprod(itr)&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;v.len() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x.push(x[i] &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; v[i]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, vec![&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;sortpermhttpsdocsjulialangorgenv1basesortbasesortperm&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/sort/#Base.sortperm&#34;&gt;&lt;code&gt;sortperm&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;v.len()).collect::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x.sort_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;v[i]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;sortがunstableでよければ、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;mut&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;..&lt;/span&gt;v.len()).collect::&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Vec&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&lt;/span&gt;();
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x.sort_unstable_by_key(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&lt;/span&gt;v[i]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;searchsortedfirsthttpsdocsjulialangorgenv1basesortbasesortsearchsortedfirst&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/sort/#Base.Sort.searchsortedfirst&#34;&gt;&lt;code&gt;searchsortedfirst&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1.52.0 以降だと &lt;a href=&#34;https://doc.rust-lang.org/std/primitive.slice.html#method.partition_point&#34;&gt;&lt;code&gt;partition_point&lt;/code&gt;&lt;/a&gt; が使える。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;));
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;AtCoder で使える Rust 1.42.0 だと工夫して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::cmp::Ordering::{Greater, Less};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;) { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;) { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;) { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;(x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;) { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h3 id=&#34;searchsortedlasthttpsdocsjulialangorgenv1basesortbasesortsearchsortedlast&#34;&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/sort/#Base.Sort.searchsortedlast&#34;&gt;&lt;code&gt;searchsortedlast&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;p&gt;1.52.0 以降だと &lt;a href=&#34;https://doc.rust-lang.org/std/primitive.slice.html#method.partition_point&#34;&gt;&lt;code&gt;partition_point&lt;/code&gt;&lt;/a&gt; が使える。
インデックスに注意。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v.partition_point(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;use&lt;/span&gt; std::cmp::Ordering::{Greater, Less};
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;main&lt;/span&gt;() {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;];
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt; { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;let&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .binary_search_by(&lt;span style=&#34;color:#f92672&#34;&gt;|&amp;amp;&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; { Less } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; { Greater })
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        .unwrap_or_else(&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt;i&lt;span style=&#34;color:#f92672&#34;&gt;|&lt;/span&gt; i);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    assert_eq!(i, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;p&gt;&lt;code&gt;usize&lt;/code&gt; で 絶対値をを取るとき (abs_diffが入っていないバージョンの時)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-rust&#34; data-lang=&#34;rust&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;fn&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;abs_diff&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;(a: &lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;, b: &lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;) -&amp;gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    T: &lt;span style=&#34;color:#a6e22e&#34;&gt;Sub&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; T&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; PartialOrd,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; b {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    } &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        b &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Bookmark</title>
      <link>https://matsueushi.github.io/other/bookmark/</link>
      <pubDate>Mon, 18 Jul 2022 18:25:28 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/other/bookmark/</guid>
      <description>&lt;p&gt;完全に自分用です。&lt;/p&gt;
&lt;h4 id=&#34;調べ物&#34;&gt;調べ物&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ndlonline.ndl.go.jp&#34;&gt;国立国会図書館オンライン&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rnavi.ndl.go.jp/jp/index.html&#34;&gt;リサーチ・ナビ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.jinbun-db.com/&#34;&gt;人文系データベース協議会&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;図書館関連&#34;&gt;図書館関連&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.libraryfair.jp/&#34;&gt;図書館総合展&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://libmaro.kyoto.jp/&#34;&gt;ししょまろはんラボ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://asoblib.blogspot.com/2019/01/in-2.html&#34;&gt;図書館で著作権処理やってた人が没年調査ソン in福井 第2回に参加して考えたこと&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;音楽関連&#34;&gt;音楽関連&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://qururi0000.blog78.fc2.com/&#34;&gt;90年代シティポップ記録簿(90&amp;rsquo;s City Pop Record Book)&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;プログラミング関連&#34;&gt;プログラミング関連&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.bioerrorlog.work/entry/rust-good-learning-resources&#34;&gt;Rustの良質な学習リソースをまとめる&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h4 id=&#34;たまに振り返って読みたくなるもの&#34;&gt;たまに振り返って読みたくなるもの&lt;/h4&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://deoran.blog.fc2.com/blog-entry-80.html&#34;&gt;笑笑果茶、その半年間の軌跡&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://deoran.blog.fc2.com/blog-category-15.html&#34;&gt;とうもろこし牛乳タピオカ再生プロジェクト&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
 &lt;!-- - [2021年　匿名ダイアリーTOP200](https://anond.hatelabo.jp/20220102052334) --&gt;</description>
    </item>
    
    <item>
      <title>セグメント木でできることを整理する</title>
      <link>https://matsueushi.github.io/other/segtree/</link>
      <pubDate>Sun, 03 Jul 2022 20:57:40 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/other/segtree/</guid>
      <description>&lt;p&gt;実装方法ではなく使い方のメモです。
計算する区間の添字の流儀は &lt;a href=&#34;https://atcoder.github.io/ac-library/production/document_ja/index.html&#34;&gt;AtCoder Library&lt;/a&gt; を参考にしています。&lt;/p&gt;
&lt;p&gt;まだ整理できていないもの&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;双対セグメント木&lt;/li&gt;
&lt;li&gt;2Dセグ木&lt;/li&gt;
&lt;li&gt;永続セグメント木&lt;/li&gt;
&lt;li&gt;imos法？&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;フェニック木fenwick-tree-bit-indexed-tree&#34;&gt;フェニック木(Fenwick Tree, Bit Indexed Tree)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;一点加算更新・区間加算&lt;/strong&gt; のクエリが処理できるデータ構造。&lt;/p&gt;
&lt;p&gt;できることは限られているが、同じ処理をセグメント木や遅延セグメント木で行うときよりも高速に動作し、実装も比較的シンプル。&lt;/p&gt;
&lt;h3 id=&#34;処理できるクエリ&#34;&gt;処理できるクエリ&lt;/h3&gt;
&lt;p&gt;$a = \{a_i\}_{i=0}^{n-1}$ を長さが $n$ で初期値が全て $0$ の配列とする。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;(一点加算更新) インデックス $i$ と値 $x$ が与えられたとき、配列を $a_i \coloneqq a_i + x$ と更新する。計算量 $O(\log n)$&lt;/li&gt;
&lt;li&gt;(区間加算) インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の和 $\sum_{i=l}^{r-1} a_i$ を計算する。計算量 $O(\log n)$&lt;/li&gt;
&lt;/ol&gt;
&lt;h3 id=&#34;具体例例題&#34;&gt;具体例・例題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/practice2/tasks/practice2_b&#34;&gt;AtCoder Library Practice Contest B - Fenwick Tree&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;セグメント木segment-tree&#34;&gt;セグメント木(Segment Tree)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;一点更新・区間取得&lt;/strong&gt; のクエリが処理できるデータ構造。&lt;/p&gt;
&lt;h3 id=&#34;処理できるクエリ-1&#34;&gt;処理できるクエリ&lt;/h3&gt;
&lt;p&gt;セグメント木で扱う値の集合は、&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%A2%E3%83%8E%E3%82%A4%E3%83%89&#34;&gt;モノイド&lt;/a&gt;である必要がある。
$S = (S, \cdot, e)$ をモノイド、
$a = \{a_i\}_{i=0}^{n-1}$ を長さが $n$ で初期値が全て $e$ の配列とする。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;(一点更新) インデックス $i$ と値 $x \in S$ が与えられたとき、配列を $a_i = x$ と更新する。計算量 $O(\log n)$&lt;/li&gt;
&lt;li&gt;(区間取得) インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の(モノイドの)積 $\prod_{i=l}^{r-1} a_i$ を計算する。計算量 $O(\log n)$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;また、$O(1)$ で $a_i$ の値を一点取得できる。&lt;/p&gt;
&lt;h3 id=&#34;具体例例題-1&#34;&gt;具体例・例題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/practice2/tasks/practice2_j&#34;&gt;AtCoder Library Practice Contest J - Segment Tree&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Fenwick Tree) モノイド $S$ の演算を加算 $+$ とすると、Fenwick Treeになる。$S = (\mathbb{Z}, 0, +)$ とすると、整数の配列のFenwickTree。一点更新/一点加算更新は適切に読み替える必要がある。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(Range Minimum Query) $S=(\mathbb{Z} \cup \{\infty\}, \min, \infty)$ とおくと、区間取得として以下を実現する Range Minimum Query となる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の最小値 $\min_{i=l}^{r-1} \{a_i\}$ を計算する。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(BitXor) &lt;a href=&#34;https://atcoder.jp/contests/abc185/tasks/abc185_f&#34;&gt;AtCoder Beginner Contest 185 F - Range Xor Query&lt;/a&gt;
$S=(\mathbb{Z}, \veebar, 0)$ とすると XOR が処理できる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(BitOr) $S=(\mathbb{Z}, \lor, 0)$ とすると OR が処理できる。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;(区間加算・一点取得) セグメント木を利用して、区間加算・一点取得のクエリを処理できる。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;(区間加算) インデックスの組 $(l, r)$ と値 $x$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素に $x$ を加算する。つまり、$i \in [l, r)$ に対して $a_i = a_i + x$ と更新する。&lt;/li&gt;
&lt;li&gt;(一点取得) $a_i$ の値を取得する。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;これは、前項との差分の数列 $b_i$ に対してモノイド $S = (\mathbb{Z}, 0, +)$ を考慮したセグメント木を作成して管理する、という考え方になる。区間加算については $b_l = b_l + x, b_r = b_r - x$ と 一点取得・一点更新を2回実施し、一点取得に対しては、$\sum_{k=0}^{i}b_k$ を求めるため、区間 $[0, i+1)$ の区間取得を実施すれば良い。(imos法の考え方と似ている)&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;遅延セグメント木lazy-segment-tree&#34;&gt;遅延セグメント木(Lazy Segment Tree)&lt;/h2&gt;
&lt;p&gt;通常のセグメント木の一点更新は点を含む全ての区間の値を更新するので、区間更新の計算量が多い。
そのため二分木を二つ使って区間取得操作や二度目の更新操作の時まで値の更新を遅延させる。&lt;/p&gt;
&lt;p&gt;これにより、&lt;strong&gt;区間更新・区間取得&lt;/strong&gt; のクエリが処理できる。&lt;/p&gt;
&lt;h3 id=&#34;処理できるクエリ-2&#34;&gt;処理できるクエリ&lt;/h3&gt;
&lt;p&gt;遅延セグメント木でもセグメント木と同様に管理する値の集合がモノイドであることを仮定する。
さらに遅延セグメント木では、値の更新処理のクエリも二分木を使って蓄積管理していく対象でもある。
よって、二種類のモノイド構造を考えることになる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(セグメント木上に乗せるデータ) モノイド $S = (S, \cdot_S, e_S)$&lt;/li&gt;
&lt;li&gt;(遅延伝播させるデータ) モノイド $X = (X, \cdot_X, e_X)$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;さらに、更新処理を行うモノイド $X$ が 更新される側のモノイド $S$ との関係を考えるために、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;モノイド $X$ の モノイド $S$ に対する &lt;a href=&#34;https://ja.wikipedia.org/wiki/%E4%BD%9C%E7%94%A8_(%E6%95%B0%E5%AD%A6)&#34;&gt;右作用&lt;/a&gt; $* : S \times X \rightarrow S$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が定義されているとする。このとき、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;(区間更新) インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素に $x$ を作用させる。つまり、$i \in [l, r)$ に対して $a_i = a_i * x$ と更新する。計算量 $O(\log n)$&lt;/li&gt;
&lt;li&gt;(区間取得) インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の(モノイドSに定義された)積 $\prod_{i=l}^{r-1} a_i$ を計算する。計算量 $O(\log n)$&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;の二つのクエリが処理できる。$a_i$ の値を一点取得する場合はセグメント木とは違い $O(\log n)$ かかる。&lt;/p&gt;
&lt;h3 id=&#34;具体例例題-2&#34;&gt;具体例・例題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;(セグメント木) セグメント木は遅延セグメント木で次のように表現できる。
&lt;ul&gt;
&lt;li&gt;$S = (S, \cdot_S, e_S)$ をセグメント木で用いているモノイドとする。&lt;/li&gt;
&lt;li&gt;$X = \{id_S\} \cup \{f_t: S \rightarrow S, s \mapsto t, t\in S\}$ という $S$ から $S$ への写像からなる集合を考え、$\cdot_X$ は写像の合成、 $e_X = id_S$ とすると、$(X, \cdot_X, e_X)$ はセグメント木の代入に対応するモノイドとなる。&lt;/li&gt;
&lt;li&gt;セグメント木では一点更新・区間取得であったが、遅延セグメント木に上の構造を入れると区間更新・区間取得ができるようになる。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;(区間アフィン更新・区間取得)
&lt;a href=&#34;https://atcoder.jp/contests/practice2/tasks/practice2_k&#34;&gt;AtCoder Library Practice Contest K - Range Affine Range Sum&lt;/a&gt;&lt;br&gt;
計算対象は整数列。(正確には $p=998244353$ とした時の $(\mathbb{Z}/p\mathbb{Z}, +, 0)$ を考えている)
&lt;ol&gt;
&lt;li&gt;インデックスの組 $(l, r)$ と値 $b, c$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素をアフィン変換する。つまり、 $i \in [l, r)$ に対して $a_i = b \times a_i + c$ と更新する。&lt;/li&gt;
&lt;li&gt;インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の和 $\sum_{i=1}^{r-1}a_i$ を計算する。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$b&amp;rsquo; \times (b \times a + c) + c&amp;rsquo; = bb&amp;rsquo; \times a + (b&amp;rsquo;c + c&amp;rsquo;)$ だから、$X=(\mathbb{Z} \times \mathbb{Z}, \cdot, (1,0)), (b&amp;rsquo;, c&amp;rsquo;) \cdot (b, c) = (bb&amp;rsquo;, b&amp;rsquo;c + c&amp;rsquo;)$ と定義することで表現できる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;(区間最大値更新・区間取得)
&lt;a href=&#34;https://atcoder.jp/contests/typical90/tasks/typical90_ac&#34;&gt;競プロ典型 90 問 029 - Long Bricks（★5）&lt;/a&gt;&lt;br&gt;
更新操作は最大値を区間取得 -&amp;gt; 区間代入操作の組み合わせで実現できる。$S = (\mathbb{N}, \max, 0)$ で、$X$ はセグメント木の具体例で考えたものと同じ。
&lt;ol&gt;
&lt;li&gt;インデックスの組 $(l, r)$ と値 $b, c$ が与えられたとき、区間 $[l, r)$ に対応する配列を次のように更新する。$i \in [l, r)$ に対して $a_i = \max_{i=l}^{r-1} a_i + 1$ と更新する。&lt;/li&gt;
&lt;li&gt;インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の最大値 $\max_{i=l}^{r-1} a_i$ を計算する。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;(区間更新・区間転倒数取得)
&lt;a href=&#34;https://atcoder.jp/contests/practice2/tasks/practice2_l&#34;&gt;AtCoder Library Practice Contest L - Lazy Segment Tree&lt;/a&gt;
0と1からなる数列 $A$ に対し、
&lt;ol&gt;
&lt;li&gt;インデックスの組 $(l, r)$ と値 $b, c$ が与えられたとき、区間 $[l, r)$ に対応する配列を次のように更新する。$i \in [l, r)$ に対して $a_i = 1 - a_i$ と更新する。&lt;/li&gt;
&lt;li&gt;インデックスの組 $(l, r)$ が与えられたとき、区間 $[l, r)$ に対応する配列の要素の転倒数を計算する。&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;(並び替え)
&lt;a href=&#34;https://atcoder.jp/contests/abc237/tasks/abc237_g&#34;&gt;AtCoder Beginner Contest 237 G - Range Sort Query&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考&#34;&gt;参考&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;プログラミングコンテストチャレンジブック pp.153-172&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://algo-logic.info/segment-tree/&#34;&gt;セグメント木を徹底解説！0から遅延評価やモノイドまで&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ikatakos.com/pot/programming_algorithm/data_structure/segment_tree&#34;&gt;セグメント木 [いかたこのたこつぼ]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://qiita.com/xryuseix/items/8c2f7a5fe830b92ce2fe&#34;&gt;Range Add Query (RAQ)を図でわかりやすく解説&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://kmyk.github.io/blog/blog/2019/02/22/dual-segment-tree/&#34;&gt;双対セグメント木という概念について - うさぎ小屋&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ikatakos.com/pot/programming_algorithm/data_structure/segment_tree/lazy_segment_tree&#34;&gt;遅延評価セグメント木 [いかたこのたこつぼ]&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.github.io/ac-library/production/document_ja/lazysegtree.html&#34;&gt;AC Library - Lazy Segtree&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cympfh.cc/aiura/monoidic-act-and-lazy-segment-tree&#34;&gt;モノイド作用付きモノイド, 遅延セグメントツリー&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://cympfh.cc/procon/seq.lazy_segment_tree.html&#34;&gt;数列 - 遅延伝播セグメントツリー (遅延セグ木)&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://chuka231.blogspot.com/2021/05/segment-tree-problems-in-atcoder.html&#34;&gt;chuka231&amp;rsquo;s blog: Segment Tree problems in Atcoder&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://perogram.hateblo.jp/entry/2020/01/06/030505&#34;&gt;セグメント木で使える演算子 segment tree, lazy 〃(自分用メモ) - perogram&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%A2%E3%83%8E%E3%82%A4%E3%83%89&#34;&gt;モノイド - Wikipedia&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>BPM15Q / BPM15Q ALL SONGS (2016)</title>
      <link>https://matsueushi.github.io/posts/bpm15q-all-songs/</link>
      <pubDate>Thu, 30 Jun 2022 21:45:02 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bpm15q-all-songs/</guid>
      <description>&lt;p&gt;2021年に解散したアイドルグループCY8ERの前身であるBPM15Qが唯一世に送り出したアルバムである。私はこのアルバムはアイドルという枠を超えた普遍的な名盤だと思う。criminally underrated album と言いたい。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;元BiS、元アキシブprojectメンバーの”苺りなはむ”と、クラブシーンでも活躍する”にかもきゅ”の二人により2015年5月31日に結成された、ニューエイジボカールDJユニット”BPM15Q(ビーピーエムイチゴーキュー)”待望のファースト・アルバムがリリース!ファンから音源化の要望も多かった、プティパ-petit pas!-とのコラボ曲も収録。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ファーストアルバムと書かれているが実質的には (BPM15Qとしては) ラストアルバム、ベストアルベムである。アルバムにつけられた品番が &amp;ldquo;BPM15-9&amp;rdquo; であることもBPM15Q自体の活動の集大成をこの一枚に凝縮したという意思が伝わる。&lt;/p&gt;
&lt;p&gt;ジャンルといえばElectro Pop, (Kawaii) Future Bassといったところか。
「BPM15Q!」で始まり「GOOD LUCK」で締められる。可愛いピコピコサウンドなのだが、アルバムを通して聞いた後には
目眩く楽しい夢のような時間が気づくと終わっているような、そんな寂寥感をどこか感じさせる。&lt;/p&gt;
&lt;p&gt;BPM15Qから体制が変わり(改名という立て付けだったが実質的には別物だと思う)CY8ERになった後のアルバムも聞いたが、この「BPM15Q ALL SONGS」のアルバムとしての完成度は頭一つ抜けている。
CY8ERになってからこのアルバムに収録されている曲は再録されているが、うまく言葉で言い表せないが「BPM15Q ALL SONGS」に収録されているものとは自分の中では別物のように感じられる。&lt;/p&gt;
&lt;p&gt;参考だが、CDとストリーミングでは収録曲が少し異なっている。ストリーミングではコラボ曲「ごーしゅー」が削除され、最終曲は、「GOOD LUCK」の後の再会を予期させるような、Lolica Tonicaのヒイラギペイジによる「ゆびきり」に差し替えられている。アルバムとしての曲の並びの完成度という意味ではCDよりストリーミングの方が上だろう。&lt;/p&gt;
&lt;p&gt;CDは残念ながらプレミア価格となり高騰してしまっているが、幸いなことにサブスクで配信されているので聴くのは容易。是非聴いてみてほしい。&lt;/p&gt;
&lt;iframe style=&#34;border-radius:12px&#34; src=&#34;https://open.spotify.com/embed/album/6c0LbqeSKtQxwkhqOB7ZWS?utm_source=generator&#34; width=&#34;100%&#34; height=&#34;380&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;&#34; allow=&#34;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&#34;&gt;&lt;/iframe&gt;
</description>
    </item>
    
    <item>
      <title>Tenka1 Programmer Contest C - Align</title>
      <link>https://matsueushi.github.io/atcoder/tenka1-2018-c/</link>
      <pubDate>Sun, 19 Jun 2022 21:07:30 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/tenka1-2018-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/tenka1-2018/tasks/tenka1_2018_c&#34;&gt;https://atcoder.jp/contests/tenka1-2018/tasks/tenka1_2018_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;正の整数からなる数列 $\{A_i\}_i$ が与えられた時に、
数列を自由に並び替えた時の隣り合う要素の差の合計の最大値を求めよ、という問題。&lt;/p&gt;
&lt;p&gt;大小関係がジグザグにすれば良い、ということはなんとなくわかったが、
解説を読んでもピンと来なかったので整理しておく。&lt;/p&gt;
&lt;p&gt;まず、$A_i$ はソートされていると考えて良いだろう。すると、次のような問題を考えれば良いことになる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/atcoder/tenka1-2018-fig1.svg&#34; alt=&#34;fig1&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数直線の上に $\{A_i\}_i$ が並んでいる。始点と終点を異なるように選び、全ての点を一回ずつ通って進む。移動距離の最大値を求めよ。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$A_i$ と $A_{i+1}$ が作る区間を $I_i$ とし、その長さを $B_i = A_{i+1}-A_i$ とおく。
上の図だと、$A_1$ から $A_5$ まで点があり、区間が $I_1$ から $I_4$ まである。&lt;/p&gt;
&lt;h3 id=&#34;始点終点の場合を考えてみる&#34;&gt;始点=終点の場合を考えてみる&lt;/h3&gt;
&lt;p&gt;脱線するが、最初に始点 = 終点 となる場合の変種を考える。&lt;/p&gt;
&lt;p&gt;それぞれの区間を通過する最大回数を考える。
$I_1$ から順番に考えていくと、$I_1$ を通過するのは $A_1$ から出ていく時か、$A_1$ に入る時の高々2回しかない。
$I_2$ を考えると、 $I_1$ で考えた $A_1$ から出ていく矢印、 $A_1$ に戻る矢印がそのまま2を通過する場合と、
新たに $A_2$ に出入りする矢印がある場合の高々4通りである。&lt;/p&gt;
&lt;p&gt;このように考え、さらに左右の対称性も考慮すると、区間 $I_i$ を通過する回数は、最大 $2\min (i, n-i)$ 回であることがわかる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/atcoder/tenka1-2018-fig2.svg&#34; alt=&#34;fig2&#34;&gt;&lt;/p&gt;
&lt;p&gt;また、この最大値をとるような動き方は、上の図のようにジグザグに移動することで必ず達成でき、
$2\sum_{i=1}^{n-1} \min (i, n-i) B_i$ が移動距離の最大値であることがわかる。&lt;/p&gt;
&lt;h3 id=&#34;始点と終点が異なる場合&#34;&gt;始点と終点が異なる場合&lt;/h3&gt;
&lt;p&gt;始点と終点が異なる場合、移動距離 $2\sum_{i=1}^{n-1} \min (i, n-i) B_i$ は達成できない。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/atcoder/tenka1-2018-fig3.svg&#34; alt=&#34;fig3&#34;&gt;&lt;/p&gt;
&lt;p&gt;しかし、上のようにジグザグに動くことを考えると、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$n = 2m-1$, 奇数の場合 : $2\sum_{i=1}^{n-1} \min (i, n-i) B_i - B_{m-1}$ や $2\sum_{i=1}^{n-1} \min (i, n-i) B_i - B_m$&lt;/li&gt;
&lt;li&gt;$n = 2m$, 偶数の場合 : $2\sum_{i=1}^{n-1} \min (i, n-i) B_i - B_m$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;は達成できることがわかる。それぞれ始点、終点の位置の集合は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$n = 2m-1$, 奇数の場合 : $\{A_{m-1},A_m\}$ または $\{A_m,A_{m+1}\}$&lt;/li&gt;
&lt;li&gt;$n = 2m$, 偶数の場合 : $\{A_m,A_{m+1}\}$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;と中央の位置にある場合になる。始点と終点が一致する時の通過回数の最大回数に比べ、通過回数の差は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$n = 2m-1$, 奇数の場合 : $I_{m-1}$ または $I_m$ が1回少なく通過&lt;/li&gt;
&lt;li&gt;$n = 2m$, 偶数の場合 :  $I_m$ が1回少なく通く&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;区間を通過する回数を始点=終点の時と同様に考えると、それ以外の位置に始点、終点がある場合通過区間の通過した回数が少なくなることがわかる。(最適な始点・終点の位置より外側に配置すると通過できない回数が増え、上に挙げたいずれかの場合よりも距離が短くなる)&lt;/p&gt;
&lt;p&gt;結局、ジグザグに動く時が最適になり、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$n = 2m-1$, 奇数の場合 : $2\sum_{i=1}^{n-1} \min (i, n-i) B_i - \min (B_{m-1},B_m)$&lt;/li&gt;
&lt;li&gt;$n = 2m$, 偶数の場合 : $2\sum_{i=1}^{n-1} \min (i, n-i) B_i - B_m$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が答えになることがわかる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/tenka1-2018/submissions/32590060&#34;&gt;https://atcoder.jp/contests/tenka1-2018/submissions/32590060&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>全国統一プログラミング王決定戦予選 C - Different Strokes</title>
      <link>https://matsueushi.github.io/atcoder/nikkei2019-qual-c/</link>
      <pubDate>Tue, 14 Jun 2022 22:55:50 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/nikkei2019-qual-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_c&#34;&gt;https://atcoder.jp/contests/nikkei2019-qual/tasks/nikkei2019_qual_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;2人が最適な戦略を取るとき、残っている料理のうち $A_i+B_i$ が最大となるものを交互に選んでいくことになることを示す。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;3
20 10
20 20
20 30
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;この入力の場合を考える。&lt;/p&gt;
&lt;p&gt;Aの立場で考えてみよう。
全部相手に料理を食べられてしまった時の自分から見た幸福度の差は、$-B_1-B_2-B_3$ である。料理 $i$ を食べると、この値が $A_i+B_i$ 改善することがわかる。そのため、Aの立場で考えると $A_i+B_i$ が大きいものを優先して食べたいことがわかる。&lt;/p&gt;
&lt;p&gt;次にBの立場で考えてみると、同じように $A_i+B_i$ が大きいものを優先するのが最適解であることが同様の議論でわかる。
A も B も料理 $i$ を食べるとそれぞれの立場で見た幸福度の差が $A_i+B_i$ 改善するため、$A_i+B_i$ と書かれた $N$ 個の料理を合計の数値が最大となるよう二人で交互に取り合っているのと同値な状況とみなせる。&lt;/p&gt;
&lt;p&gt;$A_i+B_i$ を降順にソートし、奇数番目を高橋くん、偶数番目を青木さんが選んだとして幸福度の差を計算すればOK。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/nikkei2019-qual/submissions/32474436&#34;&gt;https://atcoder.jp/contests/nikkei2019-qual/submissions/32474436&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 121 D - XOR World</title>
      <link>https://matsueushi.github.io/atcoder/abc121-d/</link>
      <pubDate>Tue, 14 Jun 2022 21:31:14 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc121-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc121/tasks/abc121_d&#34;&gt;https://atcoder.jp/contests/abc121/tasks/abc121_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ビットごとの排他的論理和は二回繰り返すと元に戻り、可換で結合法則を満たすことから、&lt;/p&gt;
&lt;p&gt;$f(A,B)=A \veebar A+1 \veebar \cdots \veebar B = (0 \veebar 2 \veebar \cdots \veebar A-1) \veebar (0 \veebar 2 \veebar \cdots \veebar B) = f(1,A-1) \veebar f(1,B)$&lt;/p&gt;
&lt;p&gt;だから、$A=0$ の場合に帰着される。&lt;/p&gt;
&lt;p&gt;それぞれの桁毎に、$0~B$ に出てくる $1$ の数が偶数個か奇数個か数えれば、$f(1,B)$ の各ビットがわかる。 $A=0$ の $1,2,3,&amp;hellip;$ のビット表示を確認すると、&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;10進数&lt;/th&gt;
&lt;th&gt;2進数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;0&lt;/td&gt;
&lt;td&gt;00000000&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;1&lt;/td&gt;
&lt;td&gt;00000001&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2&lt;/td&gt;
&lt;td&gt;00000010&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3&lt;/td&gt;
&lt;td&gt;00000011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4&lt;/td&gt;
&lt;td&gt;00000100&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;$1$ の位は $0 \rightarrow 1 \rightarrow 0  \rightarrow 1 \rightarrow \cdots$ と1つごとに切り替わり、 $2$ の位は $0 \rightarrow 0 \rightarrow 1 \rightarrow 1 \rightarrow \cdots$ と2つ毎に切り替わり、と規則的になっている。&lt;/p&gt;
&lt;p&gt;$2^i$ 桁目のビットを考えよう。$i=0$ の時は $B \equiv 1 \mod 4$ なら $1$, それ以外なら $0$ が立っている。&lt;/p&gt;
&lt;p&gt;$i \ge 1$ であれば、$2^{i+1}$ 毎に $1$ が $2^i$ 個(偶数個)出てくるから、$1$ の出現数の偶奇は $(B+1) \mod 2^{i+1}$ で考えれば良い。
$2^{i+1}$ 個ごとの $0/1$ の出現順は、最初に $0$ が $2^i$ 個続き、そのあと $1$ が $2^i$ 個続くから、 $1$ の数は、$\max(0, ((B+1) \mod 2^{i+1}) - 2^i)$。
この数が偶数なら $0$, 奇数なら $1$ のビットが立っている。&lt;/p&gt;
&lt;p&gt;(実装は結構手間取りました)
&lt;a href=&#34;https://atcoder.jp/contests/abc121/submissions/32474342&#34;&gt;https://atcoder.jp/contests/abc121/submissions/32474342&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 147 D - Xor Sum 4</title>
      <link>https://matsueushi.github.io/atcoder/abc147-d/</link>
      <pubDate>Mon, 13 Jun 2022 21:39:24 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc147-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc147/tasks/abc147_d&#34;&gt;https://atcoder.jp/contests/abc147/tasks/abc147_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;もちろん素朴に計算していては間に合わないが、ビット毎に考えれば良い。&lt;/p&gt;
&lt;p&gt;$z_i = 1 \ll i$ とおくと、任意の $x$ に対して $x = \sum_i x \&amp;amp; z_i$ であり、
$(x \oplus y) \&amp;amp; z_i = (x \&amp;amp; z_i )\oplus (y \&amp;amp; z_i)$ である。&lt;/p&gt;
&lt;p&gt;$\sum_{i=1}^{N-1} \sum_{j=i+1}^N (A_i \oplus A_j) = \sum_k \sum_{i=1}^{N-1} \sum_{j=i+1}^N ((A_i \&amp;amp; z_k) \oplus (A_j \&amp;amp; z_k))$
であり、右のように変形すると、$A_i \&amp;amp; z_k = 0$ または $z_k$ であるので計算が簡単にできる。&lt;/p&gt;
&lt;p&gt;$B_k = \#\{ i \mid A_i \&amp;amp; z_k = 0 \}, C_k = \#\{ i \mid A_i \&amp;amp; z_k = z_k \}$ とおくと、
$(A_i \&amp;amp; z_k) \oplus (A_j \&amp;amp; z_k)$ は&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$0 \oplus 0 = 0$&lt;/li&gt;
&lt;li&gt;$0 \oplus z_k = z_k$&lt;/li&gt;
&lt;li&gt;$z_k \oplus 0 = z_k$&lt;/li&gt;
&lt;li&gt;$z_k \oplus z_k = 0$&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;の4通りなので、
$\sum_{i=1}^{N-1} \sum_{j=i+1}^N ((A_i \&amp;amp; z_k) \oplus (A_j \&amp;amp; z_k)) = B_k * C_k * z_k$ である。
あとはこれを $k$ について足し合わせる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc147/submissions/32456970&#34;&gt;https://atcoder.jp/contests/abc147/submissions/32456970&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder AGC 023 A - Zero-Sum Ranges</title>
      <link>https://matsueushi.github.io/atcoder/agc023-a/</link>
      <pubDate>Mon, 13 Jun 2022 21:26:12 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/agc023-a/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc023/tasks/agc023_a&#34;&gt;https://atcoder.jp/contests/agc023/tasks/agc023_a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$C_j = \sum_{k=1}^j A_k$ とおくと、 $\sum_{k=i}^j A_k = 0 \Leftrightarrow C_j = C_{k-1}$ であるから、
累積和を求めて $C_0=0, C_j = \sum_{k=1}^j A_k$ とおき、 $I_x = \{ i \mid C_i = x\}$ を計算して、$\sum_x |I_x| (|I_x|-1)/2$ を求めれば良い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc023/submissions/32455933&#34;&gt;https://atcoder.jp/contests/agc023/submissions/32455933&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 255 C - ±1 Operation 1 </title>
      <link>https://matsueushi.github.io/atcoder/abc255-c/</link>
      <pubDate>Sun, 12 Jun 2022 21:11:31 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc255-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/tasks/abc255_c&#34;&gt;https://atcoder.jp/contests/abc255/tasks/abc255_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$\min_{i=0,\ldots,n-1}|A+Di-X|$ を求めれば良い。$y=A+Dx$ と $y=X$ の交点を求め、
$x &amp;lt; 0, 1 \le x \le n-1 ,x &amp;gt; n-1$ の場合に応じて計算すれば良い。&lt;/p&gt;
&lt;p&gt;$|A+Di-X|$ が最も小さくなるのは、$x$ に最も近い $0\le i \le n-1$ を選んだ時である。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/submissions/32387318&#34;&gt;https://atcoder.jp/contests/abc255/submissions/32387318&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 255 D - ±1 Operation 2</title>
      <link>https://matsueushi.github.io/atcoder/abc255-d/</link>
      <pubDate>Sun, 12 Jun 2022 21:11:31 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc255-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/tasks/abc255_d&#34;&gt;https://atcoder.jp/contests/abc255/tasks/abc255_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$i$ を一つ固定した時、操作の最低回数は $\sum_{j=1}^N |A_j-X_i|$ である。&lt;/p&gt;
&lt;p&gt;$A_k$ の順番は関係ないので、 $A_k$ は昇順にソートしているとして良い。$A_k$ をソートするのは最初に一回だけやれば良い。&lt;/p&gt;
&lt;p&gt;累積和 $C_k = \sum_{j=1}^k A_j$ を使って  $S = \sum_{j=1}^N |A_j-X|$ を次のように求める。
$l = \max \{ j \mid A_j \le X\}$ とすると $S = (lX - C_l) + ((C_N-C_l) - (N-l)X)$ となる。&lt;/p&gt;
&lt;p&gt;$A = [1,2,4,5], X=3$ の時、求めたいのは下の赤と青の面積で、&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/atcoder/abc255-d.svg&#34; alt=&#34;hist&#34;&gt;&lt;/p&gt;
&lt;p&gt;$l = 2$ で赤色の部分が $lX - C_l$, 青色の部分が $(C_N-C_l) - (N-l)X$ に対応。&lt;/p&gt;
&lt;p&gt;各クエリに対して2分探索するところで $O(\log N)$ 時間かかるので、$O(Q\log N)$ で全てのクエリを処理できる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/submissions/32393722&#34;&gt;https://atcoder.jp/contests/abc255/submissions/32393722&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 255 E - Lucky Numbers</title>
      <link>https://matsueushi.github.io/atcoder/abc255-e/</link>
      <pubDate>Sun, 12 Jun 2022 21:11:31 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc255-e/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/tasks/abc255_e&#34;&gt;https://atcoder.jp/contests/abc255/tasks/abc255_e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$A_1 = \alpha$ とおくと、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;$A_2 = S_1 - A_1 = S_1 - \alpha$&lt;/li&gt;
&lt;li&gt;$A_3 = S_2 - A_2 = S_2 - S_1 + \alpha$
&amp;hellip;
となることがわかる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;$T_1 = 0, T_k = \sum_{i=1}^{k-1} (-1)^{i+k+1}S_k$ とおくと、どんな $A$ に対しても、 ある $\alpha$ が存在して $A_k = T_k + (-1)^{k+1} \alpha$ が全ての $k$ に対して成り立つことがわかる。&lt;/p&gt;
&lt;p&gt;$F(i,\alpha) = |\{ k \mid  T_k + (-1)^{k+1} \alpha = X_i \} |$ とする。
これは、 $i, \alpha$ に対して、$X_i = T_k + (-1)^{k+1} \alpha$ となる $k$ を数えていることになる。$T, X$ の条件から $F(i,\alpha) \neq 0$ となる $\alpha$ は絞り込むことができる。&lt;/p&gt;
&lt;p&gt;あとは、$i$ を動かして $\sum_i F(i,\alpha)$ の最大値を取れば良い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc255/submissions/32403143&#34;&gt;https://atcoder.jp/contests/abc255/submissions/32403143&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder diverta 2019 Programming Contest D - DivRem Number</title>
      <link>https://matsueushi.github.io/atcoder/diverta2019-d/</link>
      <pubDate>Sat, 11 Jun 2022 19:45:34 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/diverta2019-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/diverta2019/tasks/diverta2019_d&#34;&gt;https://atcoder.jp/contests/diverta2019/tasks/diverta2019_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$t = \lfloor n/m\rfloor = n \mod m$ とおくと $0 \le t &amp;lt; m$であり、$n=\alpha m + t$ とおける。
$t$ の条件から $\alpha = \lfloor n/m\rfloor = t$ だから結局 $n = t(m+1)$ とかける。&lt;/p&gt;
&lt;p&gt;$n = t(m+1) \ge t^2$ より、$t \le \sqrt{n}$ を探索すれば良い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/diverta2019/submissions/32371542&#34;&gt;https://atcoder.jp/contests/diverta2019/submissions/32371542&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder APC 001 B - Two Arrays</title>
      <link>https://matsueushi.github.io/atcoder/apc001-b/</link>
      <pubDate>Fri, 10 Jun 2022 08:35:23 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/apc001-b/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/apc001/tasks/apc001_b&#34;&gt;https://atcoder.jp/contests/apc001/tasks/apc001_b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;$c_i = a_i - b_i$ とする。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;3
1 2 3
5 2 2
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;であれば $c = [-4,0,1]$ となる。 目的は、全ての $i$ に対して $c_i = 0$ とすること。&lt;/p&gt;
&lt;p&gt;$a_i$ に $2$ を足し、$b_i$ に $1$ を足す操作は、$i=j$ であれば $c_i$ に $1$ を足し(操作1とする）、
$i \neq j$ ならば $c_i$ に $2$ を足し、$c_j$ から $1$ を引く操作(操作2とする)に対応する。
数字を減らすのは操作2でしか行えないことに注意。&lt;/p&gt;
&lt;p&gt;$c_i$ を非負の部分と負の部分に分け、
$I_+ = \{ i \mid c_i ≥ 0\}, I_- = \{ i \mid c_i &amp;lt; 0 \}$,
$S = \sum_{i \in I+} c_i, V = \sum_{i \in I-}\lfloor |c_i|/2 \rfloor$ とおく。&lt;/p&gt;
&lt;p&gt;$S$ は、操作2を行わなくてはいけない最低回数、$V$ は $0$ を超えないようにマイナスになっている $c_i$ に $2$ を足すことのできる最大回数とも考えられる。&lt;/p&gt;
&lt;p&gt;操作1で任意の場所の数字を任意の数だけ増やせるので、$I_+ = \empty$ つまり $S=0$ の状態にできれば良い。&lt;/p&gt;
&lt;p&gt;操作1 または 操作2 で $S$ を減らすことを考える。&lt;/p&gt;
&lt;p&gt;操作2で、$c_i \le -2, c_j &amp;gt; 0$ となっている $i,j$ を選んで $c_i$ に $+2$, $c_j$ に $-1$ すること(操作☆と呼ぶ)でしか $S$ は減らせないことがわかる。
この時、$S、V$ がともに1減少する。&lt;/p&gt;
&lt;p&gt;それ以外のパターンを考えると、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;操作1 -&amp;gt; $c_i \ge 0$ なら $S$ が1増加、それ以外なら $V$ が0または1減少&lt;/li&gt;
&lt;li&gt;操作2 -&amp;gt; $+2$ する操作により、 $S$ が 1以上増加するか $V$ が1減少する。$c_j \le 0$ の時、$-1$ する操作では $V$ を高々1しか増やせない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;上により、どう頑張っても $V$ を増やすことはできないことがわかる。&lt;/p&gt;
&lt;p&gt;$S ≤ V$ ならば、$c_i \le -2, c_j &amp;gt; 0$ となっている $i,j$ を選んで操作☆を続けることで $S=0$ とできる。
それ以外ならどう頑張っても $S$ 回上のような操作ができないので、目的が達成できない。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/apc001/submissions/32369370&#34;&gt;https://atcoder.jp/contests/apc001/submissions/32369370&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 198 D - Send More Money</title>
      <link>https://matsueushi.github.io/atcoder/abc198-d/</link>
      <pubDate>Tue, 07 Jun 2022 23:42:09 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc198-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc198/tasks/abc198_d&#34;&gt;https://atcoder.jp/contests/abc198/tasks/abc198_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;覆面算を解く問題。Send More Moneyって何？と思ったのですが &lt;code&gt;SEND + MORE = MONEY&lt;/code&gt; という覆面算が有名らしいです。&lt;/p&gt;
&lt;p&gt;戦略としては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;S_1, S_2, S_3&lt;/code&gt; に出てくる文字の集合を作る。10種類以上出てきたら &lt;code&gt;UNSOLVABLE&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;先ほど文字の集合に番号をつける。順番はどうでもいい。&lt;code&gt;[&#39;v&#39;, &#39;f&#39;, &#39;c&#39;]&lt;/code&gt; だったら v = 1番目、f = 2番目、のような対応づけをする。&lt;/li&gt;
&lt;li&gt;これにより、&lt;code&gt;S_1, S_2, S_3&lt;/code&gt; が &lt;code&gt;[3,5,1], [1,4,2], [2,2,2]&lt;/code&gt; のような 1~10の整数の数列に変換できる。&lt;/li&gt;
&lt;li&gt;あとは 1~10番目の文字に対して 0~9 の数字をどのように当てはめるか全探索。
全探索しても10!=3628800通りなので間に合う。
Julia だと C++ における &lt;a href=&#34;https://www.cplusplus.com/reference/algorithm/next_permutation/&#34;&gt;&lt;code&gt;std::next_permutaiton&lt;/code&gt;&lt;/a&gt; が標準ライブラリに無い(存在を知らない) ので自分で作る必要がありますね。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc198/submissions/32308692&#34;&gt;https://atcoder.jp/contests/abc198/submissions/32308692&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 129 D - Lamp</title>
      <link>https://matsueushi.github.io/atcoder/abc129-d/</link>
      <pubDate>Tue, 07 Jun 2022 22:27:13 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc129-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc129/tasks/abc129_d&#34;&gt;https://atcoder.jp/contests/abc129/tasks/abc129_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;水平方向、垂直方向にそれぞれ見て行った時に、&amp;rsquo;#&amp;rsquo;, &amp;lsquo;.&amp;lsquo;の連続数を並べた数列を作る。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;#..#..
.....#
....#.
#.#...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;であったら&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[
    [1, 2, 1, 2],
    [5, 1],
    [4, 1, 1],
    [1, 1, 1, 3],
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;さらにこれの累積和をとると、&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;[
    [1, 3, 4, 6],
    [5, 6],
    [4, 5, 6],
    [1, 2, 3, 6],
]
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり、&lt;code&gt;(3,4)&lt;/code&gt;に置いた光が横方向にどれくらい届くか調べたかったら、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;code&gt;(3,4)&lt;/code&gt; が &amp;lsquo;.&amp;rsquo; であるかを調べる&lt;/li&gt;
&lt;li&gt;3行目の累積和 &lt;code&gt;[4, 5, 6]&lt;/code&gt;を見て、4番目を超えている場所のインデックスを探す(この場合は1番目)&lt;/li&gt;
&lt;li&gt;累積和を取る前の &lt;code&gt;[4, 1, 1]&lt;/code&gt; の対応する場所を見れば、横方向に連続している白マスがカウントできる。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;垂直方向も同様にカウントできる。&lt;code&gt;(横方向の連続数)+(縦方向の連続数)-1&lt;/code&gt; を白マスで計算してmaxを取れば良い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc129/submissions/32307404&#34;&gt;https://atcoder.jp/contests/abc129/submissions/32307404&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 153 E - Crested Ibis vs Monster</title>
      <link>https://matsueushi.github.io/atcoder/abc153-e/</link>
      <pubDate>Mon, 06 Jun 2022 22:06:55 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc153-e/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc153/tasks/abc153_e&#34;&gt;https://atcoder.jp/contests/abc153/tasks/abc153_e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;\(dp[i][k]\) = \(i\) 番目までの魔法からダメージが \(k\) 以上になるように選んだ時に消費するMPの最小値&lt;/p&gt;
&lt;p&gt;とすると、個数制限なしナップザック問題（の類似）に帰着される。
(参考:蟻本の2章 p.p.58 漸化式を工夫する)&lt;/p&gt;
&lt;p&gt;\(dp[i+1][k] = \min(dp[i][k], dp[i+1][k-a[i]]+b[i])\)&lt;/p&gt;
&lt;p&gt;である。ここで、\(dp[-1][k] = 0\) と \(dp[i][k] = 0 \ (k &amp;lt; 0)\) とおいた。&lt;/p&gt;
&lt;p&gt;答えは \(dp[n][h]\) であり、\(O(nh)\) で求められる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc153/submissions/32290815&#34;&gt;https://atcoder.jp/contests/abc153/submissions/32290815&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 161 D - Lunlun Number</title>
      <link>https://matsueushi.github.io/atcoder/abc161-d/</link>
      <pubDate>Sun, 05 Jun 2022 21:16:30 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc161-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc161/tasks/abc161_d&#34;&gt;https://atcoder.jp/contests/abc161/tasks/abc161_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;桁数の少ないルンルン数から順に作っていけば良い。&lt;/p&gt;
&lt;p&gt;1桁のルンルン数 = 1,2,&amp;hellip;,9&lt;/p&gt;
&lt;p&gt;2桁のルンルン数 = ([1 桁のルンルン数][最後の数字に-1,0,+1のどれかを足したもの]の順に繋げた数)&lt;/p&gt;
&lt;p&gt;3桁のルンルン数 = ([2 桁のルンルン数][最後の数字に-1,0,+1のどれかを足したもの]の順に繋げた数)&lt;/p&gt;
&lt;p&gt;このように考えていくと、自然にルンルン数が昇順に列挙できる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc161/submissions/32271070&#34;&gt;https://atcoder.jp/contests/abc161/submissions/32271070&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder CODE FESTIVAL 2017 qualC C - Inserting &#39;x&#39;</title>
      <link>https://matsueushi.github.io/atcoder/code-festival-2017-qualc-d/</link>
      <pubDate>Sun, 05 Jun 2022 18:08:29 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/code-festival-2017-qualc-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_c&#34;&gt;https://atcoder.jp/contests/code-festival-2017-qualc/tasks/code_festival_2017_qualc_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;目標が達成可能かどうかは、s から &amp;lsquo;x&amp;rsquo; を取り除いてできる文字列が回文であるかどうかで判定できる。
以後、目標が達成可能な場合を考える。&lt;/p&gt;
&lt;p&gt;s の &amp;lsquo;x&amp;rsquo; でない文字列のうち左から i 番目の文字を \(cs[i]\) とする。(i = 1,&amp;hellip;,m とする)&lt;/p&gt;
&lt;p&gt;\(ds[i]\) を \(cs[i]\) と \(cs[i+1]\) の間にある &amp;lsquo;x&amp;rsquo; の個数とする。
\(ds[0]\) を \(cs[1]\) の前にある &amp;lsquo;x&amp;rsquo; の数、\(ds[m]\) を \(cs[m]\) の後にある &amp;lsquo;x&amp;rsquo; の数と拡張しておく。&lt;/p&gt;
&lt;p&gt;s = &amp;ldquo;xabxa&amp;rdquo; の時は、cs = [&amp;lsquo;a&amp;rsquo;, &amp;lsquo;b&amp;rsquo;, &amp;lsquo;a&amp;rsquo;], ds = [1,0,1,0]である。&lt;/p&gt;
&lt;p&gt;&amp;lsquo;x&amp;rsquo; を挿入する操作は、ds の一つの数字を +1 することに相当する。ds が左右対称となった時文字列が回文になるから、
答えは l = length(ds) として \(\sum_{i=1}^{\lfloor l/2 \rfloor}|ds[i] - ds[l-i+1]| \) で求められる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/code-festival-2017-qualc/submissions/32267860&#34;&gt;https://atcoder.jp/contests/code-festival-2017-qualc/submissions/32267860&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 034 A - Kenken Race</title>
      <link>https://matsueushi.github.io/atcoder/agc034-a/</link>
      <pubDate>Sat, 04 Jun 2022 18:32:50 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/agc034-a/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc034/tasks/agc034_a&#34;&gt;https://atcoder.jp/contests/agc034/tasks/agc034_a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;すぬけくんしかいない場合を考えると、a地点からc地点に到達できる条件は、\([a,c]\)の間に連続する黒マスがないこと、である。&lt;/p&gt;
&lt;p&gt;2人いる場合を考えると、\(c&amp;lt;d \) の場合は、すぬけくんとふぬけくんの順序を入れ替える必要がないから、
ふぬけくんに先にゴースさせて、すぬけくんがその後ゴールすれば良い。
よって、一人だけの場合の条件をすぬけくん、ふぬけくんでそれぞれ考える。&lt;/p&gt;
&lt;p&gt;\(c &amp;gt; d \) の場合、順序を入れ替える必要がある。順序が入れ替わるのは、&lt;/p&gt;
&lt;p&gt;(す)(ふ)(空)&lt;/p&gt;
&lt;p&gt;という状態になっている時だから、ふぬけくんの現在いる位置、またはそれより右側で、前後が白マスになっているところを探す。
つまり、三連続で白マスになっている場所を探す。&lt;/p&gt;
&lt;p&gt;この時、候補の中で1番左の位置にある三連続白マスを考えれば良い。(状態が実現できなければ、それより右の三連続白マスで実現することは不可能のため)&lt;/p&gt;
&lt;p&gt;後は、&lt;/p&gt;
&lt;p&gt;(す)(ふ)(空)&lt;/p&gt;
&lt;p&gt;の状態に到達できるか確認して、到達できれば、順番を入れ替える必要がない\(c &amp;lt; d \)の場合に帰着できる。
この時、当初の目的地を飛び越えていないかもチェックする。
到達できなければ、実現不可能。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc034/submissions/32194980&#34;&gt;https://atcoder.jp/contests/agc034/submissions/32194980&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder AGC 011 B - Colorful Creatures</title>
      <link>https://matsueushi.github.io/atcoder/agc011-b/</link>
      <pubDate>Thu, 02 Jun 2022 23:12:47 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/agc011-b/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc011/tasks/agc011_b&#34;&gt;https://atcoder.jp/contests/agc011/tasks/agc011_b&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;\(A_i\) を降順にソートしても一般性を失わない。&lt;/p&gt;
&lt;p&gt;大きいものの方が吸収しづらいから、1番最後に\(1\), その前に \(2, \ldots, \)を吸収したとして良い。
\(A_1, \ldots, A_i\) を吸収するのに必要な最小のとなる生き物の大きさの整数値を \(B_i\) とする。&lt;/p&gt;
&lt;p&gt;\(B_1 = \lceil A_1 / 2\rceil \) である。
\(A_i\) が吸収でき、さらにその後 \(i-1, \ldots, 1\) が吸収できる条件を考えると、
\(B_i = \max(\lceil A_i / 2 \rceil, B_{i-1}-A_i)\) である。&lt;/p&gt;
&lt;p&gt;各 \(i \) に対し、\(i\) は \(i+1\) 以降を吸収できるから、\( \sum_{k=i}^n A_k \ge B_{i-1} \) を満たすかどうか判定すれば良い。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc011/submissions/32165993&#34;&gt;https://atcoder.jp/contests/agc011/submissions/32165993&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 134 D - Preparing Boxes</title>
      <link>https://matsueushi.github.io/atcoder/abc134-d/</link>
      <pubDate>Wed, 01 Jun 2022 22:16:01 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc134-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc134/tasks/abc134_d&#34;&gt;https://atcoder.jp/contests/abc134/tasks/abc134_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;条件を満たすボールの入れ方は、一意に定まる。&lt;/p&gt;
&lt;p&gt;n = 4 の場合、4 までに 3, 4 の倍数は一つしかないので、
| | |X|X|
a_3, a_4 の情報から i = 3,4 のボールの個数が確定する。&lt;/p&gt;
&lt;p&gt;次に、a_2 の情報から i = 2 のボールの個数が確定する。最後に i = 1 が確定する。&lt;/p&gt;
&lt;p&gt;このように考えると、第 k ステップで i ≥ floor(n/2^k) の場所のボールの個数が確定することがわかる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc134/submissions/32148310&#34;&gt;https://atcoder.jp/contests/abc134/submissions/32148310&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 064 D - Insertion</title>
      <link>https://matsueushi.github.io/atcoder/abc064-d/</link>
      <pubDate>Tue, 31 May 2022 22:18:08 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc064-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc064/tasks/abc064_d&#34;&gt;https://atcoder.jp/contests/abc064/tasks/abc064_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;先頭に&amp;quot;(&amp;quot;, 末尾に&amp;quot;)&amp;ldquo;を繋げて括弧列を作るのが辞書式最小となる。
(そのような作り方をしないと、より左の位置に&amp;rdquo;)&amp;ldquo;が出現する)&lt;/p&gt;
&lt;p&gt;&amp;ldquo;(&amp;rdquo; -&amp;gt; +1, &amp;ldquo;)&amp;rdquo; -&amp;gt; -1 と文字列を置き換えて累積和を取ったものを c[i] とすると、
c[i] ≥ 0 (1≤i≤n-1), c[n] = 0 が括弧列を成立させる条件である。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc064/submissions/32131694&#34;&gt;https://atcoder.jp/contests/abc064/submissions/32131694&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 133 D - Rain Flows into Dams</title>
      <link>https://matsueushi.github.io/atcoder/abc133-d/</link>
      <pubDate>Tue, 31 May 2022 21:40:17 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc133-d/</guid>
      <description>&lt;p&gt;山 i に降った雨の量を \(2 * x_i\) とすると、\(\sum A_i = 2 \sum x_i\) だから、\(x_i\) の合計がわかる。&lt;/p&gt;
&lt;p&gt;Nが奇数であることから \(A_i = x_i + x_{i+1}\) をうまく足して \(\sum_{i \neq j} x_i\) が作れ、合計から引くことで \(x_j\) が求められる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc133/submissions/32131263&#34;&gt;https://atcoder.jp/contests/abc133/submissions/32131263&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 094 C - Many Medians</title>
      <link>https://matsueushi.github.io/atcoder/abc094-c/</link>
      <pubDate>Mon, 30 May 2022 23:21:40 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc094-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc094/tasks/arc095_a&#34;&gt;https://atcoder.jp/contests/abc094/tasks/arc095_a&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;まず、具体例で考えてみる。aがソートされている場合を考えよう。&lt;/p&gt;
&lt;p&gt;1,2,3,4,5&lt;/p&gt;
&lt;p&gt;で左からi番目の数を取り除いた中央値を考えると&lt;/p&gt;
&lt;p&gt;3,3,2,2,2&lt;/p&gt;
&lt;p&gt;となる。&lt;/p&gt;
&lt;p&gt;1,2,2,3&lt;/p&gt;
&lt;p&gt;であれば&lt;/p&gt;
&lt;p&gt;2,2,2&lt;/p&gt;
&lt;p&gt;である。&lt;/p&gt;
&lt;p&gt;よって、pos = floor((l+1)/2), 取り除かれた値をxとすると、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;l が偶数の時&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;x ≤ a[pos] -&amp;gt; 取り除いた後は a[pos+1] が中央値&lt;/li&gt;
&lt;li&gt;x &amp;gt; a[pos] -&amp;gt; a[pos]&lt;/li&gt;
&lt;/ul&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;l が奇数の時&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;x &amp;lt; a[pos] -&amp;gt; a[pos]&lt;/li&gt;
&lt;li&gt;x ≥ a[pos] -&amp;gt; a[pos-1]&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;であることがわかる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc094/submissions/32115333&#34;&gt;https://atcoder.jp/contests/abc094/submissions/32115333&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 183 E - Queen on Grid</title>
      <link>https://matsueushi.github.io/atcoder/abc183-e/</link>
      <pubDate>Mon, 30 May 2022 23:05:11 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc183-e/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc183/tasks/abc183_e&#34;&gt;https://atcoder.jp/contests/abc183/tasks/abc183_e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;まず1次元で右にしか進めない場合を考える。
dp[i]=左からi番目に移動する方法
とする。&lt;/p&gt;
&lt;p&gt;dp[i]=2^(n-1)である。1,…,i-1それぞれで立ち止まるか通過するか選べると考えてもいいが、dp[1]=1であり、i番目にいる時、移動をそこでやめてそこで立ち止まってi+1に進むか、そのまま移動してi+1に行くかの2通りがあるので、dp[i+1]=2*dp[i]であると考えられる。&lt;/p&gt;
&lt;p&gt;2次元にすると、向きが変わる場合があるので&lt;/p&gt;
&lt;p&gt;各マスでの状態を&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;右向きで進んでいる&lt;/li&gt;
&lt;li&gt;下向きに進んでいる&lt;/li&gt;
&lt;li&gt;斜め右下向きに進んでいる&lt;/li&gt;
&lt;li&gt;立ち止まっている&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;という状態も含めて考える。
dp[1,1,1]=1,dp[1,1,k]=0 (k=1,2,3)で、&lt;/p&gt;
&lt;p&gt;dp[i,j,1]=dp[i-1,j,1]+dp[i-1,j,4]&lt;/p&gt;
&lt;p&gt;dp[i,j,2]=dp[i,-1j,2]+dp[i,j-1,4]&lt;/p&gt;
&lt;p&gt;dp[i,j,3]=dp[i-1,j-1,3]+dp[i-1,j-1,4]&lt;/p&gt;
&lt;p&gt;dp[i,j,4]=dp[i-1,j,1]+dp[i,j-1,2]+dp[i-1,j-1,3] + dp[i-1,j,4]+dp[i,j-1,4]+dp[i-1,j-1,4]&lt;/p&gt;
&lt;p&gt;最後に(h,w)で着地する必要があるので、dp[h,w,4]が答えである。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc183/submissions/32114608&#34;&gt;https://atcoder.jp/contests/abc183/submissions/32114608&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 130 C - Rectangle Cutting</title>
      <link>https://matsueushi.github.io/atcoder/abc130-c/</link>
      <pubDate>Mon, 30 May 2022 21:40:55 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc130-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc130/tasks/abc130_c&#34;&gt;https://atcoder.jp/contests/abc130/tasks/abc130_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;長方形の対角線の交点をCとする。C=(x,y)ならどのように切っても長方形の面積を二等分できる。
そうでない場合はCと(x,y)を結ぶと二等分できる。
よって最初の答えは(x,y)の位置に関係なく長方形の面積の半分。最適な切り方が複数あるかは、C=(x,y)であるかどうか。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc130/submissions/32113015&#34;&gt;https://atcoder.jp/contests/abc130/submissions/32113015&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder DISCO presents ディスカバリーチャンネル コードコンテスト2020 予選 C - Strawberry Cakes</title>
      <link>https://matsueushi.github.io/atcoder/ddcc2020-qual-c/</link>
      <pubDate>Sat, 28 May 2022 19:55:21 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/ddcc2020-qual-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_c&#34;&gt;https://atcoder.jp/contests/ddcc2020-qual/tasks/ddcc2020_qual_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;各行に一つ以上イチゴが乗っている場合、行ごとに分割すれば目的が達成できる。
ある行に注目したときに、&lt;/p&gt;
&lt;p&gt;|🍓|　|　|🍓|　|　|&lt;/p&gt;
&lt;p&gt;であれば&lt;/p&gt;
&lt;p&gt;|1|2|2|2|2|2|&lt;/p&gt;
&lt;p&gt;のような帯に切り分ける。これを繰り返していくとイチゴが乗っていない行以外は、
行だけで注目するとイチゴが一つだけ乗った長方形のケーキに分かれる。
後はイチゴが1つも乗っていない行の切り方をイチゴが乗っている上の行か下の行に合わせて長方形になるようにする。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/ddcc2020-qual/submissions/31996005&#34;&gt;https://atcoder.jp/contests/ddcc2020-qual/submissions/31996005&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 137 D - Summer Vacation</title>
      <link>https://matsueushi.github.io/atcoder/abc137-d/</link>
      <pubDate>Thu, 26 May 2022 23:47:34 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc137-d/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc137/tasks/abc137_d&#34;&gt;https://atcoder.jp/contests/abc137/tasks/abc137_d&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;後ろから貪欲法で解ける気がする。
M-1日目を考えると、 残っている仕事のうち、
Ai=1を満たす仕事で報酬Biが最大となるものを請けるとして良いことがわかる。&lt;/p&gt;
&lt;p&gt;必要であれば受けた仕事の順番を入れ替えて、
M-1日目にする仕事は、全てのN件の日雇いバイトの中でAi=1を満たし報酬Biが最大となる仕事である、とできる。&lt;/p&gt;
&lt;p&gt;次にM-2日目を考えると、できる仕事はAi=1,2である仕事。Ai=1,Biが最大となる仕事は最終日にやることが決まっているので、
M-1日目と同様の考察により、それを除いた仕事のうち報酬が最大となるものを働けば良い。&lt;/p&gt;
&lt;p&gt;以下繰り返す。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc137/submissions/31967629&#34;&gt;https://atcoder.jp/contests/abc137/submissions/31967629&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 117 C - Streamline</title>
      <link>https://matsueushi.github.io/atcoder/abc117-c/</link>
      <pubDate>Wed, 25 May 2022 23:28:21 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc117-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc117/tasks/abc117_c&#34;&gt;https://atcoder.jp/contests/abc117/tasks/abc117_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;数直線上に地点X_iを配置して、コマが移動した位置を塗りつぶすことを考える。&lt;/p&gt;
&lt;p&gt;移動回数を最小化したいので、塗りつぶす面積を最小化することを考える。&lt;/p&gt;
&lt;p&gt;X_1, &amp;hellip;, X_M によって M-1 個の区間が作られる。&lt;/p&gt;
&lt;p&gt;N=1だったら全ての区間をぬりぶさないとM個の地点全てに到達できない。
N=2だったら一つの区間は塗りつぶさずにスキップできる。
このように考えると、最大N-1個の区間は塗りつぶさずにスキップ可能であることがわかる。
よって、塗りつぶさないといけない区間はmax(0, M-N)個。&lt;/p&gt;
&lt;p&gt;区間の長さをソートし、短い順にmax(0, M-N)個の区間の長さの合計を求めると答えになる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc117/submissions/31965997&#34;&gt;https://atcoder.jp/contests/abc117/submissions/31965997&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder みんなのプロコン2019 C - When I hit my pocket...</title>
      <link>https://matsueushi.github.io/atcoder/yahoo-procon2019-c/</link>
      <pubDate>Wed, 25 May 2022 23:05:47 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/yahoo-procon2019-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_c&#34;&gt;https://atcoder.jp/contests/yahoo-procon2019-qual/tasks/yahoo_procon2019_qual_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;円は残しておいても最終的なビスケットの枚数の最大値には寄与しない。また、使い道はビスケットB枚に交換することのみ。&lt;/p&gt;
&lt;p&gt;よって、Kアクション与えられた際、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;1アクション使って、ビスケットを1枚増やす&lt;/li&gt;
&lt;li&gt;2アクション使って、ビスケットA枚をビスケットB枚に交換する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;この二つの選択の組み合わせでビスケットの枚数を最大化する、という問題に帰着される。&lt;/p&gt;
&lt;p&gt;一つ目の行動を二回繰り返すとビスケットが2枚増える、ということは B&amp;gt;A+2でないと二つ目の行動をする意味がない。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;B&amp;gt;A+2であったら二つ目の行動の方が効率が良いので、一つ目の行動でビスケットをA枚まで増やした後二つ目の行動を繰り返し、アクションが最後に1残ったら最後にもう一枚増やす&lt;/li&gt;
&lt;li&gt;B≤A+2だったら一つ目の行動を連打&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で良い。後はkとaの大小関係に注意すればOK&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/yahoo-procon2019-qual/submissions/31952356&#34;&gt;https://atcoder.jp/contests/yahoo-procon2019-qual/submissions/31952356&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 154 E - Almost Everywhere Zero</title>
      <link>https://matsueushi.github.io/atcoder/abc154-e/</link>
      <pubDate>Wed, 25 May 2022 21:30:34 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc154-e/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc154/tasks/abc154_e&#34;&gt;https://atcoder.jp/contests/abc154/tasks/abc154_e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;\(N\) の上 \(i\) 桁をつなげた数を \(N(i)\) とする。
\(N\) の上から \(i\) 桁目を \(N_i\) とする。\(N\) の桁数を \(l\) とする。&lt;/p&gt;
&lt;p&gt;\(dp[i,k,0] = \{ n \in \mathbb{Z} \mid  n &amp;lt; N(i) ,n の 0 でない数字の数が k \}\)
\(dp[i,k,1] = \{ n \in \mathbb{Z} \mid  n = N(i) ,n の 0 でない数字の数が k \}\)
とすると、求めたいのは \(dp[l,K,0] + dp[l,K,1]\) である。&lt;/p&gt;
&lt;p&gt;\(dp[i,0,0]=1, \) (0 に対応)&lt;/p&gt;
&lt;p&gt;\(dp[1,1,0] = N_1-1,\) (1,&amp;hellip;,N1- 1に対応)&lt;/p&gt;
&lt;p&gt;\(dp[1,k,0]= 0 (k \ge 2),\)&lt;/p&gt;
&lt;p&gt;\(dp[1,k,1] = 1,\)&lt;/p&gt;
&lt;p&gt;遷移を考えると&lt;/p&gt;
&lt;p&gt;\(dp[i+1,k,0] = dp[i,k,0]+9\cdot dp[i,k-1,0] (k \ge 1, N_{i+1}=0),\)&lt;/p&gt;
&lt;p&gt;\(dp[i+1,k,0] = dp[i,k,0]+9\cdot dp[i,k-1,0]+dp[i,k,1]+(N_{i+1}-1)dp[i,k-1,1] (k \ge 1, N_{i+1}\neq 0),\)&lt;/p&gt;
&lt;p&gt;\(dp[i+1,k,1] = dp[i,k,1] (N_{i+1} = 0),\)&lt;/p&gt;
&lt;p&gt;\(dp[i+1,k,1] = dp[i,k-1,1](N_{i+1} \neq 0),\)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc154/submissions/31951620&#34;&gt;https://atcoder.jp/contests/abc154/submissions/31951620&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;調べてみたらこういうものを桁DPというらしい。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;参考
&lt;a href=&#34;https://algo-logic.info/digit-dp/&#34;&gt;桁DP(Digit DP) を考え方から問題例まで徹底解説！&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 135 C - City Savers</title>
      <link>https://matsueushi.github.io/atcoder/abc135-c/</link>
      <pubDate>Wed, 25 May 2022 21:19:09 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc135-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc135/tasks/abc135_c&#34;&gt;https://atcoder.jp/contests/abc135/tasks/abc135_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;勇者が倒せるモンスターの数を無駄にしたくないので、
他の勇者が倒せるモンスターよりも自分しか倒せないモンスターを優先して倒すようにする。&lt;/p&gt;
&lt;p&gt;1番目の街のモンスターは1番目の勇者しか倒せないので、1番目の勇者は優先的に1番目の街のモンスターを倒し、
余力があれば2番の街のモンスターを倒す。
2番目の勇者は残っている2番目の街ののモンスターから倒す……
と順々に考えれば良い&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc135/submissions/31950249&#34;&gt;https://atcoder.jp/contests/abc135/submissions/31950249&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoderで緑色になった</title>
      <link>https://matsueushi.github.io/atcoder/green/</link>
      <pubDate>Sun, 15 May 2022 21:55:31 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/green/</guid>
      <description>&lt;p&gt;4月頭からAtCoder Beginner Contestに出ていたのですが、緑色になりました。
&lt;a href=&#34;https://atcoder.jp/users/matsueushi&#34;&gt;https://atcoder.jp/users/matsueushi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;蟻本を読みながら「競プロ典型90問」を9割ぐらい解答を見ながら解いて、その後はABCの過去問をA-D問題を中心に解いていました。
D問題で時間がかかってしまうことが多いので、&lt;a href=&#34;https://kenkoooo.com/atcoder/#/training/Boot%20camp%20for%20Beginners&#34;&gt;AtCoder Problems&lt;/a&gt; の「Boot camp for Beginners」を解きまくろうと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC 250 E - Prefix Equality</title>
      <link>https://matsueushi.github.io/atcoder/abc250-e/</link>
      <pubDate>Mon, 09 May 2022 21:47:26 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/abc250-e/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc250/tasks/abc250_e&#34;&gt;https://atcoder.jp/contests/abc250/tasks/abc250_e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コンテスト中は解けそうで解けなかったが、シンプルな方法で解けることにあとから気づいて悔やまれた。&lt;/p&gt;
&lt;p&gt;\(S_i= \{a_1, \ldots, a_i\}, T_i=\{b_i, \ldots, b_i \} \)とおくと、\( S_1 \subseteq S_2 \subseteq \cdots \subseteq S_n, T_1 \subseteq T_2 \subseteq \cdots \subseteq T_n\)となる。&lt;/p&gt;
&lt;p&gt;\(f_i= \max \{j \mid T_j \subseteq S_i \}, g_i= \max \{j \mid S_j \subseteq T_i \} \) を計算する。例えば\(f_i\)まで計算した後に\(f_{i+1}\)を計算するときは、\(b_{f_i+1}, b_{f_i+2}, \ldots , b_j\) が \(S_{i+1}\) に含まれているかをチェックしていき含まれなくなったら\(f_{i+1}=j-1\) とすれば良い。&lt;/p&gt;
&lt;p&gt;後は\(S_i = T_j \Leftrightarrow S_i \subseteq T_j, T_j \subseteq S_i \Leftrightarrow i \le g_j, j \le f_i\)でクエリを判定すれば良い。&lt;/p&gt;
&lt;p&gt;(Julia, 564 ms)
&lt;a href=&#34;https://atcoder.jp/contests/abc250/submissions/31571164&#34;&gt;https://atcoder.jp/contests/abc250/submissions/31571164&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>自分用メモ</title>
      <link>https://matsueushi.github.io/other/matsueushi-memo/</link>
      <pubDate>Sat, 23 Apr 2022 07:11:38 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/other/matsueushi-memo/</guid>
      <description>&lt;p&gt;Dockerでコンテナ作成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;docker run -p 8888:8888 --name &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;名前&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; -it -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;:/home/jovyan/work &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;イメージ名&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Discogsの高額CD, レコードの謎</title>
      <link>https://matsueushi.github.io/posts/discogs-money-laundering/</link>
      <pubDate>Fri, 04 Feb 2022 23:19:38 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/discogs-money-laundering/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://www.discogs.com&#34;&gt;Discogs&lt;/a&gt;というレコードやCDなど音源のデータベースかつマーケットプレイスのサイトで以前から気になっていることです。&lt;/p&gt;
&lt;p&gt;音楽好きなら結構知っているサイトで、自分も所持している音源について調べるときなどに使うのですが、
そこのマーケットプレイスでは、普段数千〜数万円の価格しかついていないのに、突然相場の10-100倍近く(数十万)で売買取引が成立していることがあるのです。&lt;/p&gt;
&lt;p&gt;そこまでレアなCDか？と思うようなものが過去に20万とか40万円で取引されていてかなり謎です(価格は右の方に表記あり)。
&lt;a href=&#34;https://www.discogs.com/ja/release/7218654-Heather-Nova-South&#34;&gt;https://www.discogs.com/ja/release/7218654-Heather-Nova-South&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.discogs.com/ja/release/15283232-Valerie-Carter-Midnight-Over-Honey-River&#34;&gt;https://www.discogs.com/ja/release/15283232-Valerie-Carter-Midnight-Over-Honey-River&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;マネーロンダリングという考察もあるようですが、真偽は不明です。誰か知っていたら教えてください。&lt;br&gt;
&lt;a href=&#34;https://forums.stevehoffman.tv/threads/money-laundering-on-discogs.1011027/&#34;&gt;Money Laundering on Discogs&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.discogs.com/forum/thread/913774&#34;&gt;Money Laundering?&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;後で読む用のメモ&lt;/p&gt;
&lt;p&gt;Everything We Know About Scaramanga Silk and Choose Your Weapon
&lt;a href=&#34;https://blog.discogs.com/en/scaramanga-silk-choose-your-weapon-most-expensive-record/&#34;&gt;https://blog.discogs.com/en/scaramanga-silk-choose-your-weapon-most-expensive-record/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Record by near-unknown producer sells for $41,000 to become most expensive on Discogs
&lt;a href=&#34;https://www.theguardian.com/music/2021/feb/03/record-by-near-unknown-producer-sells-for-41000-most-expensive-discogs-scaramanga-silk&#34;&gt;https://www.theguardian.com/music/2021/feb/03/record-by-near-unknown-producer-sells-for-41000-most-expensive-discogs-scaramanga-silk&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでAtCoderに挑戦</title>
      <link>https://matsueushi.github.io/atcoder/julia-atcoder/</link>
      <pubDate>Fri, 04 Feb 2022 23:09:38 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/julia-atcoder/</guid>
      <description>&lt;p&gt;去年は色々と忙しくじっくり勉強する時間がなかったので、リハビリを兼ねて競技プログラミングの問題をJuliaで挑戦してみることにします。&lt;/p&gt;
&lt;p&gt;ひとまず、AtCoderの&lt;a href=&#34;https://atcoder.jp/contests/typical90&#34;&gt;競プロ典型 90 問&lt;/a&gt;を解いて行く予定です。
ジャッジ時にJITコンパイルが走って200~300ms程度消費してしまいますが、幸い今のところTLEでどう頑張っても通せない問題はなかったです。&lt;/p&gt;
&lt;p&gt;下に解答を記録していこうと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/CompetitiveProgramming&#34;&gt;https://github.com/matsueushi/CompetitiveProgramming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;さてはて、いつまで続くやら。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2022/6/7 追記 (随時更新)&lt;/p&gt;
&lt;p&gt;ちょっとしたテクニック&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;入力&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parseint() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, readline())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parseints() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, split(readline()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; parsepoints(n&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs, ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, n), zeros(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xs[i], ys[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parseints()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs, ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; parsestrings(n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}(undef, n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ss[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; readline()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ss
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このようなテンプレートを作っておくと便利&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パッケージのバージョンを確認する
ローカルの実行環境をジャッジと合わせておかないと、予期しないエラーが起こる可能性あり。
コードテストで&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;status())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を実行すると使われているパッケージのバージョンが分かります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;~/.julia/environments/v1.4/Project.toml&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;864edb3b&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; DataStructures v0.17.11
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;27ebfcd6&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Primes v0.4.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nothing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;StringからVector{Char}への変換&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;}(s)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;負の数の剰余&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mod(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>2021年</title>
      <link>https://matsueushi.github.io/posts/2021/</link>
      <pubDate>Fri, 31 Dec 2021 21:05:26 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/2021/</guid>
      <description>&lt;p&gt;2021年は記事を更新できませんでしたが無事に生きてます。来年からはぼちぼち記事の更新を再開したいと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2021/3/1)</title>
      <link>https://matsueushi.github.io/playlist/20210228/</link>
      <pubDate>Mon, 01 Mar 2021 23:00:00 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20210228/</guid>
      <description>&lt;p&gt;最近更新が止まっておりました。あまりよく知らないアーティストが多い……&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;AKC Misi - Gyémánt ft. Kisé [Official Lyric Video] (prod. YBR)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/QKqDxYK-drU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;ハンガリーのラッパー？詳細不明。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.facebook.com/akcmisi/&#34;&gt;Facebook&lt;/a&gt;,
&lt;a href=&#34;https://soundcloud.com/akc-misi?fbclid=IwAR3CqN6bgGkLbMDu4IbXSkd0gLiUtWL8xsvw0JiU1NJ12uq4RnmGSvS_jLc&#34;&gt;SoundCloud&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/akcmisi&#34;&gt;Twitter&lt;/a&gt;,
&lt;a href=&#34;https://open.spotify.com/artist/4pWRro00gdnq90CwBmSCtv?si=XfvO99BIROidYx_Vcd1waA&#34;&gt;Spotify&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;YANUSHI &amp;ldquo;Knife in The Hot Water&amp;rdquo; Official Music Video

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/n5DcEM3JwSU&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Jacob Tanaka &amp;ldquo;Boat&amp;quot;Official Music Video

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/8z8ipEMOOt8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;4人組ロックバンド、家主（田中ヤコブはフロントマン）。優しく寄り添ってくれるようなグッドメロディだけれども、
同時に不思議な熱さを感じるというか。好きすぎて手に入るCD,LPは可能な限り集めたものの、&amp;ldquo;THE FOG&amp;quot;は売り切れていて見つからず。&lt;/p&gt;
&lt;p&gt;2月の田中ヤコブ＋家主のライブは行けなかったが、配信されていたのでそちらを見た。いずれちゃんと情報をまとめたい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/CobOji_&#34;&gt;Twitter(田中ヤコブ a.k.a 家主)&lt;/a&gt;,
&lt;a href=&#34;https://coboji.tumblr.com/&#34;&gt;Tumblr&lt;/a&gt;,
&lt;a href=&#34;https://open.spotify.com/artist/2rLK1nmuxeVG9mtZMWf3GB?si=oh5U4XjbSku4LlfwRpB8ww&#34;&gt;Spotify(家主)&lt;/a&gt;,
&lt;a href=&#34;https://open.spotify.com/artist/1DxNEhiV9wnWn1ZcAjjOMG?si=U9hLjWMrRX-JZ0LvI1nqZw&#34;&gt;Spotify(田中ヤコブ)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;meat computer / freedom from the world

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/WKnyjkuTR1A&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;こういう類の楽曲がCloud Rapなのだろうか？&lt;/p&gt;
&lt;p&gt;ジャンルは置いておいて、キラキラしたビートと囁く裏声のようなボーカルにより増幅される陶酔感が非常に新鮮だった。
&amp;ldquo;I like this new generation of music&amp;rdquo;.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://genius.com/artists/Meat-computer&#34;&gt;Genius&lt;/a&gt;によるとCanadian vocalist, songwriterとのことだが……&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://soundcloud.com/earthboymusic&#34;&gt;SoundCloud&lt;/a&gt;,
&lt;a href=&#34;https://www.instagram.com/meat.computer/&#34;&gt;Instagram&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/digitalself_&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;浪味仙貝 Lonely Cookies - 愛的招待 Love Treatment [OFFICIAL MUSIC VIDEO]

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wL8nXqCAj3w&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;中国のインディーポップバンド、浪味仙貝。なんか甘酸っぱい感じですね。NYAIっぽいというか。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://wildrecords.bandcamp.com/album/eastlake-swimming&#34;&gt;Bandcamp 东湖游泳 Eastlake Swimming&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;In October of 2019 I Called a Suicide Hotline For The First Time in My Life AMV

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/C9NqJ1YskPA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://yourarmsaremycocoonemo.bandcamp.com/releases&#34;&gt;Bandcamp&lt;/a&gt;
&lt;a href=&#34;https://twitter.com/urarmsrmycocoon&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;USシカゴのEMO(ソロプロジェクト？)your arms are my cocoonのデビューEP。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Loli in early 20s / 水中プードル&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/67UooPECzcwpiCVhf0ZBcR&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;おそらくロシアのLolicore?Breakcoreアーティスト。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://lolinearly20s.bandcamp.com/music&#34;&gt;Bandcamp&lt;/a&gt;,
&lt;a href=&#34;https://soundcloud.com/lolinearly20s&#34;&gt;SoundCloud&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;hàl / 人魚&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/7dmIhZXQkAoKKX4yxryhPK&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;2001年リリースの「blue」はとても良質な曲揃いのJ-POP名盤だと思う。5曲目の「6階の少女」はZAZEN BOYS(の全身？)が演奏しているのだが、
正直なところ全体の流れから浮いている気がした。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;未来電波基地 / おもちを食べて&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/2HKiLzGHWTJd6mywVrpjmG&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;鬱木ゆうとのソロプロジェクト、未来電波基地。「インターネットグランジバンド」とのこと。憂鬱な時に聴きたくなる。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/miraidempa&#34;&gt;Twitter&lt;/a&gt;,
&lt;a href=&#34;https://miraidempa.bandcamp.com/&#34;&gt;Bandcamp&lt;/a&gt;,
&lt;a href=&#34;http://miraidempa.tumblr.com&#34;&gt;Tumblr&lt;/a&gt;,
&lt;a href=&#34;https://note.com/mridmp/n/n76eb0d82d14d&#34;&gt;これが未来電波基地の歴史&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;sunday &amp;amp; carlos / 魔法じかけの水曜日

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/mpjmpQ9R9xA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;sundayさんの1980年代アイドルソングのような温かみのある爽やかな歌声がかなり好きなのですが最近このコラボアレンジを発見しました。
もっといろいろ聴きたい。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.youtube.com/watch?v=dipUNLtUk14&#34;&gt;原曲:魔法じかけの日曜日(original-6)&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/sundaytube02&#34;&gt;Twitter(sundaytube02)&lt;/a&gt;,
&lt;a href=&#34;https://www.youtube.com/channel/UCyWoMlup-IBKEzpcrzZb8gQ&#34;&gt;YouTube(sundaytube02)&lt;/a&gt;,
&lt;a href=&#34;https://soundcloud.com/sundaytube02&#34;&gt;Soundcloud(sundaytube02)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;VOID - YAMEII&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/cPdLgvgh-SY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;パステルカラーに彩られたサイバースペースに誘われる。&lt;a href=&#34;https://twitter.com/ThisIsDeko&#34;&gt;Deko&lt;/a&gt;の名前がよく出てくるが、中の人なのかな？&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.osean.world/&#34;&gt;ocean world&lt;/a&gt;,
&lt;a href=&#34;https://www.instagram.com/yameiionline/&#34;&gt;Instagram&lt;/a&gt;,
&lt;a href=&#34;https://soundcloud.com/user-946342075&#34;&gt;SoundCloud&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/OseanWorld&#34;&gt;Twitter(OceanWorld)&lt;/a&gt;,
&lt;a href=&#34;https://twitter.com/Yameiionline&#34;&gt;Twitter(Yameiionline)&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Super VHS”Matsuri no yoru”Official Music Video&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/cQt_SHLEcAg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;田中ヤコブや家主からレーベル繋がり(NEW FORK)で発見した。
&lt;a href=&#34;https://twitter.com/super_vhs_jp&#34;&gt;Twitter&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>SACOYANS - Yomosue (2020)</title>
      <link>https://matsueushi.github.io/posts/sacoyans-yomosue/</link>
      <pubDate>Mon, 05 Oct 2020 00:07:12 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/sacoyans-yomosue/</guid>
      <description>&lt;p&gt;Twitterで友人に勧められて聞いた福岡のバンドSACOYANS(サコヤンズ)のファーストアルバム&amp;quot;Yomosue&amp;quot;がかなり気に入ったので紹介したいと思います。&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/qNrq8GkmDk4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;iframe style=&#34;border: 0; width: 400px; height: 373px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=2220585734/size=large/bgcol=ffffff/linkcol=0687f5/artwork=small/transparent=true/&#34; seamless&gt;&lt;a href=&#34;https://sacoyans.bandcamp.com/album/yomosue&#34;&gt;Yomosue by SACOYANS&lt;/a&gt;&lt;/iframe&gt;
&lt;p&gt;ジャンルはドリームポップやシューゲイザーに該当すると思います。&lt;/p&gt;
&lt;p&gt;轟音ギターと甘いメロディの融合というシューゲイザーのスタイルはしっかり踏襲しつつ、
Twitterのプロフィールには「もうほとんどスマパンなんじゃないか？の疑い色濃いバンド。」とある通りオルタナっぽさも色濃く味わえ、
椎名林檎とか大森靖子のようなJPOPっぽい聴きやすさ、口ずさみやすさも魅力的です。&lt;/p&gt;
&lt;p&gt;最初Spotifyで聞いていたのですが、こりゃ手元に持っておかなければと思いフィジカル(CD)もすぐに買いました。
自分は気づかずAmazonで買ってしまいましたが、これから買う人は&lt;a href=&#34;https://ttosdomestic.thebase.in/items/34379306&#34;&gt;【特典】SACOYANS / Yomosue&lt;/a&gt;から買った方がステッカーがついてくるようです。
（売り切れていたらすみません）&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mudia.tv/performer/2730&#34;&gt;SACOYANS | Mudia&lt;/a&gt;のアーティスト紹介に&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;時は2019年10月、
音楽活動を辞めていたSACOYANが突如バンドをやりたくなって家の近所で見つけたメンバーにて結成。なんと全員SACOYANファンだった。各自持ち前の個性を武器に持ち「SACOYANのバンド」ではなく「SACOYANもいるバンド」に。福岡に一つの新しい大陸が出来上がった。めでたしめでたし&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;(このアーティスト説明いいですね)と書いてあるのでまだ結成して1年ほどしか経っていないというのは驚きでしたが、
ボーカルのSACOYANの&lt;a href=&#34;https://www.youtube.com/channel/UCxzhJsOjfAkjGAz147OW6Ig&#34;&gt;YouTubeのチャンネル&lt;/a&gt;に
ベッドルームポップ的なテイストの元曲？がアップロードされており、バンドスタイルとして再解釈してできたのはこのYomosueなのではないかと思います。&lt;/p&gt;
&lt;p&gt;偉大なお告げ「great revelation」SACOYAN

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/pxLMwrFPB10&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;音楽の天才 「a genius of music」 SACOYAN

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wS1QBqtPaWs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;わたしの窓辺 「by my window」 SACOYAN

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Qwt33P1ZA_c&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;だれでもしっかり見ているよ 「everybody gaze」 SACOYAN

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/OUem1m_dLo4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;「食卓の間」Dining room SACOYAN デモ

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Ki_verAtLd8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;JK(2011)　SACOYAN

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/dca2maKFE3I&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;ニベアは2020年8月にリリースされたという記事があるので最近の曲ですが、
「だれでもしっかり見ているよ」や「JK」はアップロード日が2011年なので結構前から原曲は存在していたようです。&lt;/p&gt;
&lt;p&gt;相当昔から作ってきた曲の中から選りすぐって作られたのがこのYomosueだとすれば、
ファーストアルバムにしてベストアルバムのような至極の完成度である理由にも納得がいく気がします。&lt;/p&gt;
&lt;p&gt;完成度やまとまりの点ではアルバムバージョンの方が一歩先に進んでいると思いますがYouTubeにアップロードされている荒削りなゲネプロやデモバージョンも好きです。&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/d63mJo5XXM4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/TTnrvBzh1XY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;


&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/GBN1xkINDyQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&#34;https://takumahatensi.wixsite.com/nyai-on-web&#34;&gt;NYAI&lt;/a&gt;(こちらのバンドも好きです)と福岡つながりで対バンもしていた模様。
配信もしていたようですが完全に見逃しました……&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;ライブの詳細決まりました！&lt;br&gt;&lt;br&gt;8/8(土) TWO MUCH&lt;br&gt;@福岡UTERO&lt;br&gt;OP/18:30 ST/19:00&lt;br&gt;観覧TICKET￥2000+1drink order&lt;br&gt;配信TICKET￥1000 &lt;br&gt;&lt;br&gt;【CAST】&lt;br&gt;19:00-19:50　SACOYANS&lt;br&gt;20:10-21:00　NYAI&lt;br&gt;&lt;br&gt;会場は30人くらいで締め切るので観に来れる方はお早めにご予約お願いします🤲&lt;a href=&#34;https://t.co/n2hbs2kfaF&#34;&gt;https://t.co/n2hbs2kfaF&lt;/a&gt;&lt;/p&gt;&amp;mdash; ニャイちゃんバンド(NYAI) (@nyaiband) &lt;a href=&#34;https://twitter.com/nyaiband/status/1288449060915908608?ref_src=twsrc%5Etfw&#34;&gt;July 29, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; 
&lt;p&gt;本当に素晴らしいアルバムなので、もっと世間に知られて欲しいと思います。&lt;/p&gt;
&lt;hr&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;und&#34; dir=&#34;ltr&#34;&gt;😭 &lt;a href=&#34;https://t.co/6EwMw9TG4i&#34;&gt;https://t.co/6EwMw9TG4i&lt;/a&gt;&lt;/p&gt;&amp;mdash; SACOYAN (@SACOYAN_bot) &lt;a href=&#34;https://twitter.com/SACOYAN_bot/status/1309128409507913729?ref_src=twsrc%5Etfw&#34;&gt;September 24, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; 
&lt;hr&gt;
&lt;p&gt;以下はリンクです。&lt;/p&gt;
&lt;p&gt;なかなか情報が見つかりづらく、
ミュージックマガジン(2020/Oct)には小さくディスクレビューが載っていました（これも前と同じ友人に教えてもらった）が、
他にもないかなと思っていくつか書店でパラパラ音楽雑誌をめくってみたものの言及されているのは他には見つからず残念でした。&lt;/p&gt;
&lt;h3 id=&#34;公式&#34;&gt;公式&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/TSacoyan&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://friendship.lnk.to/YomosueTW?fbclid=IwAR3J_tGziWoRqjCX2eQP8cN-2KHAP_ZJoyWoIYLB-aFJKgRPThWzmkyRZqM&#34;&gt;各種サブスクリプションサービスへのリンク&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://sacoyans.bandcamp.com/album/yomosue&#34;&gt;Bandcamp&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.instagram.com/sacoyans/&#34;&gt;Instagram&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;sacoyanvocals-guitar&#34;&gt;SACOYAN(vocals, guitar)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/SACOYAN_bot&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sacoyan.mitsu-hide.com/SACOYAN_Web/Welcome.html&#34;&gt;Web&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.youtube.com/channel/UCxzhJsOjfAkjGAz147OW6Ig&#34;&gt;YouTube&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://soundcloud.com/sacoyan&#34;&gt;Soundcloud&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sacoyan3535.jugem.jp/&#34;&gt;虫さされ肩こりにSACOYAN&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://com.nicovideo.jp/community/co406785&#34;&gt;サイコちゃん伝説　SACOYAN編&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://mayoware.seesaa.net/article/219157516.html&#34;&gt;迷われレコード 33 : SACOYAN 『虎モ猫になる』&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;takeyantakeshi-yamamotoguitar&#34;&gt;TAKEYAN/Takeshi Yamamoto(guitar)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/TKC_0113&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://takeshiyamamotorogers.bandcamp.com/&#34;&gt;Bandcamp&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;harajiri原尻-成二bass&#34;&gt;HARAJIRI/原尻 成二(bass)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/100HIP&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.facebook.com/seiji.harajiri&#34;&gt;Facebook&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;miwakoみわこdrums&#34;&gt;MIWAKO/みわこ(drums)&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/myakodayo&#34;&gt;Twitter&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twin-ships.com/miumau/&#34;&gt;miu miu&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;その他&#34;&gt;その他&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rateyourmusic.com/artist/sacoyans&#34;&gt;Rate Your Music&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.discogs.com/artist/8183290-SACOYANS&#34;&gt;Discogs&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.barks.jp/news/?id=1000187921&#34;&gt;SACOYANS、「ニベア」リリース＆リリースパーティーも開催 (BARKS, 2020.8.26 22:00)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://mudia.tv/performer/2730&#34;&gt;SACOYANS | Mudia&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;5ch過去ログ
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://toki.5ch.net/test/read.cgi/minor/1305334269/&#34;&gt;【サイコちゃん伝説】SACOYAN広場【2ちゃんねる編】&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://toki.5ch.net/test/read.cgi/minor/1312016136/&#34;&gt;SACOYAN広場 part.2&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://awabi.2ch.sc/test/read.cgi/minor/1320674624/-100&#34;&gt;SACOYAN広場 part.3&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでネストしているDictをstructにマッピングする</title>
      <link>https://matsueushi.github.io/posts/julia-mapping-nested-dict/</link>
      <pubDate>Sun, 27 Sep 2020 21:08:11 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-mapping-nested-dict/</guid>
      <description>&lt;p&gt;WebAPIを叩くと、レスポンスがJSON形式の文字列で返ってくることがあります。
ほとんどの場合そのまま文字列で扱うよりも、ライブラリを使ってプログラミング言語がサポートする辞書型に変換するのではないかと思います。&lt;/p&gt;
&lt;p&gt;単純なJSONの場合は辞書型のままで操作・抽出してもよいかもしれませんが、
複雑なJSONの場合はごちゃごちゃと辞書を弄り回すよりも自分で定義した型にデータをマッピングしたいものです。&lt;/p&gt;
&lt;p&gt;今回はJuliaにおけるJSON(から得られる&lt;code&gt;Dict&lt;/code&gt; )の&lt;code&gt;struct&lt;/code&gt;へのマッピング方法について書いてみたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;parametersjlhttpsgithubcommauro3parametersjlを利用したマッピング&#34;&gt;&lt;a href=&#34;https://github.com/mauro3/Parameters.jl&#34;&gt;Parameters.jl&lt;/a&gt;を利用したマッピング&lt;/h2&gt;
&lt;p&gt;Juliaではネストしていない&lt;code&gt;Dict&lt;/code&gt;であればマッピングは比較的容易です。例として次のようなJSONを考えます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main_window&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;show&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まず&lt;a href=&#34;https://github.com/JuliaIO/JSON.jl&#34;&gt;&lt;code&gt;JSON.jl&lt;/code&gt;&lt;/a&gt;で文字列から&lt;code&gt;Dict&lt;/code&gt;に変換します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;hello&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;name&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;main_window&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;width&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: 500,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;height&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: 400,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;show&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: true&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; println(s)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main_window&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;show&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;true&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; JSON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(s)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;name&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main_window&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;height&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;show&amp;#34;&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;width&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここまではいいと思います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Window&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    name&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    show&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    height&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    width&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上のような&lt;code&gt;struct&lt;/code&gt;にマッピングするのは&lt;a href=&#34;https://github.com/mauro3/Parameters.jl&#34;&gt;&lt;code&gt;Parameters.jl&lt;/code&gt;&lt;/a&gt;を付けば比較的容易です。
まずキーを文字列からシンボルに変換する次のような関数を作っておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; keytosymbol(x) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;(k) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; v &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (k, v) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; keytosymbol(j)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;:show&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;name   &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main_window&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;:height&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;:title&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;:width&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Parameters.jlの&lt;a href=&#34;https://mauro3.github.io/Parameters.jl/stable/api/#Parameters.@with_kw-Tuple%7BAny%7D&#34;&gt;&lt;code&gt;@with_kw&lt;/code&gt;&lt;/a&gt;マクロを使用すると
キーワードでコンストラクタが初期化できるようになります。（デフォルト値もサポートされています）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Window&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            name&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            title&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            show&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            height&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            width&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Pythonで&lt;code&gt;dict&lt;/code&gt;型のオブジェクトをキーワード引数としてアンパックして関数に渡すことができる( &lt;code&gt;f(**kwargs)&lt;/code&gt; )ように、
Pythonでもキーワード引数に&lt;code&gt;Dict{Symbol, T}&lt;/code&gt;型のオブジェクトを&lt;code&gt;f(;kwargs...)&lt;/code&gt;としてアンパックして渡すことができます。&lt;/p&gt;
&lt;p&gt;以上のことから、先ほどの関数を使って&lt;code&gt;Dict&lt;/code&gt;のキーを&lt;code&gt;Symbol&lt;/code&gt;に変換し、&lt;code&gt;splat&lt;/code&gt; operator &lt;code&gt;...&lt;/code&gt;でアンパックすれば、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Window(;keytosymbol(j)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Window
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  name&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;main_window&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hello&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  show&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  height&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x0000000000000190&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  width&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00000000000001f4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と無事にマッピングできました。&lt;/p&gt;
&lt;h2 id=&#34;ネストされている場合&#34;&gt;ネストされている場合&lt;/h2&gt;
&lt;p&gt;しかしながら、実際にレスポンスとして帰ってくるJSONはしばしばもっと複雑です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;glossary&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example glossary&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;		&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossDiv&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;			&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossList&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossEntry&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;ID&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;SortAs&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossTerm&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Standard Generalized Markup Language&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Acronym&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;Abbrev&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ISO 8879:1986&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossDef&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;para&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A meta-markup language, used to create markup languages such as DocBook.&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;						&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossSeeAlso&amp;#34;&lt;/span&gt;: [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GML&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XML&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    },
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;					&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;GlossSee&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;markup&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    }
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上は&lt;a href=&#34;https://json.org/example.html&#34;&gt;JSON Example&lt;/a&gt;から引用したJSONの例です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Parameters
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GlossDef&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  para&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossseealso&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GlossEntry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sortas&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossterm&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  acronym&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  abbrev&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossdef&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GlossDef&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glosssee&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GlossList&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossentry&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GlossEntry&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GlossDiv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glosslist&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GlossList&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Glossary&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GlossDiv&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上のように定義したstructにマッピングするにはどうしたらよいのでしょうか。&lt;/p&gt;
&lt;p&gt;もちろん真面目に構成していけばできない事はないのですが、なるべくお手軽に変換したいものです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;glossary&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;example glossary&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossDiv&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossList&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossEntry&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SGML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SortAs&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SGML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossTerm&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Standard Generalized Markup Language&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Acronym&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SGML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Abbrev&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ISO 8879:1986&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossDef&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                        &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;para&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;A meta-markup language, used to create markup languages such as DocBook.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossSeeAlso&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: [&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;XML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    },&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossSee&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;markup&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;glossary&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;example glossary&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossDiv&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;title&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;S&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossList&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossEntry&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ID&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SGML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SortAs&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SGML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossTerm&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Standard Generalized Markup Language&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Acronym&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SGML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Abbrev&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ISO 8879:1986&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossDef&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                        &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;para&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;A meta-markup language, used to create markup languages such as DocBook.&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossSeeAlso&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: [&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;XML&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                    },&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n\t\t\t\t\t\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;GlossSee&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;markup&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;                }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;            }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    }&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; j &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(s)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;glossary&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example glossary&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GlossDiv&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GlossList&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GlossEntry&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GlossSee&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;…&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;キーを小文字に変換&#34;&gt;キーを小文字に変換&lt;/h3&gt;
&lt;p&gt;まずJSONのキーを小文字にしましょう。再帰的に書くと次のようになります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; lowercasekeys(x) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; lowercasekeys(x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;(lowercase(k) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; lowercasekeys(v) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (k, v) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; j2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; lowercasekeys(j)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;glossdiv&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;glosslist&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;glossentry&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sortas&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;abbrev&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ISO 8879:1986&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;…&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;title&amp;#34;&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example glossary&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以前と同じような方法では、&lt;code&gt;Dict&lt;/code&gt;を&lt;code&gt;GlossDiv&lt;/code&gt;に&lt;code&gt;convert&lt;/code&gt;できないので失敗します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Glossary(;keytosymbol(j2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ERROR&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MethodError&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Cannot &lt;span style=&#34;color:#e6db74&#34;&gt;`convert`&lt;/span&gt; an object of type &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;} to an object of type GlossDiv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Closest candidates are&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  convert(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; at essentials&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;171&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  GlossDiv(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;) at &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;/.&lt;/span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;packages&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;CVyBv&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;480&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stacktrace&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] Glossary(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}) at &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;/.&lt;/span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;packages&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;CVyBv&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;480&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] Glossary(; title&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}) at &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;root&lt;span style=&#34;color:#f92672&#34;&gt;/.&lt;/span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;packages&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;CVyBv&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Parameters&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;468&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] top&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;level scope at REPL[&lt;span style=&#34;color:#ae81ff&#34;&gt;31&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;関数の形を考えてみる&#34;&gt;関数の形を考えてみる&lt;/h3&gt;
&lt;p&gt;変換する関数は大まかにこんな感じになるはずです。（適当）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; convertdict(T&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kwargs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (k, v) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs(d)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        symk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;(k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        kwargs[symk] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (変換が必要な時は変換する)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; T(;kwargs&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;「変換が必要な時は変換する」という部分を考えましょう。&lt;/p&gt;
&lt;h3 id=&#34;変換先の型を判別&#34;&gt;変換先の型を判別&lt;/h3&gt;
&lt;p&gt;変換がいつ必要になるかはメンバー変数の型を見て判別することにします。
ちなみに、メンバー変数の型は&lt;a href=&#34;https://docs.julialang.org/en/v1/base/base/#Core.fieldtype&#34;&gt;&lt;code&gt;Core.fieldtype&lt;/code&gt;&lt;/a&gt;で取得できます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; fieldtype(GlossDef, &lt;span style=&#34;color:#e6db74&#34;&gt;:para&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; fieldtype(GlossDef, &lt;span style=&#34;color:#e6db74&#34;&gt;:glossseealso&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Column: &lt;code&gt;fieldtype(T, k)&lt;/code&gt;の型, Row: &lt;code&gt;v&lt;/code&gt;の型 としたとき、下のようにディスパッチさせることにします。&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Union{S, Nothing}&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Vector{S}&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/th&gt;
&lt;th&gt;それ以外&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Vector&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;convertdict(S, v)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;convertdict.(S, v)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;&lt;code&gt;Dict&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;convertdict(S, v)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;マッピングを実施&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;それ以外&lt;/td&gt;
&lt;td&gt;&lt;code&gt;convertdict(S, v)&lt;/code&gt;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&amp;mdash;&lt;/td&gt;
&lt;td&gt;&lt;code&gt;v&lt;/code&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h3 id=&#34;convertdictの構成&#34;&gt;&lt;code&gt;convertdict&lt;/code&gt;の構成&lt;/h3&gt;
&lt;p&gt;あとは先ほどの表に合わせて関数を整えていきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convertdict(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;, x) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convertdict(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;}}, x) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict(T, x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convertdict(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;}}, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict(T, d)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convertdict(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}, v&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractVector&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractVector&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(eltype(T), v)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convertdict(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; d
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; convertdict(T&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kwargs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (k, v) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs(d)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        symk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;(k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        kwargs[symk] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict(fieldtype(T, symk), v)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; T(;kwargs&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;思ったよりシンプルですね。3行目の&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;convertdict(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;}}, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractDict&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict(T, d)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は2行目に含まれているので必要ないように見えるかもしれませんが、これがないと
&lt;code&gt;convertdict(::Type{Union{T, Nothing}}, d::AbstractDict)&lt;/code&gt;
が
&lt;code&gt;convertdict(::Type{Union{T, Nothing}}, x)&lt;/code&gt;
と
&lt;code&gt;convertdict(T::Type, d::AbstractDict)&lt;/code&gt;
のどちらにディスパッチしてよいか曖昧になってしまうので、必要な定義です。&lt;/p&gt;
&lt;p&gt;さてさて、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; glossary &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict(Glossary, j2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Glossary
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;example glossary&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; GlossDiv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; glossary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdiv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GlossDiv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;S&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glosslist&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; GlossList
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; glossary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glosslist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GlossList
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossentry&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; GlossEntry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; glossary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glosslist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossentry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GlossEntry
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  sortas&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossterm&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Standard Generalized Markup Language&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  acronym&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SGML&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  abbrev&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ISO 8879:1986&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossdef&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; GlossDef
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glosssee&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;markup&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; glossary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glosslist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossentry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdef
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;GlossDef
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  para&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;A meta-markup language, used to create markup languages such as DocBook.&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  glossseealso&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; glossary&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdiv&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glosslist&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossentry&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossdef&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;glossseealso
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GML&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;XML&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一発でマッピングできました。&lt;/p&gt;
&lt;p&gt;もう一例やってみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-json&#34; data-lang=&#34;json&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;menu&amp;#34;&lt;/span&gt;: {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SVG Viewer&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;: [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OpenNew&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open New&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZoomIn&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom In&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZoomOut&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom Out&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OriginalView&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Original View&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quality&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pause&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mute&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Find&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Find...&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FindAgain&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Find Again&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CopyAgain&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy Again&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CopySVG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy SVG&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ViewSVG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View SVG&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ViewSource&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View Source&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SaveAs&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Save As&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Help&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;: &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About Adobe CVG Viewer...&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずは読み込んでみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; s2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;{&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;menu&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;header&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SVG Viewer&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;items&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: [&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Open&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;OpenNew&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Open New&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        null,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ZoomIn&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Zoom In&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ZoomOut&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Zoom Out&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;OriginalView&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Original View&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        null,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Quality&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Pause&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Mute&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        null,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Find&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Find...&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;FindAgain&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Find Again&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Copy&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CopyAgain&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Copy Again&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;CopySVG&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Copy SVG&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ViewSVG&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;View SVG&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;ViewSource&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;View Source&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;SaveAs&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Save As&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        null,&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Help&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;},&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;        {&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;id&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;About&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;label&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;: &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;About Adobe CVG Viewer...&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\r\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;}}&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; println(s2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;{&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;menu&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; {
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SVG Viewer&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OpenNew&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open New&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZoomIn&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom In&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZoomOut&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom Out&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OriginalView&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Original View&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quality&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pause&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mute&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Find&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Find...&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;FindAgain&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Find Again&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CopyAgain&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy Again&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CopySVG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy SVG&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ViewSVG&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View SVG&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ViewSource&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View Source&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SaveAs&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Save As&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;null&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Help&amp;#34;&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About Adobe CVG Viewer...&amp;#34;&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; j3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; JSON&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;parse(s2)[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;menu&amp;#34;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;items&amp;#34;&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;[&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open New&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OpenNew&amp;#34;&lt;/span&gt;), nothing, &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;label&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom In&amp;#34;&lt;/span&gt;,&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;id&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=…&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;header&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SVG Viewer&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;null&lt;/code&gt;は&lt;code&gt;nothing&lt;/code&gt;にマッピングされています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Item&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         id&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         label&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@with_kw&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Menu&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         header&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         items&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Item&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上のように定義した場合でも、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; menu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convertdict(Menu, j3)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Menu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  header&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SVG Viewer&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  items&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Item&lt;/span&gt;}}((&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; menu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;items
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Item&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OpenNew&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Open New&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZoomIn&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom In&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ZoomOut&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Zoom Out&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;OriginalView&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Original View&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Quality&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Pause&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mute&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CopyAgain&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy Again&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;CopySVG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Copy SVG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ViewSVG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View SVG&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ViewSource&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;View Source&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SaveAs&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Save As&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Help&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Item
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  label&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;About Adobe CVG Viewer...&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;問題なく&lt;code&gt;nothing&lt;/code&gt;や&lt;code&gt;Vector&lt;/code&gt;と&lt;code&gt;Union&lt;/code&gt;の組み合わせを処理できています。&lt;/p&gt;
&lt;h2 id=&#34;パッケージ&#34;&gt;パッケージ&lt;/h2&gt;
&lt;p&gt;パッケージとするほどのものでもないかもしれませんが、一応JuliaRegistries/Generalに登録してあります。
&lt;code&gt;] add StructMapping&lt;/code&gt; でお使いください。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/StructMapping.jl&#34;&gt;https://github.com/matsueushi/StructMapping.jl&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>レコードをデジタル化する（後編）-Discogs APIを使ってメタデータを取得-</title>
      <link>https://matsueushi.github.io/posts/how-to-digitize-vinyl-2/</link>
      <pubDate>Thu, 10 Sep 2020 09:10:30 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/how-to-digitize-vinyl-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../how-to-digitize-vinyl-1/&#34;&gt;レコードをデジタル化する（前編）&lt;/a&gt;の続きです。&lt;/p&gt;
&lt;p&gt;今回は、レコードをデジタル化する際に障害となる楽曲メタデータの取得・入力にフォーカスしたいと思います。
Audacityでは保存する際にタグを入力する画面が表示されますが、これを一枚一枚真心を込めて手入力していたら発狂してしまいます。&lt;/p&gt;
&lt;p&gt;そこで、ディスコグラフィのデータベースサイトで、CD/レコード/カセットテープ等のマーケットプレイスでもあるDiscogsからデータを取得してみました。&lt;/p&gt;
&lt;h2 id=&#34;discogs-api&#34;&gt;Discogs API&lt;/h2&gt;
&lt;p&gt;RESTful APIの説明はここで見れます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://www.discogs.com/developers/&#34;&gt;Discogs API Documentation&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;基本的な機能を使いたいだけならば、Discogs APIを使うのに特にAPIキーは必要ありません。
サムネイル画像のURLなど、登録をしてpersonal access tokenを取得し&lt;code&gt;user_token&lt;/code&gt;として渡さないと取得できない情報もあり、
&lt;code&gt;user_token&lt;/code&gt;を渡さないとレスポンスのなかの画像のURLが空白になります。
Discogsにはアプリケーション用のConsumer KeyとConsumer Secretもあるのですが、こちらは使ったことがありません。
自分のpersonal access tokenはDiscogsの&lt;a href=&#34;https://www.discogs.com/settings/developers&#34;&gt;Settings -&amp;gt; Developers&lt;/a&gt;で確認できます。&lt;/p&gt;
&lt;p&gt;DiscogsのAPIを各言語で利用できるようなクライアント/Exampleはいくつかあり、APIのドキュメンテーションに書いてありますが
例えばPythonであれば&lt;a href=&#34;https://github.com/jesseward/discogs-oauth-example&#34;&gt;jesseward / discogs-oauth-example&lt;/a&gt;があります。&lt;/p&gt;
&lt;p&gt;以前はPythonであれば公式が提供する&lt;a href=&#34;https://github.com/discogs/discogs_client&#34;&gt;discogs / discogs_client&lt;/a&gt;がありましたが、いつの間にかdeprecatedになっていたようです。&lt;/p&gt;
&lt;p&gt;実は、過去discogs_clientを使ってPythonでタグをダウンロードするスクリプトを書いていたのですが、
久しぶりに使おうと思ったらdeprecatedになっていたのでJuliaで書き直しました。&lt;/p&gt;
&lt;h2 id=&#34;runoutjl&#34;&gt;RunOut.jl&lt;/h2&gt;
&lt;p&gt;Registratorには登録していないのですが気が向いたら登録しようと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/RunOut.jl&#34;&gt;https://github.com/matsueushi/RunOut.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;使い方は簡単で、レポジトリをクローンして&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ julia --project
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でプロジェクトを有効化します。&lt;/p&gt;
&lt;p&gt;そして、ダウンロードしたいリリースのリリースIDを調べます。Discogsにはマスターリリースとリリースという概念があり、
雑に言うとマスターリリースはアルバム・シングル名、リリースはそれぞれのエディション(CD, LP, 初回限定盤、再発など)に対応しています。&lt;/p&gt;
&lt;p&gt;そのため、今回調べる必要があるのはマスターリリースではなくリリースのIDです。
CDとLPの収録曲の違いや、初回限定版や再発のボーナストラックなどがありますからね。&lt;/p&gt;
&lt;p&gt;例として&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%9E%E3%82%A4%E3%83%BB%E3%83%96%E3%83%A9%E3%83%83%E3%83%87%E3%82%A3%E3%83%BB%E3%83%B4%E3%82%A1%E3%83%AC%E3%83%B3%E3%82%BF%E3%82%A4%E3%83%B3&#34;&gt;My Bloody Valentine&lt;/a&gt;の&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%83%A9%E3%83%B4%E3%83%AC%E3%82%B9_(%E3%82%A2%E3%83%AB%E3%83%90%E3%83%A0)&#34;&gt;Loveless&lt;/a&gt;
のNice Price再発盤であれば、対応するリリースは&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.discogs.com/My-Bloody-Valentine-Loveless/release/919364&#34;&gt;https://www.discogs.com/My-Bloody-Valentine-Loveless/release/919364&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;となるので、idは&lt;code&gt;919364&lt;/code&gt;です。&lt;/p&gt;
&lt;p&gt;まず、クライアントをセットアップします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; RunOut
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; useragent &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RunOut/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&lt;/span&gt;(Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;project()&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version)&lt;span style=&#34;color:#e6db74&#34;&gt; +https://matsueushi.github.io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RunOut/0.1.0 +https://matsueushi.github.io&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Client(useragent)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Client(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RunOut/0.1.0 +https://matsueushi.github.io&amp;#34;&lt;/span&gt;, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;クライアントは&lt;code&gt;user_token&lt;/code&gt;を渡してinstantiateすることもできます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;client &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Client(useragent; usertoken&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;lt;user token&amp;gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;リリース情報を取得するのは非常に簡単です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; release &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fetch_release(client, &lt;span style=&#34;color:#ae81ff&#34;&gt;919364&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00000000000e0744&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  title&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Loveless&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  resource_url&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.discogs.com/releases/919364&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  artists&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Artist&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  artists_sort&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;My Bloody Valentine&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  data_quality&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Needs Vote&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  thumb&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  community&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; Community
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  companies&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Company&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  country&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Japan&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  date_added&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; TimeZones&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZonedDateTime
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  date_changed&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; TimeZones&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ZonedDateTime
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  estimated_weight&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x0000000000000055&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  extraartists&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Artist&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  format_quantity&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  formats&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Format&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  genres&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  identifiers&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Identifier&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  images&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Image&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  labels&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Label&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  lowest_price&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.99&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  master_id&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x000000000000173c&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  master_url&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://api.discogs.com/masters/5948&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  notes&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Nothing&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  num_for_sale&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x000000000000001e&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  released&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1998-03-21&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  released_formatted&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;21 Mar 1998&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  series&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Label&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  status&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Accepted&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  styles&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  tracklist&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Track&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  uri&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://www.discogs.com/My-Bloody-Valentine-Loveless/release/919364&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  videos&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Video&lt;/span&gt;}((&lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;,))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  year&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt64&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00000000000007ce&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;地道な作業により情報を&lt;code&gt;struct&lt;/code&gt;に&lt;a href=&#34;https://github.com/matsueushi/RunOut.jl/blob/master/src/models.jl&#34;&gt;マッピング&lt;/a&gt;したので、単なる&lt;code&gt;Dict&lt;/code&gt;より取り扱いが容易になっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; release&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;tracklist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Track&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Only Shallow = オンリー・シャロウ&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4:17&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Loomer = ルーマー&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;2:38&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Touched = タッチト&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0:56&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;To Here Knows When = トゥ・ヒア・ノウズ・ホエン&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5:31&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;When You Sleep = ホエン・ユー・スリープ&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;4:11&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;I Only Said = アイ・オンリー・セッド&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5:34&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;7&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Come In Alone = カム・イン・アローン&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3:58&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Sometimes = サムタイムズ&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5:19&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;9&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Blown A Wish = ブロウン・ア・ウィッシュ&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3:36&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;10&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;What You Want = ホワット・ユー・ウオント&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;5:33&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Track(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;11&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Soon = スーン&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;track&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;6:59&amp;#34;&lt;/span&gt;, nothing, nothing)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;そして&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; save_xml(release, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;output&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;で&lt;code&gt;output&lt;/code&gt;フォルダにXMLが生成されるので、あとはXMLをAudacityのメタデータ編集画面で&lt;code&gt;Load...&lt;/code&gt;を押してロードすれば良いです。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/how-to-digitize-vinyl-audacity-metadata.png&#34; alt=&#34;メタデータ&#34;&gt;&lt;/p&gt;
&lt;p&gt;まあ、自分以外使う人がいなそうですが。。。&lt;/p&gt;
&lt;p&gt;以下は些細な内容ですが実際やっていて気になった点です。&lt;/p&gt;
&lt;h3 id=&#34;heading&#34;&gt;Heading&lt;/h3&gt;
&lt;p&gt;例えば&lt;a href=&#34;https://www.discogs.com/Radiohead-OK-Computer/release/4950798&#34;&gt;RadiohaadのOK Computer&lt;/a&gt;
のTracklistを見てみると&amp;quot;Enry&amp;quot;, &amp;ldquo;Meeny&amp;rdquo;, &amp;ldquo;Miney&amp;rdquo;, &amp;ldquo;Mo&amp;rdquo; といったHeadingの情報が存在することがわかります。
これらは曲には対応していないので、XMLを吐き出す際には無視します。
&lt;code&gt;Track&lt;/code&gt;の&lt;code&gt;position&lt;/code&gt;が&lt;code&gt;nothing&lt;/code&gt;になっているものを飛ばせば良いです。&lt;/p&gt;
&lt;h3 id=&#34;曲のナンバリング&#34;&gt;曲のナンバリング&lt;/h3&gt;
&lt;p&gt;また、これはiTunes/Music.appに特有の現象かもしれませんが、
&lt;a href=&#34;https://www.discogs.com/Boat-2-%E9%87%8E%E6%9D%91%E7%BE%A9%E7%94%B7-Boat-%E9%87%8E%E6%9D%91%E7%BE%A9%E7%94%B7/release/12578270&#34;&gt;Tracklistのpositionが数字ではなく記号やアルファベットが入っている場合(&amp;ldquo;A&amp;rdquo;, &amp;ldquo;A1&amp;quot;など)&lt;/a&gt;
は曲のpositionとして認識されないため、ナンバリングは自分で行う必要があります。&lt;/p&gt;
&lt;h3 id=&#34;アーティスト名&#34;&gt;アーティスト名&lt;/h3&gt;
&lt;p&gt;Discogsでは、同名別人・別アーティストを末尾にカッコ付き番号をつけて区別しています。
例えば、&lt;a href=&#34;https://www.discogs.com/artist/607044-BOAT&#34;&gt;&amp;ldquo;BOAT&amp;rdquo;&lt;/a&gt;は&lt;a href=&#34;https://en.wikipedia.org/wiki/Boat_(band)&#34;&gt;アメリカのインディーロックバンド&lt;/a&gt;、
&lt;a href=&#34;https://www.discogs.com/artist/1401530-Boat-2&#34;&gt;&amp;ldquo;Boat (2)&amp;rdquo;&lt;/a&gt;は&lt;a href=&#34;https://ja.wikipedia.org/wiki/BOAT&#34;&gt;日本のロックバンド&lt;/a&gt;といった形です。&lt;/p&gt;
&lt;p&gt;カッコ付き番号を除去するために、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;replace(artist_name, &lt;span style=&#34;color:#e6db74&#34;&gt;r&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34; &lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;(&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;d&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;\&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;)$&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を使って置き換えます。&lt;/p&gt;
&lt;h2 id=&#34;あとがき&#34;&gt;あとがき&lt;/h2&gt;
&lt;p&gt;Windows用ですが、Mp3tagを使えば同様のことができるようです……こちらの方が簡単かもしれません。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://dj3dub.com/archives/1414&#34;&gt;Mp3tag + Discogsを利用したデジタルファイルのTag付け方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Nanoray - Gacha (2019)</title>
      <link>https://matsueushi.github.io/posts/nanoray/</link>
      <pubDate>Sun, 06 Sep 2020 21:15:15 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/nanoray/</guid>
      <description>&lt;p&gt;アメリカ・ネブラスカ州オマハのNanorayというアーティストの二枚目？Gacha。&lt;/p&gt;
&lt;iframe style=&#34;border: 0; width: 400px; height: 472px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=2567470031/size=large/bgcol=ffffff/linkcol=0687f5/artwork=small/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://nanoray.bandcamp.com/album/gacha&#34;&gt;Gacha by NANORAY&lt;/a&gt;&lt;/iframe&gt;
&lt;p&gt;ドラムンベースとカラフルなシンセのゲームミュージックの融合といった感じで聞いていると高揚感に包まれる。
曲名にShibuya, Himeji、Subaruなどを使っているので日本文化に馴染みがあるのかもしれない。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/882078244&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/nanoray&#34; title=&#34;NANORAY&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;NANORAY&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/nanoray/lovely-you&#34; title=&#34;魔法渦状Lovely You!&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;魔法渦状Lovely You!&lt;/a&gt;&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nanoray.bandcamp.com/&#34;&gt;BandCamp - NANORAY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://open.spotify.com/artist/62JS3xgd6kKS7OjzHNSFv1?si=kaWjEfYvRwSN6K9kdsWUAg&#34;&gt;Spotify - NANORAY&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/Nanoraydx&#34;&gt;Twitter - Nanoray-DX&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://rateyourmusic.com/artist/nanoray&#34;&gt;Rate Your Music - Nanoray&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Juliaのパッケージ内から自分自身のバージョンを取得する</title>
      <link>https://matsueushi.github.io/posts/julia-package-version/</link>
      <pubDate>Thu, 03 Sep 2020 23:27:01 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-package-version/</guid>
      <description>&lt;p&gt;小ネタです。&lt;/p&gt;
&lt;p&gt;自分で簡単なパッケージを作っている時に、Project.toml内の&lt;code&gt;version&lt;/code&gt;の情報を取りたくなったので。&lt;/p&gt;
&lt;p&gt;プロジェクト情報は&lt;a href=&#34;https://julialang.github.io/Pkg.jl/v1/api/&#34;&gt;&lt;code&gt;Pkg.project()&lt;/code&gt;&lt;/a&gt;で取得できます。
ドキュメントにはJulia 1.4以上が必要で、この機能はexperimentalとありました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; pj &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;project()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Types&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ProjectInfo(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;RunOut&amp;#34;&lt;/span&gt;, UUID(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;03328d24-db5d-422f-afe8-b99de72c82b3&amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#e6db74&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;, true, &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Base&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UUID&lt;/span&gt;}(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;JSON&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; UUID(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;682c06a0-de6a-54ab-a142-c8b1cf79cde6&amp;#34;&lt;/span&gt;),&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;HTTP&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; UUID(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;cd3eb016-35fb-5094-929b-558a96fad6f3&amp;#34;&lt;/span&gt;)), &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/juliatmp/Project.toml&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;バージョン取得は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; pj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;v&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; typeof(pj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;VersionNumber&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でできて、&lt;a href=&#34;https://docs.julialang.org/en/v1/base/base/#Base.VersionNumber&#34;&gt;&lt;code&gt;Base.VersionNumber&lt;/code&gt;&lt;/a&gt;が返ってきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;(pj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ERROR&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MethodError&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; no method matching &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;VersionNumber&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Closest candidates are&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;) at boot&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;321&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;UInt8&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}) at strings&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;39&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Base&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CodeUnits&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;UInt8&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}) at strings&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;string&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;77&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stacktrace&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] top&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;level scope at REPL[&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;文字列に変換するには、&lt;code&gt;String&lt;/code&gt;ではなく&lt;code&gt;$&lt;/code&gt;を使えばいいのかな。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&lt;/span&gt;(pj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version)&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0.1.0&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; typeof(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&lt;/span&gt;(pj&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;version)&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>レコードをデジタル化する（前編）</title>
      <link>https://matsueushi.github.io/posts/how-to-digitize-vinyl-1/</link>
      <pubDate>Mon, 31 Aug 2020 20:37:55 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/how-to-digitize-vinyl-1/</guid>
      <description>&lt;p&gt;今回はちょっといつもとは毛色は違いますがレコードのデジタル化について書きたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;レコードプレイヤー&#34;&gt;レコードプレイヤー&lt;/h2&gt;
&lt;p&gt;私が持っているレコードプレイヤー(人生初)は、2年ほど前に買ったオーディオテクニカの
&lt;a href=&#34;https://www.audio-technica.com/en-us/at-lp60-usb&#34;&gt;AT-LP60-USB&lt;/a&gt;というモデルで、
正確な値段は覚えていないですが購入価格は大体15,000円だったと思います。&lt;/p&gt;
&lt;p&gt;USB端子が付いているので、とりあえずこれを買っておけばアンプやスピーカーなどを購入しなくても、
パソコンにつないでレコードを再生して聞いたり録音(音声ファイル化)したりできるので私のようにちょっと試しに聞いてみたい人にとっては良いです。&lt;/p&gt;
&lt;p&gt;すでにAT-LP60-USBは製造中止になっているようですが、
後継の&lt;a href=&#34;https://www.audio-technica.com/en-us/at-lp60xusb&#34;&gt;AT-LP60XUSB&lt;/a&gt;が出ているようです。&lt;/p&gt;
&lt;h2 id=&#34;レコードをデジタル化するのは面倒&#34;&gt;レコードをデジタル化するのは面倒&lt;/h2&gt;
&lt;p&gt;プレイヤーにセットして読み込むだけで全自動で曲ごとに分割されたリッピングを行い、
アーティスト名や曲名を入力してくれるCDとは違い、レコードの場合は曲データが繋がった状態で録音され、
さらに曲情報も自動では読み込まれないのでデジタル化には手間を要します。ノイズの除去なども含めるとさらに面倒ですね。&lt;/p&gt;
&lt;p&gt;そんなにパソコンに取り込みたいなら最初からCDとかデジタルで買えばいいじゃん、
ストリーミングなら取り込む必要性すらないですよ、
なんでわざわざアナログ媒体で購入して手間をかけてデジタル化するんですかという耳の痛い意見もありますが、
レコードでしかプレスされておらずCDやストリーミングで聞くことができない曲をデータ化して簡単に聴けるようにしておいたり、
盤面に傷やホコリが着く前のスナップショットを保存しておいたりしたくなるんです……。&lt;/p&gt;
&lt;p&gt;新譜でレコード買うとダウンロードコードが付属してきたり、
Bandcamp経由でレコード買うとデジタルライブラリーにも追加されるなど、
簡単に取り込めるレコードが最近は多いですけどね。&lt;/p&gt;
&lt;p&gt;以後、私が所有しているAT-LP60-USBを前提にして話を進めて行きますが、
他のUSB端子があるレコードプレイヤーでも同様なのではないかと思います。&lt;/p&gt;
&lt;h2 id=&#34;audacityの注意点&#34;&gt;Audacityの注意点&lt;/h2&gt;
&lt;p&gt;AT-LP60-USBではフリーでオープンソースのデジタルオーディオエディターである&lt;a href=&#34;https://www.audacityteam.org/&#34;&gt;Audacity&lt;/a&gt;でレコードをデジタル化できることが謳われています。&lt;/p&gt;
&lt;p&gt;基本はオーディオテクニカのウェブサイトでダウンロードできるソフトウェアマニュアル(Downloadsのところにある)
を見て接続や設定をすれば良いので詳細はスキップしますが、MacOS 10.15 Catalinaを使っている場合注意する必要があります。&lt;/p&gt;
&lt;p&gt;AudacityをDockから起動した場合、&lt;strong&gt;AT-LP60-USBが認識されず、音が出ません。&lt;/strong&gt;
これは公式のウェブサイトでも言及されている既知の問題です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.audacityteam.org/macos-10-15-catalina-is-not-yet-supported-by-audacity/&#34;&gt;MacOS 10.15 (Catalina) does not support Audacity 2.3.2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;私の場合は上のworkaroundに従い、Terminalから&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;open /Applications/Audacity.app/Contents/MacOS/Audacity
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と打ち込んでAudacityを起動すると無事に音が再生できるようになりました。&lt;/p&gt;
&lt;h2 id=&#34;録音&#34;&gt;録音&lt;/h2&gt;
&lt;p&gt;録音自体はそれほど大変ではなく、通常の再生時と同じように右上の&lt;code&gt;Click to Start Monitoring&lt;/code&gt;を押して赤色の丸の録音ボタンを押すだけです。&lt;/p&gt;
&lt;p&gt;$n$倍速 $(n &amp;gt; 1)$で読み込むことができるCDとは違い等速の録音になりますが、ゆっくり曲を聴きながら待ちましょう。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/how-to-digitize-vinyl-audacity-1.png&#34; alt=&#34;録音終了後&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ノイズの除去&#34;&gt;ノイズの除去&lt;/h2&gt;
&lt;p&gt;録音した楽曲データにはレコードの傷、ホコリや汚れによりノイズが含まれています。
録音前に注意深くホコリを取り除いたとしても多少は入るもので、自分はそこまで神経質になってはいないのですが、
ノイズが気になる時はEffect -&amp;gt; Noise Reductionでバックグラウンドノイズを除去しています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://taira-komori.jpn.org/09noiseremoval.html&#34;&gt;ノイズの除去～Audacityエフェクト解説&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;プチプチノイズ（クリックノイズ）も除去できますがあまり使ってません。個人的にはそこまで一生懸命加工しなくても良いのではないかと思っています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://taira-komori.jpn.org/05clickremoval.html&#34;&gt;クリックノイズの除去～Audacityエフェクト解説&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;曲の分割&#34;&gt;曲の分割&lt;/h2&gt;
&lt;p&gt;次は曲の分割です。&lt;/p&gt;
&lt;p&gt;まず、先頭と末尾の無音部分を選択して削除します。次に、波形を全選択してAnalyze -&amp;gt; Silence Finder&amp;hellip;で無音部分にラベルを付けます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/how-to-digitize-vinyl-audacity-labels.png&#34; alt=&#34;分割後&#34;&gt;&lt;/p&gt;
&lt;p&gt;上のようにラベルトラックが追加されてラベルが設定されるので、曲間ではないものを削除します。
Tabキーで一つずつ進みながら消していくのが手っ取り早いです。この時にラベル名も編集して、&amp;ldquo;1&amp;rdquo;, &amp;ldquo;2&amp;rdquo;, &amp;ldquo;3&amp;rdquo;&amp;hellip;と番号をつけておきます。&lt;/p&gt;
&lt;h2 id=&#34;書き出し&#34;&gt;書き出し&lt;/h2&gt;
&lt;p&gt;File -&amp;gt; Export -&amp;gt; Export Multipleでファイルをラベルの位置で分割して保存できます。
アーティストや曲名などのメタデータを入力します。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/how-to-digitize-vinyl-audacity-metadata.png&#34; alt=&#34;メタデータ&#34;&gt;&lt;/p&gt;
&lt;p&gt;これで終わりで、あとはiTunesにインポートするだけです。&lt;/p&gt;
&lt;p&gt;最後のメタデータをチマチマ手で入力するのはしんどいので、次回は手を抜く方法を書きたいと思います。&lt;/p&gt;
&lt;p&gt;次-&amp;gt;&lt;a href=&#34;../how-to-digitize-vinyl-2/&#34;&gt;レコードをデジタル化する（後編）&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Julia vs Python Cheatsheet</title>
      <link>https://matsueushi.github.io/posts/julia-python-cheatsheet/</link>
      <pubDate>Fri, 28 Aug 2020 22:49:57 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-python-cheatsheet/</guid>
      <description>&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cheatsheets.quantecon.org/&#34;&gt;MATLAB–Python–Julia cheatsheet&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://juliadocs.github.io/Julia-Cheat-Sheet/&#34;&gt;The Fast Track to A quick and dirty overview of Julia 1.0&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h3 id=&#34;julia&#34;&gt;Julia&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% julia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _       _ _&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;_     |  Documentation: https://docs.julialang.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _ _   _| |_  __ _   |  Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Pkg help.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | | | | | |/ _&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; |  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | |_| | | | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_| |  |  Version 1.5.1 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2020-08-25&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; _/ |&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_|_|_|\__&amp;#39;&lt;/span&gt;_|  |  Official https://julialang.org/ release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|__/                   |
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python&#34;&gt;Python&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% python
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Python 3.8.5 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;default, Aug  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; 2020, 08:22:02&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;GCC 8.3.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; on linux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;help&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;copyright&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;credits&amp;#34;&lt;/span&gt; or &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;license&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; more information.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;get-the-list-of-all-files&#34;&gt;Get the list of all files&lt;/h2&gt;
&lt;h3 id=&#34;julia-basefilesystemreaddirhttpsdocsjulialangorgenv1basefilebasefilesystemreaddir&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/file/#Base.Filesystem.readdir&#34;&gt;&lt;code&gt;Base.Filesystem.readdir&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; readdir()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;.dockerenv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;bin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;boot&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;dev&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;etc&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;home&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lib&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;lib64&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;media&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;root&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;run&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sbin&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;srv&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;sys&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tmp&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;usr&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;var&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-oslistdirhttpsdocspythonorg3libraryoshtmloslistdir&#34;&gt;Python: &lt;a href=&#34;https://docs.python.org/3/library/os.html#os.listdir&#34;&gt;&lt;code&gt;os.listdir&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;listdir()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lib&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;home&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;etc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;media&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;var&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;srv&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sys&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;bin&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;usr&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;root&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;boot&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tmp&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;dev&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;opt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mnt&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;lib64&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;proc&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;run&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;sbin&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;.dockerenv&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;join-path-components&#34;&gt;Join path components&lt;/h2&gt;
&lt;h3 id=&#34;julia-basefilesystemjoinpathhttpsdocsjulialangorgenv1basefilebasefilesystemjoinpath&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/file/#Base.Filesystem.joinpath&#34;&gt;&lt;code&gt;Base.Filesystem.joinpath&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; joinpath(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;file.txt&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/home/file.txt&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-ospathjoinhttpsdocspythonorg3libraryospathhtmlospathjoin&#34;&gt;Python: &lt;a href=&#34;https://docs.python.org/3/library/os.path.html#os.path.join&#34;&gt;&lt;code&gt;os.path.join&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;path&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;join(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;file.txt&amp;#39;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/home/file.txt&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;get-the-current-working-directory&#34;&gt;Get the current working directory&lt;/h2&gt;
&lt;h3 id=&#34;julia-base__dir__httpsdocsjulialangorgenv1basefilebase__dir__&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/file/#Base.@__DIR__&#34;&gt;&lt;code&gt;Base.@__DIR__&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@__DIR__&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;/&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-osgetcwdhttpsdocspythonorg3libraryoshtmlosgetcwd&#34;&gt;Python: &lt;a href=&#34;https://docs.python.org/3/library/os.html#os.getcwd&#34;&gt;&lt;code&gt;os.getcwd&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; os
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; os&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;getcwd()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;/&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;get-the-running-file-path&#34;&gt;Get the running file path&lt;/h2&gt;
&lt;h3 id=&#34;julia-base__file__httpsdocsjulialangorgenv1basefilebase__file__&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/file/#Base.@__FILE__&#34;&gt;&lt;code&gt;Base.@__FILE__&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;h3 id=&#34;python-__path__httpsdocspythonorg3referenceimporthtml__file__&#34;&gt;Python: &lt;a href=&#34;https://docs.python.org/3/reference/import.html#__file__&#34;&gt;&lt;code&gt;__path__&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;hr&gt;
&lt;h2 id=&#34;return-an-array-of-zeros-with-the-same-shape&#34;&gt;Return an array of zeros with the same shape&lt;/h2&gt;
&lt;h3 id=&#34;julia-basezerohttpsdocsjulialangorgenv1basenumbersbasezero&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Base.zero&#34;&gt;&lt;code&gt;Base.zero&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; reshape(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UnitRange&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) with eltype &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; zero(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-numpyzeros_likehttpsnumpyorgdocstablereferencegeneratednumpyzeros_likehtml&#34;&gt;Python: &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.zeros_like.html&#34;&gt;&lt;code&gt;numpy.zeros_like&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zeros_like(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;return-an-array-of-ones-with-the-same-shape&#34;&gt;Return an array of ones with the same shape&lt;/h2&gt;
&lt;h3 id=&#34;julia-basefillhttpsdocsjulialangorgenv1basearraysbasefill--basesimilarhttpsdocsjulialangorgenv1basearraysbasesimilar&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/arrays/#Base.fill!&#34;&gt;&lt;code&gt;Base.fill!&lt;/code&gt;&lt;/a&gt; + &lt;a href=&#34;https://docs.julialang.org/en/v1/base/arrays/#Base.similar&#34;&gt;&lt;code&gt;Base.similar&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; reshape(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;UnitRange&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;) with eltype &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; fill!(similar(x), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-numpyones_likehttpsnumpyorgdocstablereferencegeneratednumpyones_likehtml&#34;&gt;Python: &lt;a href=&#34;https://numpy.org/doc/stable/reference/generated/numpy.ones_like.html&#34;&gt;&lt;code&gt;numpy.ones_like&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;import&lt;/span&gt; numpy &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; np
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;arange(&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reshape((&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       [&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; np&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ones_like(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;array([[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;get-the-value-for-the-given-key-if-key-is-in-dictionary-and-return-the-default-value-if-the-key-is-not-found&#34;&gt;Get the value for the given key if key is in dictionary, and return the default value if the key is not found&lt;/h2&gt;
&lt;h3 id=&#34;julia-basegethttpsdocsjulialangorgenv1basecollectionsbaseget-tupleanyanyany&#34;&gt;Julia: &lt;a href=&#34;https://docs.julialang.org/en/v1/base/collections/#Base.get-Tuple%7BAny,Any,Any%7D&#34;&gt;&lt;code&gt;Base.get&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;b&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; get(d, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;a&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; get(d, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;python-dictgethttpsdocspythonorg3librarystdtypeshtmldictget&#34;&gt;Python: &lt;a href=&#34;https://docs.python.org/3/library/stdtypes.html#dict.get&#34;&gt;&lt;code&gt;dict.get&lt;/code&gt;&lt;/a&gt;&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; d &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; {&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;: &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;get(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
</description>
    </item>
    
    <item>
      <title>Mochitsuki - Net New Resources (2020)</title>
      <link>https://matsueushi.github.io/posts/mochitsuki-net-new-resources/</link>
      <pubDate>Wed, 26 Aug 2020 22:49:08 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/mochitsuki-net-new-resources/</guid>
      <description>&lt;p&gt;アメリカ、ニュージャージー州のCarl Strumのソロプロジェクトと思われるmochitsukiのEPで、ジャンルはMath Rockでしょうか。&lt;/p&gt;
&lt;p&gt;日本語の餅つきから取っているんじゃないかと思っているんですが、bandcampのアーティスト欄に書かれている、&amp;ldquo;MOE CHEAT SUE KEY&amp;quot;から来ているんですかね。&lt;/p&gt;
&lt;p&gt;Spotifyでたまたま見つけて、メロディがポップでグイグイ展開していくところが結構いいなと思ったので記しておきます。&lt;/p&gt;
&lt;iframe style=&#34;border: 0; width: 350px; height: 470px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=975249322/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://mochitsuki.bandcamp.com/album/net-new-resources&#34;&gt;NET NEW RESOURCES by MOCHITSUKI&lt;/a&gt;&lt;/iframe&gt;
&lt;p&gt;リードトラックのAre You Madは悪夢めいたMVも作られています。

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/2ZUYzvKPC-0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Alt77 Alternative music blog の レビュー: &lt;a href=&#34;https://alt77.com/mochitsuki-are-you-mad-review/&#34;&gt;https://alt77.com/mochitsuki-are-you-mad-review/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Artist.link: &lt;a href=&#34;https://artist.link/mochi&#34;&gt;https://artist.link/mochi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Twitter: &lt;a href=&#34;https://twitter.com/carlstrum&#34;&gt;https://twitter.com/carlstrum&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Instagram: &lt;a href=&#34;https://www.instagram.com/carlstrum/?hl=en&#34;&gt;https://www.instagram.com/carlstrum/?hl=en&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hugoのページを検索できるようにした</title>
      <link>https://matsueushi.github.io/posts/hugo-search/</link>
      <pubDate>Sun, 23 Aug 2020 21:25:36 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/hugo-search/</guid>
      <description>&lt;p&gt;下を参考にしてページを検索できるようにしました。左にSearch項目を追加しました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://gist.github.com/eddiewebb/735feb48f50f0ddd65ae5606a1cb41ae&#34;&gt;Client side searching for Hugo.io with Fuse.js&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.mamansoft.net/2019/11/11/add-search-page-in-blog-made-by-hugo/&#34;&gt;Hugo製ブログに検索ページを追加してみた&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://blog.unigiri.net/article/hugo-lunr%E3%81%AB%E3%82%88%E3%82%8B%E6%97%A5%E6%9C%AC%E8%AA%9E%E5%85%A8%E6%96%87%E6%A4%9C%E7%B4%A2/&#34;&gt;Hugo + Lunrによる日本語全文検索&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんか微妙に検索結果がおかしい時もありますが、いったん置いておきます。&lt;/p&gt;
&lt;p&gt;あとはフォルダ構成をいろいろいじりました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでAudio Fingerprintingを実装 - Shazamの仕組みを理解する</title>
      <link>https://matsueushi.github.io/posts/audiofingerprinting/</link>
      <pubDate>Tue, 11 Aug 2020 23:17:00 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/audiofingerprinting/</guid>
      <description>&lt;p&gt;音楽が好きな人であれば&lt;a href=&#34;https://www.shazam.com/&#34;&gt;Shazam&lt;/a&gt;というアプリはご存知かと思います。&lt;/p&gt;
&lt;p&gt;街中で気になった曲をスマートフォンに聞かせると、
相当マイナーな曲でない限り大抵の場合10秒程度聞かせると曲名やアーティスト名を教えてくれて、
しかも多少雑音が混じってしまっていても大丈夫という非常に便利なアプリです。&lt;/p&gt;
&lt;p&gt;仕組みが気になったので、調べて一部をJuliaで実装してみました。&lt;/p&gt;
&lt;p&gt;Juliaのバージョンは1.5.0です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _       _ _&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;_     |  Documentation: https://docs.julialang.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _ _   _| |_  __ _   |  Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Pkg help.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | | | | | |/ _&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; |  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | |_| | | | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_| |  |  Version 1.5.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2020-08-01&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; _/ |&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_|_|_|\__&amp;#39;&lt;/span&gt;_|  |  Official https://julialang.org/ release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|__/                   |
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;意外と単純な基本原理&#34;&gt;意外と単純な基本原理&lt;/h2&gt;
&lt;p&gt;最初、ディープラーニング的なテクニックを使っているのかと思ったのですが、調べてみると意外と手法自体はシンプルなものでした。&lt;/p&gt;
&lt;p&gt;曲を認識させるにあたり、原曲の曲データの特徴量を以下の方法でフィンガープリント
(&lt;a href=&#34;https://en.wikipedia.org/wiki/Acoustic_fingerprint&#34;&gt;Audio fingerprint/Acoustic fingerprint&lt;/a&gt;) します。&lt;/p&gt;
&lt;p&gt;1. 曲データのスペクトログラムを作成する (スペクトログラムに関しては、&lt;a href=&#34;../spectrogram/&#34;&gt;前&lt;/a&gt; にやりましたのでそちらを参照してください)&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_spectrogram.png&#34; alt=&#34;Spectrogram&#34;&gt;&lt;br&gt;
2. スペクトログラムのピークを探す。これは、適当な大きさの最大値フィルターをかけて元の画像と一致したらピークとします。
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_peaks.png&#34; alt=&#34;Peaks&#34;&gt;&lt;br&gt;
3. スペクトログラムのピークからペアを作る。と言っても全ての組み合わせのペアを考えるのではなく、二点が近いペアのみを考えます。
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_pairs.png&#34; alt=&#34;Pairs&#34;&gt;&lt;br&gt;
4. ペアからハッシュを生成する。ピークを(時間, 周波数)のペアで表した時に、前項で見つけたペアが $((t_1, f_1), (t_2, f_2)), t_1 &amp;lt; t_2$ であるとします。
この時、ハッシュテーブルに登録するキーと値はそれぞれ $[f_1:f_2:\Delta t]$ と $t_1$ になります。ここで、$\Delta t = t_2 - t_1$です。&lt;/p&gt;
&lt;p&gt;という方法で曲から特徴量を抽出して曲のフィンガープリンティングを行います。&lt;/p&gt;
&lt;p&gt;曲データにノイズが加わっていたとしても（全く同じではないですが、一致していることが確認するには十分に）似たようなハッシュデータが得られるようになっているのがポイントです。&lt;/p&gt;
&lt;h2 id=&#34;マッチングの方法&#34;&gt;マッチングの方法&lt;/h2&gt;
&lt;p&gt;Shazamを使ったことがある人ならわかると思うのですが、Shazamを使って曲名を認識させる際には、
曲を全部聞かせる必要はなく、途中から一部分を聞かせるだけで十分です。&lt;/p&gt;
&lt;p&gt;ハッシュが Hash:time = $[f_1:f_2:\Delta t]:t_1$ であることがキーポイントで、
原曲と聞かせた曲の一部分では曲のスタート位置が当然違うわけですが、$[f_1:f_2:\Delta t]$
はスタート位置とは関係ないので双方に出てくるので、それぞれ対応する時間を$t_1$と$t^\prime_1$として、
時間のオフセット$t_1 - t^\prime_1$を計算すると、原曲と聞かせた曲のスタート位置の差である定数になるはずです。&lt;/p&gt;
&lt;p&gt;ハッシュが一致した時に、原曲と聞かせた曲で見つかった時間のプロットを見たほうが早いと思います。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter.png&#34; alt=&#34;Scatter plot&#34;&gt;&lt;/p&gt;
&lt;p&gt;曲が一致している場合は上のようにマッチしたハッシュが傾き1の直線の上に並びます。
線から外れている点は、間違ってマッチングしてしまった点です。&lt;/p&gt;
&lt;p&gt;逆に曲が一致していない場合であれば、間違ってハッシュがマッチングしてしまったとしても時間の差はランダムに分布することが予想されます。&lt;/p&gt;
&lt;p&gt;あとで具体例を見せますが、時間のオフセットをヒストグラムにすると、マッチングしている場合は単一のピークが出現します。
理屈としては単純ですが鮮やかな手法で、これを最初に考えた人は頭いいですね。&lt;/p&gt;
&lt;p&gt;もっと詳しく知りたくなった方は原論文 &lt;a href=&#34;http://www.ee.columbia.edu/~dpwe/papers/Wang03-shazam.pdf&#34;&gt;A.WangのAn Industrial-Strength Audio Search Algorithm&lt;/a&gt; を読んでください。&lt;/p&gt;
&lt;h2 id=&#34;juliaで実装&#34;&gt;Juliaで実装&lt;/h2&gt;
&lt;p&gt;本格的にShazamのようなマッチングを実現しようとすれば、
大量の楽曲データをfingerprintして、ハッシュデータをデータベースに格納して、
曲の認識の際はデータベースからの検索を行ってスコアリングし、最も類似度が高い曲を提示する、という処理が必要になると思います。&lt;/p&gt;
&lt;p&gt;今回は、基本原理を調べて実装する段階で力尽きてしまったので、核となるfingerprintとマッチングできた場合・出来なかった場合のシグナルの可視化に絞って行いたいと思います。&lt;/p&gt;
&lt;p&gt;コードは(Pythonですが)、&lt;a href=&#34;https://github.com/worldveil/dejavu/blob/master/dejavu/logic/fingerprint.py&#34;&gt;worldveil/dejavuのfingerprint.py&lt;/a&gt;を参考にしました。&lt;/p&gt;
&lt;h3 id=&#34;wavファイル&#34;&gt;WAVファイル&lt;/h3&gt;
&lt;p&gt;WAVファイルの読み込みは &lt;a href=&#34;https://github.com/dancasimiro/WAV.jl&#34;&gt;WAV.jl&lt;/a&gt; を使います。
詳細は&lt;a href=&#34;../spectrogram/&#34;&gt;ここ&lt;/a&gt; を見てください。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; WAV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ys, fs, _, _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wavread(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;test/data/original.wav&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;([&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.44181646168401134&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.40189825128940704&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.43061616870632036&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3761101107821894&lt;/span&gt;; &lt;span style=&#34;color:#f92672&#34;&gt;…&lt;/span&gt; ; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.17578661458174383&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.04297006134220405&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1151768547624134&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1497848445081942&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;44100.0f0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x0010&lt;/span&gt;, WAVChunk[WAVChunk(&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt &amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt8&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x01&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x44&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xac&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xb1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x04&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;])])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;スペクトログラム&#34;&gt;スペクトログラム&lt;/h3&gt;
&lt;p&gt;今回は簡単のため、スペクトログラムは &lt;a href=&#34;https://github.com/JuliaDSP/DSP.jl&#34;&gt;DSP.jl&lt;/a&gt; を使って作りましょう。&lt;/p&gt;
&lt;p&gt;DSP.Periodograms.spectrogramの&lt;a href=&#34;https://docs.juliadsp.org/stable/periodograms/#DSP.Periodograms.spectrogram&#34;&gt;ドキュメンテーション&lt;/a&gt; はかなり簡素なので
&lt;a href=&#34;https://matplotlib.org/3.1.1/api/mlab_api.html#matplotlib.mlab.specgram&#34;&gt;matplotlib.mlab.specgram&lt;/a&gt; や
&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.signal.spectrogram.html&#34;&gt;scipy.signal.spectrogram&lt;/a&gt;
も参照したりしていました。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;spectrogram&lt;/code&gt; が返す &lt;code&gt;Spectrogram&lt;/code&gt; オブジェクトからスペクトログラムの2次元配列を取得するには &lt;code&gt;.power&lt;/code&gt; でアクセスすれば良いです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; DSP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; songspectrogram(samples, n, fs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    spec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spectrogram(samples, n; fs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fs, window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DSP&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Windows&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;hanning)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;power
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    normspec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; log10&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(spec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; normspec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; songspectrogram(ys[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], n, fs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2049&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;284&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.70616&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.07873&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.17428&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.92614&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.63062&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.47055&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;…&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.40998&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.13383&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.47217&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.79269&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.69248&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.65601&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.32769&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.22531&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.85743&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.56021&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.97262&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.67239&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.66505&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.78739&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.7776&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.62074&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.43576&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.01717&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.03&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.558&lt;/span&gt;     &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.53623&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.9818&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.17798&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.68783&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.94568&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.43333&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.61844&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.74417&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8.42553&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.95556&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.43267&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.78585&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.39696&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.4776&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.94032&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.69941&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.9579&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.4222&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.48091&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7.12551&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.49895&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.33804&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.77574&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.66916&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.62902&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.67299&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.92199&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.97365&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.47771&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.91721&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.9714&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.75402&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.86911&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.84826&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.4678&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.45818&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.10731&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.27021&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.21703&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.90298&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;…&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.07139&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.17006&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.64172&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.11589&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.22632&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.74766&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.58357&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.90762&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.7872&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.43402&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.40083&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.44588&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.23751&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.09109&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.55516&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.60761&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.69366&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.61307&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.80939&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.70587&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.69206&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.20379&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.66742&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.45696&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.87312&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.02429&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.4179&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.71929&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.72232&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.55507&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.26219&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.08835&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.81918&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.87016&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.02507&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.6202&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.44302&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.35965&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.34106&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.80432&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.04157&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4.25322&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;                                                      &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;⋱&lt;/span&gt;                          &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;                              
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.6353&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.9023&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.7465&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.6273&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15.0526&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7402&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.5892&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.8856&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8646&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.332&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.3234&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.8574&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.0681&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.2647&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.8669&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.1085&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.4588&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9597&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.332&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.1384&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9654&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.3453&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8526&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14.436&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.4502&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.5558&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.7107&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.4894&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7158&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8924&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7527&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.745&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.8113&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.007&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.0835&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.283&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.849&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9355&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.6198&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.6698&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7177&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8629&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.4374&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.7903&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.5631&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.7018&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7313&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.4594&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8144&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.0432&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.7412&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8539&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.1211&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.3507&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;…&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.5013&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.6661&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.4602&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.5109&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.4371&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.5457&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9763&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.1635&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.687&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.7323&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.827&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7099&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.7457&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.372&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.088&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.1428&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.8306&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.9932&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.5124&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.445&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.5719&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9994&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9061&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.9427&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.5007&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.151&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.2719&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.2705&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.2111&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.879&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.8636&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;14.4831&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.7474&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.3807&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.008&lt;/span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.2068&lt;/span&gt;      &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.5433&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.7996&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.0267&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;11.3213&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12.6664&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;13.6277&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;最大値フィルター&#34;&gt;最大値フィルター&lt;/h3&gt;
&lt;p&gt;Scipyの&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.maximum_filter.html&#34;&gt;&lt;code&gt;scipy.ndimage.maximum_filter&lt;/code&gt;&lt;/a&gt;
に該当するフィルターが見つからなかったので、下のように最大値フィルターを構成します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; maxfilter(matrix, filtersize)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    temp, result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zero(matrix), zero(matrix)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n1, n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(matrix)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        imin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(i &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; filtersize, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        imax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min(i &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filtersize, n1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        temp[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; maximum(view(matrix, imin&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;imax, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;), dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        jmin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(j &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; filtersize, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        jmax &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min(j &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; filtersize, n2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        result[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; maximum(view(temp, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, jmin&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;jmax), dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; result
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.94&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.54&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.67&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.48&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.10&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;0.77&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.54&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.63&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.32&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;0.83&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.54&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.57&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.50&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;0.56&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.40&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.79&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.69&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.43&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;0.47&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.61&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.10&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.18&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.88&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.94&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.54&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.67&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.48&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.77&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.54&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.63&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.32&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.83&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.54&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.57&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.56&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.79&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.69&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.43&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.47&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.61&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.18&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.88&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; maxfilter(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.67&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.63&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.83&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.83&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.61&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.79&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.79&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.88&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.88&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; maxfilter(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.98&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.83&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.96&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ピークを探す&#34;&gt;ピークを探す&lt;/h3&gt;
&lt;p&gt;次に&lt;code&gt;maxfilter&lt;/code&gt;をかけて得られた行列からピーク(実際には局所的なピークなわけですが)を取得します。
ピークを求めるときに背景部分は排除しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; getmaskindex(mask)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    maskindex &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; getindex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(findall(mask), [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    freqs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; maskindex[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    times &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; maskindex[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; collect(zip(times, freqs))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; findpeaks(matrix, filtersize)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    maxmatrix &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; maxfilter(matrix, filtersize)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    maxmask &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; maxmatrix &lt;span style=&#34;color:#f92672&#34;&gt;.==&lt;/span&gt; matrix
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    nobackground &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; matrix &lt;span style=&#34;color:#f92672&#34;&gt;.!=&lt;/span&gt; minimum(matrix)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; getmaskindex(maxmask &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; nobackground)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; findpeaks(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;); y[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; findpeaks(y, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;dejavuでは&lt;a href=&#34;https://github.com/worldveil/dejavu/blob/e56a4a221ad204654a191d217f92aebf3f058b62/dejavu/logic/fingerprint.py#L88-L90&#34;&gt;ピークに出現させたくない箇所のマスクを作成&lt;/a&gt;する際に、背景を抽出した後
&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.binary_erosion.html&#34;&gt;scipy.ndimage.binary_erosion&lt;/a&gt;
を使って領域の内部を取得して作成、と言う手順を取っているのですが、このようにする意味はよくわかりませんでした。&lt;/p&gt;
&lt;p&gt;余談ですがこのような&lt;a href=&#34;https://en.wikipedia.org/wiki/Mathematical_morphology&#34;&gt;Mathematical morphology&lt;/a&gt;の操作は
Juliaでは&lt;a href=&#34;https://github.com/JuliaImages/ImageMorphology.jl&#34;&gt;ImageMorphology.jl&lt;/a&gt;を使うとできます。
Scipyの&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/generated/scipy.ndimage.generate_binary_structure.html&#34;&gt;scipy.ndimage.generate_binary_structure&lt;/a&gt;みたいに近傍の構造を指定する機能はなさそうです。&lt;/p&gt;
&lt;h3 id=&#34;ハッシュを生成&#34;&gt;ハッシュを生成&lt;/h3&gt;
&lt;p&gt;次にピークの集合のペアリングを行った後、ハッシュを作成します。
全ての組み合わせてペアを作ると大変なので、各ピークに対して&lt;code&gt;fanvalue&lt;/code&gt;個先までのピークをチェックし、
時間、周波数の位置の差分がそれぞれ&lt;code&gt;timerange&lt;/code&gt;, &lt;code&gt;freqrange&lt;/code&gt;(これらは&lt;code&gt;Pair{Int64}&lt;/code&gt;の元とします)に入っていたらペアリングすることにしましょう。&lt;/p&gt;
&lt;p&gt;ハッシュは標準ライブラリ&lt;a href=&#34;https://docs.julialang.org/en/v1/stdlib/SHA/index.html&#34;&gt;&lt;code&gt;SHA&lt;/code&gt;&lt;/a&gt;で生成出来ます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; SHA
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; paringpeaks(peaks, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;NTuple&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ntimes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(peaks)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# println(peaks)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mintdelta, maxtdelta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; timerange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    minfdelta, maxfdelta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; freqrange
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i1, (t1, f1)) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs(&lt;span style=&#34;color:#66d9ef&#34;&gt;IndexLinear&lt;/span&gt;(), peaks)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;fanvalue
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; i1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; i
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i2 &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ntimes &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            t2, f2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; peaks[i2]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            dt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; t1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; f2 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; f1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (mintdelta &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; dt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; dt &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; maxtdelta &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; minfdelta &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; df &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;=&lt;/span&gt; maxfdelta) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;continue&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            push!(data, (f1, f2, dt, t1))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; hashpeaks(peaks, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hashdict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pairs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; paringpeaks(peaks, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (f1, f2, dt, t1) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        info &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$f1&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$f2&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;|&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$dt&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hash &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; bytes2hex(sha256(info))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        hashdict[hash] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# println(&amp;#34;($t1, $f1) - ($t2, $f2), $info [$hash] -&amp;gt; $t1&amp;#34;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; hashdict
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; peaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), (&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; fanvalue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; timerange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; freqrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; hashdict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hashpeaks(peaks, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;} with &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt; entries&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;db724d0a500003163dce50a08d4cb5199d837df32ff9bea778229f6f89e0ec49&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;9fc7745cc33e507d9ad28f16e9bd8d717b0de72ed078424da70292feb19248e4&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;3533f2977e2cb6bb57e7135baff39dbb15e418fa6e7841216ebb6979110a5da4&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fe812d99d40bccea0f739ed5716d6f77af15b68fc73190b56bd11d579b7ed5d7&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;798fb293c5fce0ad4b6c4405d361322ada948757accfbfb43c79b094702c419f&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;8b0bbed14dafb6086bf675ee4fe2ab1e3a33a79bcc45f990918ba5cb24f12089&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1c22c9113f4f50934e03ac63bf365ddebfb220f6af556f6dd31ee9c8be4eb619&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;c241ae9f10dd86f58a0c97363f4de1f08d10e3b0dae3cf139efd6027f2c75482&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;曲をフィンガープリント&#34;&gt;曲をフィンガープリント&lt;/h3&gt;
&lt;p&gt;今までの準備で部品は揃ったので、あとはつなげていくだけです。
今回は左右それぞれのチャンネルで独立にフィンガープリントして合体させています。
フィンガープリントの結果を可視化したくなったので、&lt;code&gt;fingerprint_song&lt;/code&gt;に関連するコードが入っています。
長い時間の曲データのフィンガープリントの結果を可視化するのには時間がかかるのでご注意ください。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fingerprint(samples, n, fs, filtersize, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    spec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; songspectrogram(samples, n, fs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    peaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findpeaks(spec, filtersize)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hashdict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hashpeaks(peaks, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; hashdict
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fingerprint_song(ys, fs, n, filtersize, fanvalue, timerange, freqrange; path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hashdict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;size(ys, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; view(ys, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, i)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;!&lt;/span&gt;isnothing(path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            spec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; songspectrogram(samples, n, fs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            peaks &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; findpeaks(spec, filtersize)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            pairs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Hanauta&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;paringpeaks(peaks, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            heatmap(spec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (f1, f2, dt, t1) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; pairs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                plot!([t1, t1 &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; dt], [f1, f2], label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linecolor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:blue&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            scatter!(peaks, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;_ch&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.png&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            savefig(output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        newdict &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fingerprint(samples, n, fs, filtersize, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        merge!(hashdict, newdict)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; hashdict
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;マッチングさせてみる&#34;&gt;マッチングさせてみる&lt;/h2&gt;
&lt;p&gt;以上でWAVファイルからフィンガープリントを作成することができるようになったので、実際にマッチングできることを確かめてみます。
元のWAVにホワイトノイズを加えたデータや、スピーカーで曲を再生したものをiPhoneのボイスメモで録音してWAVファイルに変換したものでマッチングできることを確認します。&lt;/p&gt;
&lt;p&gt;サンプル曲として、Windows 95のCD-ROMにビデオが収録されていたことでも知られる
&lt;a href=&#34;https://en.wikipedia.org/wiki/Weezer_(Blue_Album)&#34;&gt;WeezerのBlue Album&lt;/a&gt;に収録されている
&lt;a href=&#34;https://en.wikipedia.org/wiki/Buddy_Holly_(song)&#34;&gt;Buddy Holly&lt;/a&gt;を使うことにします。
原曲データは本当はCDからWAVファイルとしてリッピングした方が良いと思うのですが、
再度リッピングするのが面倒だったので以前リッピングしたAACファイルをiTunesでWAV形式に変換して原曲データとしました。まあ大丈夫でしょう。&lt;/p&gt;
&lt;p&gt;「聞かせた」時のデータですが、今回は2種類を試してみました。一つは原曲データにホワイトノイズを加えたもの(編集にはAudacityを使いました)と、
もう一つはより実践的なサンプルとして、原曲データをスピーカーで再生し、iPhoneのボイスメモ機能を使って録音し、
コンピューターに転送してMP4からWAVファイルに変換したものです。時間は13秒程度です。&lt;/p&gt;
&lt;p&gt;ノイズを加える際は、Amplitudeが0.4と普通に聞いてかなり邪魔に感じるレベルのノイズを加えました。
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_noise.png&#34; alt=&#34;Noise&#34;&gt;&lt;/p&gt;
&lt;p&gt;以下のコードで原曲とオリジナル曲のハッシュのマッチング結果の図示を行います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Measures
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plot_fingerprint(input, n, filtersize, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ys, fs, _, _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wavread(input)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# ysview = view(ys, 100000:300000, :)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ysview &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    path, _ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; splitext(input)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; fingerprint_song(ysview, fs, n, filtersize, fanvalue, timerange, freqrange; path &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; path)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; hashmatching(hash1, hash2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ts1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ts2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; h &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; keys(hash2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; haskey(hash1, h)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            t1, t2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hash1[h], hash2[h]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            push!(ts1, t1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            push!(ts2, t2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i &lt;span style=&#34;color:#f92672&#34;&gt;+=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Match: &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$i&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; i &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        scatter(ts1, ts2, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;mm)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        savefig(joinpath(&lt;span style=&#34;color:#a6e22e&#34;&gt;@__DIR__&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;output/scatter.png&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tsdiff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ts1 &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; ts2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        histogram(tsdiff, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;mm)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        savefig(joinpath(&lt;span style=&#34;color:#a6e22e&#34;&gt;@__DIR__&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;output/hist.png&amp;#34;&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4096&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;filtersize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fanvalue &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;timerange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;freqrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;input1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; joinpath(&lt;span style=&#34;color:#a6e22e&#34;&gt;@__DIR__&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/04 Buddy Holly.wav&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;input2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; joinpath(&lt;span style=&#34;color:#a6e22e&#34;&gt;@__DIR__&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;data/noise_added.wav&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hash1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plot_fingerprint(input1, n, filtersize, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hash2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; plot_fingerprint(input2, n, filtersize, fanvalue, timerange, freqrange)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;hashmatching(hash1, hash2)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずはWAVファイルにノイズを加えたものの比較結果を見ましょう。横軸は原曲ファイルの時間、縦軸は比較対象ファイルの時間です。
点を画面に納める都合上アスペクト比率は1ではないです。
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter_noise.png&#34; alt=&#34;Scatter&#34;&gt;&lt;/p&gt;
&lt;p&gt;時間のオフセットのヒストグラムも見てみましょう。
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_hist_noise.png&#34; alt=&#34;Hisogram&#34;&gt;&lt;/p&gt;
&lt;p&gt;ノイズの影響は受けつつもヒストグラムに単一のピークが認められました。&lt;/p&gt;
&lt;p&gt;次にスピーカーから流した音をiPhoneで録音して試したところ、こちらはなぜかうまくいきませんでした。
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter_recorded_48khz.png&#34; alt=&#34;Scatter&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_hist_recorded_48khz.png&#34; alt=&#34;Histogram&#34;&gt;&lt;/p&gt;
&lt;p&gt;何が原因なのか分からずかなり時間を使ってしまったのですが、ピークをプロットした点の画像を重ねてやっと原因がわかりました。&lt;/p&gt;
&lt;p&gt;原因はサンプリング周波数の差で、音楽CDのサンプリング周波数は44.1kHzであるため、
CDからリッピングしたWAVファイルのサンプリング周波数も同じく44.1kHzになりますが、
iPhoneのボイスメモで録音したサウンドのサンプリング周波数は48kHzだったのが原因でした。&lt;/p&gt;
&lt;p&gt;録音した音声ファイルを、&lt;a href=&#34;http://audacity-mp3.xyz/sannpurinngure-to/&#34;&gt;Audacityでサンプリング周波数を変えて&lt;/a&gt;もう一度試してみます。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter_recorded.png&#34; alt=&#34;Scatter&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_hist_recorded.png&#34; alt=&#34;Histogram&#34;&gt;&lt;/p&gt;
&lt;p&gt;今度は上手く出来ました。&lt;/p&gt;
&lt;p&gt;念のため全然関係ない曲だとマッチングできないことも確かめておきましょう。
本当は大量の曲を予め解析しておいて、実際に検索できることを確かめる必要があると思いますので手抜きです。&lt;/p&gt;
&lt;p&gt;なお、曲は適当に15秒程度にトリミングしています。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Blue Album一曲目のMy Name Is Jonas&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter_mynameisjonas.png&#34; alt=&#34;Scatter&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_hist_mynameisjonas.png&#34; alt=&#34;Histogram&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Candy_Claws&#34;&gt;Candy Claws&lt;/a&gt;の&lt;a href=&#34;https://www.youtube.com/watch?v=_kuydQO27TM&#34;&gt;Pangaea Girls (Magic Feeling)&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter_pangeagirls.png&#34; alt=&#34;Scatter&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_hist_pangeagirls.png&#34; alt=&#34;Histogram&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E3%82%B7%E3%83%A5%E3%82%AC%E3%83%BC%E3%83%BB%E3%83%99%E3%82%A4%E3%83%96&#34;&gt;シュガー・ベイブ&lt;/a&gt;の
&lt;a href=&#34;https://ja.wikipedia.org/wiki/DOWN_TOWN&#34;&gt;DOWN TOWN&lt;/a&gt;&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_scatter_downtown.png&#34; alt=&#34;Scatter&#34;&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/audiofingerprinting_hist_downtown.png&#34; alt=&#34;Histogram&#34;&gt;&lt;/p&gt;
&lt;p&gt;誤ってマッチングしているハッシュが思いの外多いですが、ヒストグラムを見ると時間のオフセットはばらつきがあり特徴的な単一のピークはありません。&lt;/p&gt;
&lt;p&gt;ハイパーパラメーターを調整して無駄なマッチ数を減らす、バックグラウンドを上手に除去するなど、
改良の余地はまだまだありそうですが、今回はここまでとします。&lt;/p&gt;
&lt;p&gt;あまり綺麗ではないですが、コードは下に置いておきます。&lt;br&gt;
&lt;a href=&#34;https://github.com/matsueushi/AudioFingerprinting&#34;&gt;https://github.com/matsueushi/AudioFingerprinting&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://www.ee.columbia.edu/~dpwe/papers/Wang03-shazam.pdf&#34;&gt;Wang, A. (2003, October). An industrial strength audio search algorithm. In Ismir (Vol. 2003, pp. 7-13).&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://en.wikipedia.org/wiki/Acoustic_fingerprint&#34;&gt;Acoustic fingerprint (Wikipedia, The Free Encyclopedia.)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://people.csail.mit.edu/sshum/talks/audio_fingerprinting_sls_24Oct2011.pdf&#34;&gt;The Basics of Audio Fingerprinting&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://willdrevo.com/fingerprinting-and-audio-recognition-with-python/&#34;&gt;Audio Fingerprinting with Python and Numpy&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://xiao-ming.digick.jp/mir/shazam/&#34;&gt;Shazamのしくみをちょっと理解してみる&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/worldveil/dejavu&#34;&gt;worldveil/dejavu&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaDSP/DSP.jl&#34;&gt;JuliaDSP/DSP.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://audacity-mp3.xyz/sannpurinngure-to/&#34;&gt;【Audacity】サンプリングレートを変換する方法 &lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2020/8/1)</title>
      <link>https://matsueushi.github.io/playlist/20200801/</link>
      <pubDate>Sat, 01 Aug 2020 18:18:54 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20200801/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://twitter.com/Nanoraydx&#34;&gt;NANORAY&lt;/a&gt; / DOGWALK2000&lt;/p&gt;
&lt;iframe style=&#34;border: 0; width: 100%; height: 120px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=71366246/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=2018878637/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://nanoray.bandcamp.com/album/tilt&#34;&gt;TILT by NANORAY&lt;/a&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;&lt;a href=&#34;https://www.instagram.com/tamanaramen/&#34;&gt;tamanaramen&lt;/a&gt;- angelnumber

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/fa2T58leXQ8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Tempalay - 革命前夜&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/2vOeE2Uh2UDG5jow8F2WQ9&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;valknee + ANTIC - 人生最高のSSS (MV)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/-xr7RmPeRLw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;NENAIKO DAREDA - 夏の星座にぶら下がってぇ&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/269870204&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/nenaiko_dareda&#34; title=&#34;NENAIKO DAREDA&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;NENAIKO DAREDA&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/nenaiko_dareda/19vyht7tkvs1&#34; title=&#34;夏の星座にぶら下がってぇ&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;夏の星座にぶら下がってぇ&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;kaho_ss - マヨナカテンション(Midnight High)&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/338126132&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/kaho_ss&#34; title=&#34;kaho_ss&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;kaho_ss&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/kaho_ss/midnight-high&#34; title=&#34;マヨナカテンション(Midnight High)&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;マヨナカテンション(Midnight High)&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;全てわたしの所為です。 - †&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/850198354&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/subetewatashinoseidesu&#34; title=&#34;全てわたしの所為です。&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;全てわたしの所為です。&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/subetewatashinoseidesu/vjdgy1b5x2hc&#34; title=&#34;†&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;†&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Toccoyaki - Toccoyaki &amp;amp; minasea - きみと逃げる&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/859649038&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/toccoyaki&#34; title=&#34;Toccoyaki&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Toccoyaki&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/toccoyaki/kimitonigeru&#34; title=&#34;Toccoyaki &amp;amp; minasea - きみと逃げる&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Toccoyaki &amp;amp; minasea - きみと逃げる&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Yxngxr1 - RockStore

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7nCEsBhUzOo&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Midnight Tokyo 東京の真夜中 &amp;ndash; *°:⋆ₓₒ Deko

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Srf9Kvb0Gms&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Menace無 - Ms.Jealousy&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/4rjRqsc7ZRC6TzhM8OCMTs&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;S亜TOH - ガバじゃなきゃ (feat. Ken truths)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ji6OtMWZFAk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;豆異℃ - 寒天基地

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/zwSbm-zgd1o&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;水中、それは苦しい「保育園落ちた、吉田死ね」MV

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Y7Cn9ye5xHk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>numpy.whereのようなことをJuliaでやりたい</title>
      <link>https://matsueushi.github.io/posts/getindex/</link>
      <pubDate>Fri, 24 Jul 2020 21:42:14 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/getindex/</guid>
      <description>&lt;p&gt;&lt;code&gt;Array&lt;/code&gt; から条件を満たすインデックスを取得する時は、&lt;code&gt;findall&lt;/code&gt; を使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;36&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;49&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;81&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; findall(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;%&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, ar)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2次元の場合&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; ar &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                 &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; findall(ar)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;CartesianIndex&lt;/span&gt;{&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CartesianIndex&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;CartesianIndex&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;getindex&lt;/code&gt; と組み合わせると良い。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; getindex&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(findall(ar), [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2020/7/14) </title>
      <link>https://matsueushi.github.io/playlist/20200714/</link>
      <pubDate>Tue, 14 Jul 2020 23:53:47 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20200714/</guid>
      <description>&lt;p&gt;White Ring / Ixc999&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/3tG5sVAL1Xndndj8vG21hz&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;PEOPLE 1 &amp;ldquo;フロップニク&amp;rdquo; （Official Video）

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/xSwUJ66nuNk&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;約嗎 - Kimberley Chen 陳芳語 X 薩麥爾 SMY (Prod. 製作俠 Tower da Funkmasta)｜Official Music Video

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/Xl27meKrArM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Kanako Wada / SUNDAY BRUNCH&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/4wC9F4ykpyYjOLJpVhqfvo&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;EmoCosine / Give You My World 【from Lanota】&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/855538639&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/emocosine&#34; title=&#34;EmoCosine&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;EmoCosine&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/emocosine/lanota&#34; title=&#34;Give You My World 【from Lanota】&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Give You My World 【from Lanota】&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;ruruna / 이달의 소녀 오드아이써클 (LOONA/ODD EYE CIRCLE) - Girl Front [ruruna edit]&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/855624712&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/runarunaa&#34; title=&#34;ruruna&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;ruruna&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/runarunaa/loonaodd-eye-circle-girl-front-ruruna-flip&#34; title=&#34;이달의 소녀 오드아이써클 (LOONA/ODD EYE CIRCLE) - Girl Front [ruruna edit]&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;이달의 소녀 오드아이써클 (LOONA/ODD EYE CIRCLE) - Girl Front [ruruna edit]&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;SNA GERE / 悲しき砂漠の罪人　ヒップホップ　ボカロラップ

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/prOc034sFn0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;emamouse / でかい人と小さい人&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/70jGkCRejGGCqYKF5ROIXe&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;Shin Sakiura, AAAMYYY - NIGHT RUNNING&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/1U1hHDgjZC1WbZ7aVR2mMf&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;david prost / 東京2017年新年&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/300385728&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/david-prost&#34; title=&#34;david prost&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;david prost&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/david-prost/2017a&#34; title=&#34;東京2017年新年&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;東京2017年新年&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;sky - 301G - 亲吻自己在镜子里死去 / Kiss Yourself In The Mirror and Die

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/X0klmWM62nQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Crystal Castles - Kept&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2020/7/8)</title>
      <link>https://matsueushi.github.io/playlist/20200709/</link>
      <pubDate>Wed, 08 Jul 2020 23:06:44 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20200709/</guid>
      <description>&lt;p&gt;C.H.O.C.O · Sakura Tange, Kyoko Hikami&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/6gADBAtV8MeODHNTxvuY68&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;BLACK RHYME MOLLUCAN - KENAPA GANAS ? FT BRAM DJITMAU X ROMO ( OFFICIAL MUSIC VIDEO )

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/AcRBlVK0Qcs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;The Mirraz - ダガー(Official Music Video)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ga8q_-7m21E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Earth to G San (feat. Tetsuya Hikita)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/0erj5bpUMnM&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;夏時間／ゴムバンド

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/aQQt8Y8B-Ns&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Alfa San - waiting for you

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/J1n6UHCu3Z8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;♡ilyTOMMY♡ - Cutie&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/490286550&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/loverbboi&#34; title=&#34;♡ilyTOMMY♡&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;♡ilyTOMMY♡&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/loverbboi/cutie&#34; title=&#34;Cutie *ON ITUNES AND SPOTIFY*&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Cutie *ON ITUNES AND SPOTIFY*&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;MAMANG KESBOR - AMER

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/qFaQfF2RZx8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;BOaT / Mr.Crowly On The Beach
BOaT / Don&amp;rsquo;t You Ever Leave Me&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2020/7/3)</title>
      <link>https://matsueushi.github.io/playlist/20200703/</link>
      <pubDate>Fri, 03 Jul 2020 23:06:44 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20200703/</guid>
      <description>&lt;p&gt;QT - Hey QT

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/1MQUleX1PeA&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;CONTACT LENS / 2 THA DAWN

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/wT8TxlZLWSY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;KOTO/ことりっぷ 【スペシャルMV】VHSver

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/SAgQ5InIO_Q&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;burbank / Sorry, I Like You

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/oeLf0DX70Q0&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;HaroinFather - Cutie (prod.coffv)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/kNbJDqHUg8M&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Die Moulinettes / Der Letzte Spieltag&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/44ck5fTddFeAZ7eR3x4y2V&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;powaramiu - ドキドキ、ういるす / 生類哀れみの令&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/250174817&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/powaramiu&#34; title=&#34;powaramiu&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;powaramiu&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/powaramiu/dyx4hmw7vn5n&#34; title=&#34;ドキドキ、ういるす  / 生類哀れみの令&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;ドキドキ、ういるす  / 生類哀れみの令&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;aminome あみのめ - まぶたを閉じて&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/266852139&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/aminome-1&#34; title=&#34;aminome あみのめ&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;aminome あみのめ&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/aminome-1/h4pmfedwmueu&#34; title=&#34;まぶたを閉じて&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;まぶたを閉じて&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;乆 / 盆&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/847297150&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/user-57959243&#34; title=&#34;乆&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;乆&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/user-57959243/bon&#34; title=&#34;盆&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;盆&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;⌘ / wip&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/843476935&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/0x000002d7&#34; title=&#34;⌘&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;⌘&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/0x000002d7/wip&#34; title=&#34;wip&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;wip&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;Nice Guys / Yot Club - Spiral Stairs&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/828338398&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/niceguysrecords&#34; title=&#34;Nice Guys&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Nice Guys&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/niceguysrecords/spiral-stairs&#34; title=&#34;Yot Club - Spiral Stairs&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Yot Club - Spiral Stairs&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;𝐤𝐰𝐰𝐮𝐧𝐝𝐨! / on four wheels.&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/839004388&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/15yearoldwitha404&#34; title=&#34;𝐤𝐰𝐰𝐮𝐧𝐝𝐨!&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;𝐤𝐰𝐰𝐮𝐧𝐝𝐨!&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/15yearoldwitha404/on-four-wheels&#34; title=&#34;on four wheels.&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;on four wheels.&lt;/a&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>スペクトログラムを作成する</title>
      <link>https://matsueushi.github.io/posts/spectrogram/</link>
      <pubDate>Sun, 28 Jun 2020 23:35:43 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/spectrogram/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://aphextwin.warp.net/&#34;&gt;Aphex Twin&lt;/a&gt; のシングル &lt;a href=&#34;https://aphextwin.warp.net/release/68151-aphex-twin-windowlicker&#34;&gt;Windowlicker&lt;/a&gt; は印象的なジャケット&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/album/0rfpBkCuMMkUjKEstPoSTh&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;や&lt;a href=&#34;https://www.youtube.com/watch?v=5ZT3gTu4Sjw&#34;&gt;クリスカニンガムのPV&lt;/a&gt;が有名ですが、2曲目に収録されている
$\Delta M_i^{-1} = - \alpha \sum_{n=1}^N D_i \left[ n \right] \left[ \sum_{j \in C \left[ i \right]}^{} F_{ji} \left[ n -1 \right] + Fext_i \left[ n^{-1} \right] \right]$ (通称 &amp;ldquo;Formula&amp;rdquo;) の楽曲データにRichard J James自身の顔が埋め込まれているということもよく知られた話だと思います。(顔が出てくるのは5:30~)&lt;/p&gt;

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/M9xMuPWAZW8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;p&gt;上の動画を見ればどんな画像が出てくるかわかるのですが、それでは面白くないので、今回は、CDからリッピングしたWAVファイルからJuliaを使って埋め込まれた顔を抽出してみたいと思います。&lt;/p&gt;
&lt;p&gt;Juliaを含めてサウンドデータを扱ったことがあまりなかったので、今回はその練習も兼ねています。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Juliaの環境とインストールパッケージは下の通りです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;root@801256b1df16:/temp_julia# julia --project
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _       _ _&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;_     |  Documentation: https://docs.julialang.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _ _   _| |_  __ _   |  Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Pkg help.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | | | | | |/ _&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; |  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | |_| | | | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_| |  |  Version 1.4.2 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2020-05-23&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; _/ |&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_|_|_|\__&amp;#39;&lt;/span&gt;_|  |  Official https://julialang.org/ release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|__/                   |
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;Hanauta&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; pkg&amp;gt; st
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Project Hanauta v0.1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;/temp_julia/Project.toml&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;7a1cc6ca&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; FFTW v1.2.2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;82e4d734&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ImageIO v0.2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;6218d12a&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; ImageMagick v1.1.5
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;442fdcdd&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Measures v0.3.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;91a5bcdd&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Plots v1.4.4
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;8149f6b0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; WAV v1.0.3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;楽曲データは、所有しているCDをWAV形式でリッピングしたものを使います。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_windowlicker_wav.png&#34; alt=&#34;インポートした楽曲&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;wavファイルの読み込み&#34;&gt;WAVファイルの読み込み&lt;/h2&gt;
&lt;p&gt;まずはデータを読み込んでみます。WAV形式のファイルフォーマットは &lt;a href=&#34;https://github.com/dancasimiro/WAV.jl&#34;&gt;WAV.jl&lt;/a&gt; で読み書きできます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; WAV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# load wav &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y, Fs, nbits, opt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wavread(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wav/02 ΔMi-1=-a ΣDi[n][ΣF ij[n-1]+Fexti[n-1]].wav&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;返り値は4つあり、最初のものはサンプリングデータです。2次元目のサイズが2なのはチャンネル数が二つあることに対応しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;15302700&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.15555e-5&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1037e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;           &lt;span style=&#34;color:#ae81ff&#34;&gt;0.000183111&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.000152593&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.15555e-5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00021363&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1037e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;9.15555e-5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;9.15555e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;            
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1037e-5&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;6.1037e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1037e-5&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.1037e-5&lt;/span&gt;     &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.000122074&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;9.15555e-5&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.000152593&lt;/span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.05185e-5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2つ目はサンプリング周波数です。1秒あたりの標本化数を表しており、
サンプリングデータの長さをサンプリング周波数で割ると曲の長さ(6分47秒)になっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Fs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;44100.0f0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; size(y)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;÷&lt;/span&gt; Fs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;347.0f0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;3つ目はサンプリングビット数を表しており、16ビットで量子化されていることがわかります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; nbits
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0x0010&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;(nbits)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;4つ目には &lt;code&gt;WAVChank&lt;/code&gt; というデータが入っているようなのですが、使い方はよくわかりませんでした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; opt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;WAVChunk&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; WAVChunk(&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fmt &amp;#34;&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;UInt8&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x01&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x44&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xac&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0xb1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x02&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x04&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x10&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0x00&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;音楽CDの規格である&lt;a href=&#34;https://en.wikipedia.org/wiki/Compact_Disc_Digital_Audio&#34;&gt;CD-DA&lt;/a&gt;
では16ビット、44.1KHzでサンプリングされた2チャンネルのデータがCDには記録されていることになっているので、
先ほどリッピングしたWAVファイルのデータを読み込んだ時の情報と一致していますね。&lt;/p&gt;
&lt;h2 id=&#34;データの可視化&#34;&gt;データの可視化&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;http://docs.juliaplots.org/latest/&#34;&gt;Plots.jl&lt;/a&gt;を使って各チャンネルを可視化します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# channel 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(y[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ch1&amp;#34;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ch1.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# channel 2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(y[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ch2&amp;#34;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;ch2.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_ch1.png&#34; alt=&#34;Channel1&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_ch2.png&#34; alt=&#34;Channel2&#34;&gt;&lt;/p&gt;
&lt;p&gt;見ただけだと左右のチャンネルのズレはよくわからないですね。&lt;/p&gt;
&lt;h2 id=&#34;縦波と横波&#34;&gt;縦波と横波&lt;/h2&gt;
&lt;p&gt;そもそもこの波形が何を表しているか分からなくなってしまったのですが、色々調べて
音は空気の密度の変化が振動して伝わっていくことによる縦波で、
縦波は可視化するのが難しいので、基準点からの媒質のずれを用いて横波に変換して表しているということを思い出しました。小学校か中学校で習いましたね。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;π&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;π
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs, sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(xs), lw&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y = sinx(x)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot!(xs &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(xs), lw&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, seriestype&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;vline&amp;#34;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_sinwave.png&#34; alt=&#34;Sin wave&#34;&gt;&lt;/p&gt;
&lt;p&gt;サイン波の場合、縦波 (オレンジ) と横波 (青) の関係を表すと上のようになり、
横波で値が0になっている点が縦波(疎密波)の疎と密になっている部分に対応しています。&lt;/p&gt;
&lt;h2 id=&#34;離散フーリエ変換&#34;&gt;離散フーリエ変換&lt;/h2&gt;
&lt;p&gt;離散フーリエ変換は標本点$\{ x = 0, \ldots, N-1 \}$に対し、関数$f(x)$を
$$
\begin{aligned}
F(t) = \sum_{x=0}^{N-1} f(x) \exp \left(-i \frac{2\pi t x}{N} \right)
\end{aligned}
$$
に写す変換です。&lt;/p&gt;
&lt;p&gt;まず&lt;a href=&#34;https://github.com/JuliaMath/FFTW.jl&#34;&gt;FFTW.jl&lt;/a&gt;を利用して
$f(x) = \sin(50 \cdot 2\pi \cdot x) + 0.5 \sin(80 \cdot 2\pi \cdot x)$
の離散フーリエ変換を求めてみます。&lt;a href=&#34;https://docs.scipy.org/doc/scipy/reference/tutorial/fft.html&#34;&gt;scipy.fftのFourier Transformsのチュートリアル&lt;/a&gt;を参考にしています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Fourier transform&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://docs.scipy.org/doc/scipy/reference/tutorial/fft.html&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; FFTW
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n_sample &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;spacing &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;800.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, n_sample &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; spacing, length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n_sample)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt; sin(&lt;span style=&#34;color:#ae81ff&#34;&gt;50.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;π &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; xs) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; sin(&lt;span style=&#34;color:#ae81ff&#34;&gt;80.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;π &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs, ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;twosines.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# fft&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fft(ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; spacing, length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n_sample)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xf, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; n_sample &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; abs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(yf), title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;fft&amp;#34;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;twosines_fft.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# rfft&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rfft(ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; spacing), length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(n_sample &lt;span style=&#34;color:#f92672&#34;&gt;÷&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xf, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; n_sample &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; abs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(yf[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]), title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rfft&amp;#34;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;twosines_rfft.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_twosines.png&#34; alt=&#34;Two sines&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_twosines_fft.png&#34; alt=&#34;FFT&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_twosines_rfft.png&#34; alt=&#34;RFFT&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;fft&lt;/code&gt;と&lt;code&gt;rfft&lt;/code&gt;の違いですが、実数関数の高速フーリエ変換を行う場合は、得られる結果は複素共役になっているので
&lt;code&gt;fft&lt;/code&gt;の最初の$N/2+1$個の要素だけ取り出したのが&lt;code&gt;rfft&lt;/code&gt;です。今後は&lt;code&gt;rfft&lt;/code&gt;を使っていきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; fft(ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1025&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Complex&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.021546067690054016&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.009144822218747824&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.019494434496893802&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.011255889003925152&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0037747442427530035&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00021303373272217927&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.540910469289888e-6&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.008011104229857957&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.004944446609708943&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0027504905105466913&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.008521501761826233&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.006452083992530002&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.002329259327304883&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0012487142795432917&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00400665047994312&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0018973158062596494&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0015495945378345682&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.001248714279543291&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0040066504799431205&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.006452083992530002&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0023292593273048835&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0027504905105466965&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.008521501761826231&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.008011104229857955&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0049444466097089395&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00021303373272217938&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.540910469289725e-6&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.011255889003925153&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0037747442427530026&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.009144822218747822&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.019494434496893802&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; rfft(ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;513&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Complex&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.021546067690054016&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.009144822218747822&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.019494434496893802&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.011255889003925152&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0037747442427530004&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00021303373272217986&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.54091046929146e-6&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0.008011104229857957&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.004944446609708941&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.002750490510546692&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.008521501761826231&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;0.006452083992530001&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0023292593273048826&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0012487142795432919&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00400665047994312&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                         &lt;span style=&#34;color:#f92672&#34;&gt;⋮&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0005688670923895223&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.001286209219029025&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.00010711318682722653&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00023560706166791262&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3.781279114026053e-5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00021509339265025993&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00045924223521861597&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0002559596431659331&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;3.076053805043007e-5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0003691736809030828&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0004897414415673067&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00019917744535980088&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00020016708413113154&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.00021927127231187687&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;5.662713730124005e-5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.958061643819614e-5&lt;/span&gt;im
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;ハン関数&#34;&gt;ハン関数&lt;/h2&gt;
&lt;p&gt;スペクトログラムを作成する際には、短時間フーリエ変換を行います。
楽曲の周波数の分析をする時には、楽曲データをオーバーラップさせながら一定の区間で区切り、取り出した区間をフーリエ変換します。&lt;/p&gt;
&lt;p&gt;この際、区切った区間の値が周期的に繰り返されると仮定してフーリエ変換を行うのですが、勝手に選んだwindowの境界で繋がることは期待できないので、周囲で滑らかに0になるような関数をかけて境界で滑らかに繋がるようにします。&lt;/p&gt;
&lt;p&gt;今回はハン関数(&lt;a href=&#34;https://en.wikipedia.org/wiki/Hann_function&#34;&gt;Hann function&lt;/a&gt;)を使うことにします。
サンプル数が $N + 1$ のとき、ハン関数は
$$
\begin{aligned}
w[n] = \frac{1}{2}\left[1 - \cos \left(\frac{2\pi n}{N}\right) \right]
\end{aligned}
$$
で与えられます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Statistics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Hann function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; hann(n_window)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_window
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs_hann &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; cos(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;π &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ns &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; n_window))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs_hann
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, hann(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;), title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Hann function (N=64)&amp;#34;&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;hann_function.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_hann_function.png&#34; alt=&#34;Hann function&#34;&gt;&lt;/p&gt;
&lt;p&gt;切り出したサンプルに対して適用してみるとこんな感じです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;window_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1024&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;window_size&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;signal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(y, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; signal[xs]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys_hann &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hann(window_size) &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs, ys, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Original&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot!(xs, ys_hann, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Filtered&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;filtered.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_filtered.png&#34; alt=&#34;ハン関数を適用&#34;&gt;&lt;/p&gt;
&lt;p&gt;適用する前と後で得られるスペクトラムを比較すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(window_size &lt;span style=&#34;color:#f92672&#34;&gt;÷&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rfft(ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yf_hann &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rfft(ys_hann)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xf, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; window_size &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; abs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(yf), label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Original&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot!(xf, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; window_size &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; abs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(yf_hann), label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Filtered&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;rfft_hann.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_rfft_hann.png&#34; alt=&#34;Spectrogramの比較&#34;&gt;&lt;/p&gt;
&lt;p&gt;ハン関数を適用した方が全体的にノイズが低減されているように見えます。&lt;/p&gt;
&lt;h2 id=&#34;いよいよスペクトログラムを描く&#34;&gt;いよいよスペクトログラムを描く&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# spectrogram&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Measures
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; spectrogram(window_size, signal)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    overlap &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; window_size &lt;span style=&#34;color:#f92672&#34;&gt;÷&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hann_window &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hann(window_size)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; idx &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(window_size &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; overlap)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(signal)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; idx &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; window_size &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(signal)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        rfft_result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rfft(hann_window &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; signal[idx&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;idx &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; window_size])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        rfft_log &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; abs&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(rfft_result) &lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        push!(data, rfft_log)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    hcat(data&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spectrogram(window_size, signal)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; log&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(data[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap(heatmap_data, margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;mm)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spectrogram_formula.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_formula.png&#34; alt=&#34;Formulaのスペクトログラム&#34;&gt;&lt;/p&gt;
&lt;p&gt;うーん、なんか見た目が微妙ですね。y軸を対数軸にすると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap(heatmap_data, margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;mm, yaxis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:log&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;spectrogram_formula_log.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_formula_log.png&#34; alt=&#34;Formulaのスペクトログラム(log)&#34;&gt;&lt;/p&gt;
&lt;p&gt;となりようやく「顔」に対面できました。&lt;/p&gt;
&lt;p&gt;ついでに1曲目のWindowlickerに隠されている螺旋模様も見ましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# windowlicker&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y, Fs, nbits, opt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wavread(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;wav/01 Windowlicker.wav&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;signal &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(y, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; spectrogram(window_size, signal)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; log&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(data[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;900&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap(heatmap_data, margin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;mm, yaxis&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:log&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;savefig(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;windowlicker_log.png&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/spectrogram_windowlicker_log.png&#34; alt=&#34;Spiral of Windowlicker&#34;&gt;&lt;/p&gt;
&lt;p&gt;今回は以上です。&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://wakariyasui.sakura.ne.jp/p/wave/hadou/yokotate.html&#34;&gt;横波と縦波&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E9%9B%A2%E6%95%A3%E3%83%95%E3%83%BC%E3%83%AA%E3%82%A8%E5%A4%89%E6%8F%9B&#34;&gt;離散フーリエ変換&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.logical-arts.jp/archives/124&#34;&gt;窓関数を用いる理由&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://pman0214.github.io/blog/fft-rfft.html&#34;&gt;np.fft.fftとnp.fft.rfft&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://towardsdatascience.com/understanding-audio-data-fourier-transform-fft-spectrogram-and-speech-recognition-a4072d228520&#34;&gt;Understanding Audio data, Fourier Transform, FFT and Spectrogram features for a Speech Recognition System&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://fairyonice.github.io/implement-the-spectrogram-from-scratch-in-python.html&#34;&gt;Implement the Spectrogram from scratch in python&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://pnsn.org/spectrograms/what-is-a-spectrogram&#34;&gt;What is a Spectrogram?&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/namaozi/items/dec1575cd455c746f597&#34;&gt;numpyでスペクトログラムによる音楽信号の可視化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.bastwood.com/?page_id=10&#34;&gt;The Aphex Face&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2020/6/26)</title>
      <link>https://matsueushi.github.io/playlist/20200626/</link>
      <pubDate>Fri, 26 Jun 2020 22:14:55 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20200626/</guid>
      <description>&lt;p&gt;Planet 1999 - Party (Official Video)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/LoGOBSQ9ZLg&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Sparkling Tropicana.mp3 (TOBYNOH - Tropicana Sparkling [Seasquid rework]

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/cQSywfTo57A&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;惑星アブノーマル PV「月夜海水浴」

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/AhaZVsM7WTs&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Lucie,Too - Lucky (Official Music Video)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/gHsUaS9r5R8&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;YOASOBI &amp;ldquo;Racing into the Night&amp;rdquo; Official Music Video

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/x8VYWazR5mE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;George Clanton &amp;amp; Nick Hexum - Aurora Summer [Official Audio]

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/aBnP3NmGXDw&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Easycome / 夢中にならないで&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/237804694&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/user-46795060&#34; title=&#34;Easycome&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Easycome&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/user-46795060/eybl3go8vt39&#34; title=&#34;夢中にならないで&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;夢中にならないで&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;user310895502 / [2015 M3 - 秋] カシワープ[たのちい人生 シ-07a]&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/229244505&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/user310895502&#34; title=&#34;user310895502&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;user310895502&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/user310895502/kashiwa&#34; title=&#34;[2015 M3 - 秋] カシワープ[たのちい人生 シ-07a]&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;[2015 M3 - 秋] カシワープ[たのちい人生 シ-07a]&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;INTERNET ORDER / 自動ＡＵＴＯＭＡＴＩＣ&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/719236243&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/intrnt_odr&#34; title=&#34;INTERNET ORDER&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;INTERNET ORDER&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/intrnt_odr/automatic&#34; title=&#34;自動ＡＵＴＯＭＡＴＩＣ&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;自動ＡＵＴＯＭＡＴＩＣ&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;sundaytube02 / 今夜はフェアリーテール(山瀬まみ)cover&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/327264306&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/sundaytube02&#34; title=&#34;sundaytube02&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;sundaytube02&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/sundaytube02/konyahafairytale&#34; title=&#34;今夜はフェアリーテール(山瀬まみ)cover&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;今夜はフェアリーテール(山瀬まみ)cover&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;バナナムール Bananamour — Matagiki Travel&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/236056197&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/bananamour&#34; title=&#34;バナナムール Bananamour&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;バナナムール Bananamour&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/bananamour/matagiki-travel&#34; title=&#34;Matagiki Travel&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Matagiki Travel&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;VideoGirl / DC Shoes&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/1q8nVWVocSYmUbOHFMU2LY&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;nyankobrq / twinkle night&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/4IvLKBmxRAKD99KFyDyqSg&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;デュア・リパ / Good In Bed&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/track/6uAFJ75WDAoAPyCWJAtvks&#34; width=&#34;300&#34; height=&#34;380&#34; frameborder=&#34;0&#34; allowtransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;</description>
    </item>
    
    <item>
      <title>サイトのデザインを変えました</title>
      <link>https://matsueushi.github.io/posts/tokiwa/</link>
      <pubDate>Fri, 26 Jun 2020 00:24:50 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/tokiwa/</guid>
      <description>&lt;p&gt;パソコンを新調して、再度ウェブサイトを更新しようと思ったらhugoのテーマと新しいバージョンのhugoの相性が悪いのか、更新がうまくいかなくなってしまったのでテーマを変更しました。&lt;/p&gt;
&lt;p&gt;また更新を再開したいです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>最近聞いた曲(2020/4/4)</title>
      <link>https://matsueushi.github.io/playlist/20200404/</link>
      <pubDate>Sat, 04 Apr 2020 10:00:29 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/playlist/20200404/</guid>
      <description>&lt;p&gt;メモ用です。&lt;/p&gt;
&lt;h3 id=&#34;2020414&#34;&gt;2020/4/14&lt;/h3&gt;
&lt;p&gt;おぴょうさ - つちのこ饅頭のうた

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/nGnGOeDE4vY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;ariom verma - जीने का सही ढंग

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/ChEfHsTBhw4&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;metro trip - CANDY LOVE

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/IuJ43M8sK3k&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;h3 id=&#34;202046&#34;&gt;2020/4/6&lt;/h3&gt;
&lt;p&gt;tamao ninomiya - lonely waves

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/LdGcxRTfWcQ&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;a href=&#34;https://tamaoninomiya.bandcamp.com/album/--5&#34;&gt;https://tamaoninomiya.bandcamp.com/album/--5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;202044&#34;&gt;2020/4/4&lt;/h3&gt;
&lt;p&gt;Toytown - Not My Chuckadoo

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/KwOqDAsDzoY&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;

&lt;a href=&#34;https://www.facebook.com/toytowntunes/&#34;&gt;https://www.facebook.com/toytowntunes/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mimippiii - 地雷ちゃん

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/7I6yffvOb1E&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Conditioning Drive - ///　Ｒｅｂｏｏｔ (WINDOWSWAVE)

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/gmVskDaKAjE&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;ㄩㄥㄒ尺卂 山卂ᐯ乇 - ｄ　ａ　　ｔ　ｉ　ｎ　ｇ　　ｇ　ｏ

&lt;div style=&#34;position: relative; padding-bottom: 56.25%; height: 0; overflow: hidden;&#34;&gt;
  &lt;iframe src=&#34;https://www.youtube.com/embed/UiZB1x0swog&#34; style=&#34;position: absolute; top: 0; left: 0; width: 100%; height: 100%; border:0;&#34; allowfullscreen title=&#34;YouTube Video&#34;&gt;&lt;/iframe&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;p&gt;Dynamic Frequency - Daydream (波のスタイルwavestyle96 Remix)&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/738924478&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;</description>
    </item>
    
    <item>
      <title>デフォルトの丸めモードで上付き丸め、下付き丸めをエミュレートする(Julia)</title>
      <link>https://matsueushi.github.io/posts/rounding-emulator/</link>
      <pubDate>Sat, 28 Mar 2020 18:00:00 -0500</pubDate>
      
      <guid>https://matsueushi.github.io/posts/rounding-emulator/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../julia-rounding&#34;&gt;Juliaで丸めモードを指定して浮動小数点数の計算をする(したい)&lt;/a&gt; で色々とJuliaの丸めモードについて調べていましたが、今回はその続きです。&lt;/p&gt;
&lt;p&gt;やはりどうしてもJuliaの &lt;code&gt;Float32&lt;/code&gt; や &lt;code&gt;Float64&lt;/code&gt; に対して上付き丸め、下付き丸めを可能な限り正確に安定して行いたくなったので、
「最近点丸めによる方向付き丸めのエミュレート」を参考に、デフォルトの丸めモードのみを使って上付き丸め、下付き丸めをエミュレートするJuliaのパッケージを作成しました。&lt;/p&gt;
&lt;h2 id=&#34;roundingemulatorjl&#34;&gt;RoundingEmulator.jl&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/RoundingEmulator.jl&#34;&gt;https://github.com/matsueushi/RoundingEmulator.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Registratorにも登録したので、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;] add RoundingEmulator
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;でインストールして使えます。&lt;/p&gt;
&lt;p&gt;定義されているのは &lt;code&gt;add&lt;/code&gt;, &lt;code&gt;sub&lt;/code&gt;, &lt;code&gt;mul&lt;/code&gt;, &lt;code&gt;div&lt;/code&gt;, &lt;code&gt;sqrt&lt;/code&gt; に対して上付き丸め &lt;code&gt;_up&lt;/code&gt; と下付き丸め &lt;code&gt;_down&lt;/code&gt; と2つと非常なシンプルなものです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; RoundingEmulator
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sub_up(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sub_down(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mul_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.020000000000000004&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mul_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.02&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; div_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.33333333333333337&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; div_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.33333333333333337&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sqrt_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4142135623730951&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sqrt_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.414213562373095&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://github.com/JeffreySarnoff/FastRounding.jl/blob/03ff386d36aa7de101f22ca740748a31e57942c0/src/FastRounding.jl#L187-L194&#34;&gt;https://github.com/JeffreySarnoff/FastRounding.jl/blob/03ff386d36aa7de101f22ca740748a31e57942c0/src/FastRounding.jl#L187-L194&lt;/a&gt; の例も正しく計算できていました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sqrt_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;3.9036066558023176e-154&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.9757547053726885e-77&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; sqrt_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;3.9036066558023176e-154&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.975754705372688e-77&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;詳細はレポジトリや &lt;a href=&#34;https://matsueushi.github.io/RoundingEmulator.jl/dev/&#34;&gt;ドキュメンテーション&lt;/a&gt; を参照して下さい。
Issueやプルリクは大歓迎です。&lt;/p&gt;
&lt;p&gt;基本的には&lt;a href=&#34;http://verifiedby.me/kv/rounding/emu.pdf&#34;&gt;「最近点丸めのみによる方向付き丸めのエミュレート」&lt;/a&gt;に沿った実装なので、
エミュレートのロジックについてはそちらを参照してください。&lt;/p&gt;
&lt;p&gt;これで、上付き丸めや下付き丸めができるようになったので、当初やろうと思っていた区間演算にもチャレンジしてみたいです。&lt;/p&gt;
&lt;p&gt;以下は作成していて気づいた点です。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;add12-mul12&#34;&gt;&lt;code&gt;add12&lt;/code&gt;, &lt;code&gt;mul12&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;エクスポートされていない関数ですが、Julia の &lt;a href=&#34;https://github.com/JuliaLang/julia/blob/master/base/twiceprecision.jl&#34;&gt;base/twiceprecision.jl&lt;/a&gt; には
加算、乗算のエラーフリー変換の関数 &lt;code&gt;add12&lt;/code&gt; と &lt;code&gt;mul12&lt;/code&gt; が定義されています。
前回言及したオーバーフロー対策もなされていました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; add12, mul12
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5630624444874539e+307&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.563062444487454e307&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.7976931348623157e+308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.7976931348623157e308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add12(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9.9792015476736e291&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add12(b, a)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9.9792015476736e291&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6.929001713869936e+236&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6.929001713869936e236&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.5944475251952003e+71&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.5944475251952003e71&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mul12(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.7976931348623157e308&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0027614963959625e291&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mul12(b, a)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.7976931348623157e308&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0027614963959625e291&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;setrounding_raw&#34;&gt;&lt;code&gt;setrounding_raw&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;deprecatedになった &lt;code&gt;setrounding&lt;/code&gt; は、強引に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Rounding&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; setrounding_raw, to_fenv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; setrounding_raw(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;, to_fenv(RoundDown))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; setrounding_raw(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;, to_fenv(RoundUp))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; setrounding_raw(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;, to_fenv(RoundNearest))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と呼び出せば使えて、確実に動くことが保証されていないですが、テストを行うにあたっては、Windows, MacOS, LinuxのCIで
自分で計算した値と、&lt;code&gt;setrounding_raw&lt;/code&gt; で丸めモードを変更した時の値が等しくなることを特殊な値
(&lt;code&gt;zero(T)&lt;/code&gt;, &lt;code&gt;floatmax(T)&lt;/code&gt;, &lt;code&gt;flaotmin(T)&lt;/code&gt; など)とランダムにサンプリングした値に対して確かめる、
という方法を現在は取っています。&lt;/p&gt;
&lt;p&gt;確実に正しいことがわかっている入力と出力のペアからテストを作成するのが一番良いと思うのですが、今回はそこまでやっていません。&lt;/p&gt;
&lt;h2 id=&#34;signed-zero&#34;&gt;Signed zero&lt;/h2&gt;
&lt;p&gt;符号付きゼロもの符号も含めて正確に再現する場合、下付き丸めによる加算の定義で注意する必要があります。
上付き丸めによる加算は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; add_up(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add12(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinf(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ifelse(x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; typemin(x) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isfinite(a) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isfinite(b), &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;floatmax(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; zero(y) &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; nextfloat(x) &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と定義できますが、下付きの丸めに関しては、0どうしの計算を行った際に符号を変える必要があります。
これは和の合計が0になる計算 (exact zero sum) の挙動が下付き丸めとそれ以外で異なるためです。
IEEE 754の6.3章に下付き丸め(roundTowardNegative)の時のみ、exact zero sumは-0になると書いてあります。
ただ、\(x + x\) の符号は \(x\) の符号と同じになると定められているので、表にすると、&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;Rounding&lt;/th&gt;
&lt;th&gt;\((+0)+(+0)\)&lt;/th&gt;
&lt;th&gt;\((-0)+(+0)\)&lt;/th&gt;
&lt;th&gt;\((+0)+(-0)\)&lt;/th&gt;
&lt;th&gt;\((-0)+(-0)\)&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;roundTiesToEven (&lt;code&gt;RoundNearest&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(-0\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;roundTowardPositive (&lt;code&gt;RoundUp&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(-0\)&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;roundTowardNegative (&lt;code&gt;RoundDown&lt;/code&gt;)&lt;/td&gt;
&lt;td&gt;\(+0\)&lt;/td&gt;
&lt;td&gt;\(-0\)&lt;/td&gt;
&lt;td&gt;\(-0\)&lt;/td&gt;
&lt;td&gt;\(-0\)&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;このようになります。よって、下のように修正することでゼロの符号を調整しています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; add_down(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; add12(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; isinf(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ifelse(x &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; typemax(x) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isfinite(a) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; isfinite(b), floatmax(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;elseif&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; zero(y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prevfloat(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ifelse(iszero(x) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; (signbit(a) &lt;span style=&#34;color:#f92672&#34;&gt;||&lt;/span&gt; signbit(b)), &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;zero(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;計算結果:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_up(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_down(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_up(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_down(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;浮動小数点数をランダムにサンプリングする&#34;&gt;浮動小数点数をランダムにサンプリングする&lt;/h2&gt;
&lt;p&gt;全ての浮動小数点数から一様にサンプリングしたい時、&lt;code&gt;rand&lt;/code&gt; を普通に呼び出すと \([0, 1)\) から一様にサンプリングされます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/stdlib/Random/index.html#Random-Numbers-1&#34;&gt;https://docs.julialang.org/en/v1/stdlib/Random/index.html#Random-Numbers-1&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; rand(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6021596191997549&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8268352152178551&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.22765811638234856&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3813150107932535&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.49112818878735265&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.6424070543287013&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.27970019663531676&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.7316980433063847&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5721143543965341&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.24735574564535145&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;Int64&lt;/code&gt; 用の &lt;code&gt;rand&lt;/code&gt; を使って乱数を発生させ、&lt;code&gt;reinterpret&lt;/code&gt; で &lt;code&gt;Float64&lt;/code&gt; に変換すれば良いです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;7738226609100433883&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bitstring(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0110101101100011101101000001101000100010111010000010100111011011&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reinterpret(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;, x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0242815034259582e209&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bitstring(y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0110101101100011101101000001101000100010111010000010100111011011&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;細かいことを言うと &lt;code&gt;NaN&lt;/code&gt;, &lt;code&gt;Inf&lt;/code&gt; なども含まれてしまいますが、今回は特別扱いはせずそのまま使っています。&lt;/p&gt;
&lt;h2 id=&#34;-vs-isequal&#34;&gt;&lt;code&gt;==&lt;/code&gt; vs &lt;code&gt;isequal&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;Julia で&lt;a href=&#34;https://docs.julialang.org/en/v1/stdlib/Test/index.html&#34;&gt;ユニットテスト&lt;/a&gt;を書くとき、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@test&lt;/span&gt; f(x) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のように書くことが多いのですが、浮動小数点数のテストの際、&lt;code&gt;NaN&lt;/code&gt; や符号付きゼロなどをテストしたい場合は注意が必要です。まず、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; NaN &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; NaN
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;です。また、IEEE 754で定められている符号付きゼロ &lt;code&gt;-0.0&lt;/code&gt; と &lt;code&gt;0.0&lt;/code&gt; は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bitstring(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0000000000000000000000000000000000000000000000000000000000000000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bitstring(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;1000000000000000000000000000000000000000000000000000000000000000&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と異なるビット列が対応していますが、&lt;code&gt;==&lt;/code&gt; では&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となるのでこの二つの違いは判別できません。
そのため、&lt;code&gt;setrounding&lt;/code&gt; をエミュレートできているかをテストする際には、&lt;code&gt;isequal&lt;/code&gt; を使いました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; isequal(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; isequal(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; isequal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; isequal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; isequal(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; isequal(NaN, NaN)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;set_zero_subnormals&#34;&gt;&lt;code&gt;set_zero_subnormals&lt;/code&gt;&lt;/h2&gt;
&lt;p&gt;なかなか変更することは少ないとは思われますが、Juliaには非正規化数が0に変換されることを許容することで計算を高速化する(かもしれない)設定が存在します。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Base.Rounding.set_zero_subnormals&#34;&gt;Base.Rounding.set_zero_subnormals&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Base.Rounding.get_zero_subnormals&#34;&gt;Base.Rounding.get_zero_subnormals&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;上付き丸め、下付き丸めが必要となっている今回のような状況では当然オフになっている必要があります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaで丸めモードを指定して浮動小数点数の計算をする(したい)</title>
      <link>https://matsueushi.github.io/posts/julia-rounding/</link>
      <pubDate>Sat, 07 Mar 2020 20:17:26 -0500</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-rounding/</guid>
      <description>&lt;p&gt;2020/4/14追記 丸めモードについては、&lt;a href=&#34;../rounding-emulator/&#34;&gt;デフォルトの丸めモードで上付き丸め、下付き丸めをエミュレートする(Julia)&lt;/a&gt; も参照してください。
IntervalArithmeitc.jl のデフォルト丸めモードは、&lt;a href=&#34;https://github.com/JuliaIntervals/IntervalArithmetic.jl/pull/370&#34;&gt;#370&lt;/a&gt; で
FastRounding.jl を利用しなくなった (v0.17.0以降) ので、
IntervalArithmeitc.jl に関して以下に書いてある情報は古いです。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最近、 数値計算を
&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%8C%BA%E9%96%93%E6%BC%94%E7%AE%97&#34;&gt;区間演算&lt;/a&gt; を使って誤差の評価を伴って実施する
&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E7%B2%BE%E5%BA%A6%E4%BF%9D%E8%A8%BC%E4%BB%98%E3%81%8D%E6%95%B0%E5%80%A4%E8%A8%88%E7%AE%97&#34;&gt;精度保証付き数値計算&lt;/a&gt; に興味が出てきて、
&lt;a href=&#34;https://press.princeton.edu/books/hardcover/9780691147819/validated-numerics&#34;&gt;Warwich Tucker の Validated Numeric&lt;/a&gt; という本を購入し、少しつづ読んでいます。&lt;/p&gt;
&lt;p&gt;浮動小数点数のシステムなど初歩的なことから説明されていて私にとっては非常にありがたく、異常な計算例も多く載せられていて楽しく読めています。
実際に手を動かして理解するために、本文内の MATLAB で書かれた区間演算のプログラムを Julia で実装しようとしていますが、
丸めモードを指定した計算を行うところでつまづいてしまいました。&lt;/p&gt;
&lt;p&gt;今回は、頭の整理を兼ね、具体的な例からスタートし、なぜ丸めモードを指定した計算が必要となるか説明するとともに、
Julia における丸めの制御について調べた内容を書いておきたいと思います。
私はこの分野の専門家ではないので、間違っている場所があれば教えていただけると助かります。&lt;/p&gt;
&lt;p&gt;使用している Julia のバージョンは 1.3.0 です。将来的に丸めの扱いが変更される可能性があるので注意してください。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _       _ _&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;_     |  Documentation: https://docs.julialang.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _ _   _| |_  __ _   |  Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Pkg help.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | | | | | |/ _&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; |  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | |_| | | | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_| |  |  Version 1.3.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2019-11-26&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; _/ |&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_|_|_|\__&amp;#39;&lt;/span&gt;_|  |  Official https://julialang.org/ release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|__/                   |
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;01--30-を計算してみる&#34;&gt;0.1 * 3.0 を計算してみる&lt;/h3&gt;
&lt;p&gt;\( \mathbb{F}^* \) を浮動小数点全体の集合 (今回は&lt;code&gt;Float64&lt;/code&gt; としておきます)、
\( \mathbb{F} \) を\( \mathbb{F}^* \)から &lt;code&gt;-Inf&lt;/code&gt;, &lt;code&gt;+Inf&lt;/code&gt; を除いた有限な浮動小数点全体の集合、
\( \mathbb{R} \) を実数全体の集合、\( \mathbb{R}^* \) を \( \mathbb{R} \) に正と負の無限大を付け加えた集合とします
(無限大が関係してくる細かい説明は今回は省略します)。
\( \mathbb{F} \) は \( \mathbb{R} \)、
\( \mathbb{F}^* \) は \( \mathbb{R}^* \) の有限部分集合です。&lt;/p&gt;
&lt;p&gt;例として、 \(0.1 \in \mathbb{R} \) と \(3.0 \in \mathbb{R}\)  の積を (浮動小数点上で) 評価したいとします。
言うまでもなく真の値は \( 0.3 \in \mathbb{R} \) です。
一方、REPL 上で &lt;code&gt;0.1 * 3.0&lt;/code&gt; と &lt;code&gt;0.3&lt;/code&gt; を比較すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;false
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となりイコールにはなりません。&lt;code&gt;@printf&lt;/code&gt; マクロを使って小数点以下17桁まで表示すると、確かに違います。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Printf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.29999999999999999&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Base.bitstring&#34;&gt;Base.bitstring&lt;/a&gt; を使ってビット表現を確かめても、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bitstring(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0011111111010011001100110011001100110011001100110011001100110100&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; bitstring(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;0011111111010011001100110011001100110011001100110011001100110011&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後の3桁が違いますね。なぜこのようなことが起こるのでしょうか？&lt;/p&gt;
&lt;h3 id=&#34;丸め&#34;&gt;丸め&lt;/h3&gt;
&lt;p&gt;証明は省略しますが、\( 1/3 \) が有限桁の10進数小数で表現できないのと同様、
\( 0.1 \) は有限桁の(2進)浮動小数点数では表せません。\( 0.3 \) も同様です。&lt;/p&gt;
&lt;p&gt;そのため、\( 0.1 \in \mathbb{R} \) はコンピューターで扱うために \( \mathbb{F} \) の元で近似されることになります。
この近似の方法を定めるのが丸め (Rounding) で、書き方は違いますが本の中で次のように定義されています。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定義&lt;/strong&gt; 「丸め」 とは、写像 \( \bigcirc : \mathbb{R}^* \rightarrow \mathbb{F}^* \) で、&lt;br&gt;
(R1) \( \bigcirc \) は \( \mathbb{F}^* \) 上では恒等写像。つまり、任意の \( x \in \mathbb{F}^* \) に対して \( \bigcirc (x) = x \)&lt;br&gt;
(R2) \( \bigcirc \) は大小関係を保存する。つまり、\( x, y \in \mathbb{R}^* \) が \( x \le y \) を満たすなら \( \bigcirc(x) \le \bigcirc(y) \) が成立する&lt;br&gt;
の二つの条件を満たすものである。&lt;/p&gt;
&lt;p&gt;一つ目の条件は \( \mathbb{F}^* \) でもともと表せる数に関しては余計な操作を行わないことを意味し、
二つ目の条件は近似した時に大小関係が入れかわらないことを保証するもので、どちらも非常に自然な要請です。&lt;/p&gt;
&lt;p&gt;丸めにはいくつか種類がありここでは全て紹介できませんが、いくつか基本的な丸めを挙げます。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\triangledown (x) = \max \{ y \in \mathbb{F}^* \mid y \le x \},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\triangle (x) = \min \{ y \in \mathbb{F}^* \mid y \ge x \}
\end{aligned}
$$
はそれぞれ下付き丸め (Rounded down), 上付き丸め (Rounded up) と呼ばれます。&lt;/p&gt;
&lt;p&gt;これらは勿論先ほどの丸めの定義を満たし、
$$
\begin{aligned}
\triangledown (x) \le x \le \triangle (x)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;が常に成立しています。これと条件 (R1), (R2) を組み合わせることにより、任意の丸め \( \bigcirc \) に対して
$$
\begin{aligned}
\triangledown (x) \le \bigcirc (x) \le \triangle (x)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;が成立することがわかります。また、\( x \in \mathbb{F}^* \) であれば、
\( \bigcirc (x) = x = \triangledown (x) = \triangle(x) \) ですし、
\( x \notin \mathbb{F}^* \) であれば、\( \triangledown(x) &amp;lt; x &amp;lt; \triangle (x) \) が成り立つとともに
\( \bigcirc (x) = \triangledown(x)\) または \( \bigcirc (x) = \triangle(x)\) となることも示せます。
つまり、丸めとは、浮動小数点数で表せないそれぞれの数に対して切り上げるか切り下げるかを条件 (R2) を守るように定めることと同じです。&lt;/p&gt;
&lt;p&gt;浮動小数点数で表現できない数に対する Julia の&lt;a href=&#34;https://docs.julialang.org/en/v1/manual/integers-and-floating-point-numbers/index.html#Rounding-modes-1&#34;&gt;デフォルト丸めモード&lt;/a&gt;は
&lt;a href=&#34;https://docs.julialang.org/en/v1/base/math/#Base.Rounding.RoundNearest&#34;&gt;RoundNearest&lt;/a&gt; で、
最も近い浮動小数に丸めると言うものです。
ちょうど中間になった時が気になりますが、切り上げた時と切り下げた時のうち、最後の桁が偶数 (つまり0) になるものを選びます。
そのためこの丸めモードはNearest Evenと呼ばれることもあります。
なぜ偶数に丸めるかについての説明は省略しますが本には載っているので気になる方は参照してください。&lt;/p&gt;
&lt;p&gt;今後、このデフォルトの丸めを \( \square \) で表すことにします。&lt;code&gt;0.1&lt;/code&gt;, &lt;code&gt;3.0&lt;/code&gt;, &lt;code&gt;0.3&lt;/code&gt; は、
実態はそれぞれ \( \square(0.1), \square(3.0) = 3.0, \square(0.3) \in \mathbb{F}^* \) だったということになります。&lt;/p&gt;
&lt;h3 id=&#34;浮動小数点数同士の演算&#34;&gt;浮動小数点数同士の演算&lt;/h3&gt;
&lt;p&gt;次に \( \mathbb{R}^* \) 上の二項演算 \( +, -, \times, /, \sqrt{} \) とそれに対応する
\( \mathbb{F}^* \) 上の二項演算 \( \oplus, \ominus, \otimes, \oslash, \odot \) の違いを考えます。
本当は四角の囲み文字を使いたかったのですが、ご勘弁ください。ルートの丸文字も出せませんでした。&lt;/p&gt;
&lt;p&gt;問題は \( +, -, \times, /, \sqrt{} \) を \( \mathbb{F}^* \) に制限しても結果が \( \mathbb{F}^* \) になるとは限らないと言うことです。
例えば、\( 2^{100}, 1 \in \mathbb{F}^* \) ですが、\( 2^{100} + 1 \notin \mathbb{F}^* \) です。
Julia には直前、直後の浮動小数点数を計算する関数 &lt;code&gt;prevfloat&lt;/code&gt;, &lt;code&gt;nextfloat&lt;/code&gt; が存在しますので
\( 2^{100} \)の次の数を計算してみましょう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1267650600228229401496703205376.00000000000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, nextfloat(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1267650600228229682971679916032.00000000000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;なので、\( 2^{100} + 1 \) は確かにこの二つの隙間に落ちてしまっているので表現不能です。計算すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; x
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となって元々の値と同じになっています。&lt;/p&gt;
&lt;p&gt;つまりは計算した結果も丸められているわけですが、ここで丸める前と丸めた後の関係が気になります。
Juliaの &lt;a href=&#34;https://docs.julialang.org/en/v1/manual/integers-and-floating-point-numbers/index.html#Rounding-modes-1&#34;&gt;Rounding modes&lt;/a&gt; を見ると丸めモードは
&lt;a href=&#34;https://ieeexplore.ieee.org/document/8766229&#34;&gt;IEEE754 standard&lt;/a&gt; に従っていると言うことなので、
規格を本来は参照すべきだと思いますが、ノンメンバーだとPDFを購入するのに$100かかるようなので、断念しました。&lt;/p&gt;
&lt;p&gt;書かれたのは1997年と古いようですが、IEEE 754の策定に携わったKahanのレクチャーノート &lt;a href=&#34;https://people.eecs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF&#34;&gt;Lecture Notes on the Status of IEEE Standard 754 for Binary Floating-Point Arithmetic&lt;/a&gt;
を読むと、四則演算や平方根丸め無しの場合に計算した結果を Nearest Even で丸めるという内容のことが書かれています。
別の本「精度保証付き数値計算の基礎」（これも勢いで購入）にも同様のことが書いてあった (p.p. 17) ので、信じることにします。&lt;/p&gt;
&lt;p&gt;よって、
$$
\begin{aligned}
x, y \in \mathbb{F}^*, * \in \{  +, -, \times, /, \sqrt{} \}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;の時に&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
x \circledast y = \square (x * y)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;ということになります。&lt;/p&gt;
&lt;p&gt;長々と書いてしまいましたが、&lt;code&gt;0.1 * 3.0&lt;/code&gt;
\( = \square(\square(0.1) \times \square(3.0)) \),
&lt;code&gt;0.3&lt;/code&gt; \( = \square(0.3) \) なので、&lt;code&gt;0.1 * 3.0&lt;/code&gt; と &lt;code&gt;0.3&lt;/code&gt; は近い値にはなるものの、\(\square(0.1) \times \square(3.0) \neq 0.3\) でそれぞれ別の数に丸められてしまうということでした。&lt;/p&gt;
&lt;h3 id=&#34;区間演算&#34;&gt;区間演算&lt;/h3&gt;
&lt;p&gt;次に、同様の計算を区間計算で (正確な定義はスキップして) 行ってみます。
まず、\( 0.1 \) を含む、端点が共に \( \mathbb{F} \) の元で幅がなるべく小さい区間を探します。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;0.1&lt;/code&gt; と書いた時点で浮動小数点数に変換されてしまうので、別の方法で \( 0.1 \) を表現する必要があります。
入力を文字列 &lt;code&gt;&amp;quot;0.1&amp;quot;&lt;/code&gt; にしてパースする方法もありますが、
幸いなことに&lt;a href=&#34;https://docs.julialang.org/en/v1/manual/complex-and-rational-numbers/#Rational-Numbers-1&#34;&gt;有理数型&lt;/a&gt;と&lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Core.Float64-Tuple%7BAny%7D&#34;&gt;丸め方向つきの浮動小数点数コンストラクタ&lt;/a&gt;が利用できます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x_down, x_up &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, RoundDown), &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, RoundUp);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;, x_down, x_up)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.09999999999999999&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.10000000000000001&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;\( 3.0 \) は浮動小数点数として誤差なく表現できるので、幅0 (thin) の区間として表わせます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, RoundDown) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;//&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, RoundUp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こうして \( 0.1 \) と \(3.0\) がそれぞれ含まれる区間 &lt;code&gt;[x_down, x_up]&lt;/code&gt;, &lt;code&gt;[3.0, 3.0]&lt;/code&gt;
が得られたので答えが取り得る範囲を考えて、真の数が含まれる区間の計算結果を &lt;code&gt;[x_down * 3.0, x_up * 3.0]&lt;/code&gt; ……とやると(一般的には)まずいです。&lt;/p&gt;
&lt;p&gt;今回はたまたま&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;]&amp;#34;&lt;/span&gt;, x_down &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;, x_up &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;0.29999999999999999&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となってうまくいきましたが、例えば、 \( 1.0 \in \mathbb{F}, 2^{-54} \in \mathbb{F} \) に対し、
\( 1.0 + 2^{-54} \) を意図して同様の区間演算
&lt;code&gt;[1.0, 1.0]&lt;/code&gt; + &lt;code&gt;[2^-54, 2^-54]&lt;/code&gt; を先ほどと同様に単純に行うと、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@printf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%17.17f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.00000000000000000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と \( 2^{-54} \) が \( 1 \) に対して小さすぎて桁落ちが発生し、
得られる区間は &lt;code&gt;[1.0, 1.0]&lt;/code&gt; となってしまい正しい答えである \( 1.0 + 2^{-54} \) は含まれません。&lt;/p&gt;
&lt;p&gt;つまり、今までに定義した記号を使って表すと、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
[x, y] + [x&amp;rsquo;, y&amp;rsquo;] = [x \oplus x&amp;rsquo;, y \oplus y&amp;rsquo;]
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と定義してしまってはダメで、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
[x, y] + [x&amp;rsquo;, y&amp;rsquo;] = [\triangledown (x + x&amp;rsquo;), \triangle (y + y&amp;rsquo;)]
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と計算して答えが確実に含まれるようにする必要があります。ここで必要となるのは、デフォルトの丸めモードとは異なる丸めモードを用いた加算です。&lt;/p&gt;
&lt;p&gt;非常に長くなってしまいましたが、この計算をやりたいがために丸めモードを変えたいわけです。&lt;/p&gt;
&lt;h3 id=&#34;julia-における方向丸め付き演算のサポート&#34;&gt;Julia における方向丸め付き演算のサポート&lt;/h3&gt;
&lt;p&gt;「さあ、いよいよ Julia で方向丸め付き演算をやっていくか、C++だと&lt;a href=&#34;http://verifiedby.me/kv/rounding/index.html&#34;&gt;丸めモードの変更は面倒な感じがする&lt;/a&gt; が、
Julia には &lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Base.Rounding.setrounding-Tuple%7BType,Any%7D&#34;&gt;Base.Rounding.setrounding&lt;/a&gt;
という関数が用意されていて楽すぎる。Julia最強！」&lt;/p&gt;
&lt;p&gt;……とはならないのが人生の辛い所です。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;setrounding&lt;/code&gt; の説明をよく読むと、&lt;code&gt;T == BigFloat&lt;/code&gt; しかサポートされていないと書かれています。
実は昔は &lt;code&gt;Float32&lt;/code&gt;, &lt;code&gt;Float64&lt;/code&gt; に対しても使えていたようなのですが、
色々と問題があり(最後のリンク参照)、 experimentalと言う但し書きがドキュメントに書かれるようになり、
最終的に&lt;a href=&#34;https://github.com/JuliaLang/julia/pull/27166&#34;&gt;廃止された&lt;/a&gt;ようです。&lt;/p&gt;
&lt;p&gt;そのためブログの記事や Twitter の投稿で「Juliaでは浮動小数点の方向丸め付き演算がサポートされている」と書かれているものは、おそらく、
&lt;code&gt;Float32&lt;/code&gt;, &lt;code&gt;Float64&lt;/code&gt; に対する &lt;code&gt;setrounding&lt;/code&gt; が使えるようになっていた時のものでしょう。&lt;/p&gt;
&lt;p&gt;サポートされていない理由については、どうもLLVMで浮動小数点の丸めの制御ができないため、と言うことらしいです(未確認)。&lt;/p&gt;
&lt;h3 id=&#34;julia-で利用できるパッケージ&#34;&gt;Julia で利用できるパッケージ&lt;/h3&gt;
&lt;p&gt;一方、Juliaには区間演算のライブラリ &lt;a href=&#34;https://github.com/JuliaIntervals/IntervalArithmetic.jl&#34;&gt;IntervalArithmetic.jl&lt;/a&gt; があり、頻繁にアップデートされています。
丸めは &lt;a href=&#34;https://github.com/JeffreySarnoff/FastRounding.jl&#34;&gt;FastRounding.jl&lt;/a&gt; の機能を使っているようでした。&lt;/p&gt;
&lt;p&gt;他にも &lt;a href=&#34;https://github.com/JeffreySarnoff/DirectedRoundings.jl&#34;&gt;DirectedRoundings.jl&lt;/a&gt; や
&lt;a href=&#34;https://github.com/JuliaIntervals/SetRounding.jl&#34;&gt;SetRounding.jl&lt;/a&gt; を発見しましたが、あまりメンテされていないようでした。&lt;/p&gt;
&lt;h3 id=&#34;最近点丸めによる方向付き丸め演算のエミュレート&#34;&gt;最近点丸めによる方向付き丸め演算のエミュレート&lt;/h3&gt;
&lt;p&gt;言語でサポートされていない方向付き丸めがパッケージを使えばできるということで意味がわからなくなってしまったのですが、
FastRounding.jl は、&lt;a href=&#34;https://github.com/JeffreySarnoff/ErrorfreeArithmetic.jl&#34;&gt;ErrorfreeArithmetic.jl&lt;/a&gt; で実装されているエラーフリー変換と言うものを用いて、
デフォルトの丸めモードの演算のみを利用して方向付き丸めをエミュレートしているようです。&lt;/p&gt;
&lt;p&gt;エミュレートの基本原理に関しては、 &lt;a href=&#34;http://verifiedby.me/adiary/pub/kashi/image/201406/nas2014.pdf&#34;&gt;最近点丸めによる方向付き丸めのエミュレート&lt;/a&gt; に詳細に書いてあるのですが、
ここでは簡単に加算に関して FastRounding.jl が行っているエラーフリー変換とエミュレートについて説明してみたいと思います。&lt;/p&gt;
&lt;p&gt;加算のエラーフリー変換は、別名 &lt;code&gt;twosum&lt;/code&gt; とも呼ばれるアルゴリズムで、\(a, b \in \mathbb{F}\) に対して,
ペア \( (x, y) = \text{twosum}(a, b) \) を返し、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
x &amp;amp;= a \oplus b, \\
a + b &amp;amp;= x + y
\end{aligned}
$$
が厳密に成立するとされるものです。&lt;/p&gt;
&lt;p&gt;Juliaで書くとほぼ「最近点丸めによる方向付き丸めのエミュレート」に書かれている Python のコードと変わらず、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; (x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; tmp)) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (b &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; tmp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となります。
私が確認したタイミングでは、ErrorfreeArithmetic.jl の &lt;a href=&#34;https://github.com/JeffreySarnoff/ErrorfreeArithmetic.jl/blob/2494c705caef77340fba596544fac8dae9ec2951/src/errorfree.jl#L1-L11&#34;&gt;&lt;code&gt;two_sum&lt;/code&gt; の定義&lt;/a&gt;も同様になっていました。&lt;/p&gt;
&lt;p&gt;今まで出てきた例の場合も含めて何通りか例を計算してみると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; twosum(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.7755575615628914e-17&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; twosum(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5.551115123125783e-17&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; twosum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.551115123125783e-17&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となって正しく分解されています。&lt;/p&gt;
&lt;p&gt;\(a, b \) の絶対値について条件を課したアルゴリズム &lt;code&gt;fasttwosum&lt;/code&gt; について、
オーバーフローが発生しない場合に等式が成立することが「精度保証付き数値計算の基礎」に定理2.5として証明されていました。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;twosum&lt;/code&gt; を用いた方向付き丸め演算のエミューレートは、上付き丸めと下付き丸めを&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; add_up(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ifelse(y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, nextfloat(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; add_down(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ifelse(y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, prevfloat(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と定義するもので、FastRounding.jlの対応箇所は&lt;a href=&#34;https://github.com/JeffreySarnoff/FastRounding.jl/blob/03ff386d36aa7de101f22ca740748a31e57942c0/src/FastRounding.jl#L248-L271&#34;&gt;ここ&lt;/a&gt;です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282297e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0000000000000002&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;見た感じ、良さそうです。FastRounding.jl の関数も呼び出してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; FastRounding
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_round(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, RoundUp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282297e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_round(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, RoundDown)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_round(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;, RoundUp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0000000000000002&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_round(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;, RoundDown)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;しかし、これで全て安心とはならず、救われない命があるようなのです……&lt;/p&gt;
&lt;h3 id=&#34;エミュレーションにおける問題&#34;&gt;エミュレーションにおける問題&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;http://verifiedby.me/adiary/09&#34;&gt;Error Free Transformation (EFT) is NOT error-free&lt;/a&gt; という記事に、
エラーフリー変換においてオーバーフローやアンダーフローが発生する例や、&lt;code&gt;twosum&lt;/code&gt; の乗算バージョンの &lt;code&gt;twoproduct&lt;/code&gt; に関して誤差が生じる例が書かれていました。&lt;/p&gt;
&lt;p&gt;気になったので、先ほどの &lt;code&gt;twosum&lt;/code&gt; に対して記事に書かれている例を試してみると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5630624444874539e+307&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.563062444487454e307&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; b &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.7976931348623157e+308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.7976931348623157e308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;, NaN)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となってやはり正しく計算されませんでした。&lt;/p&gt;
&lt;p&gt;「最近点丸めによる方向付き丸めのエミュレート」にはこれを回避する方法が書いてあったので、実装してみます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; new_twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; a &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; abs(a) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; abs(b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; a
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x, b &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; tmp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;else&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        tmp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; b
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; x, a &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; tmp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; new_add_up(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ifelse(y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, nextfloat(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; new_add_down(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x, y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ifelse(y &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, prevfloat(x), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;実行結果は、もちろん今まで計算できていたものは同じ結果になり、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_twosum(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.30000000000000004&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.7755575615628914e-17&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_twosum(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_twosum(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5.551115123125783e-17&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_add_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282297e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_add_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.2676506002282294e30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_add_up(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0000000000000002&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_add_down(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;54&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;先ほど計算できなかった例が、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_twosum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;9.9792015476736e291&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_add_up(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135702e308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; new_add_down(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と計算できるようになりました。&lt;/p&gt;
&lt;p&gt;しかしながら ErrorfreeArithmetic.jl の実装も残念ながらオーバーフローが考慮されていないので、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; ErrorfreeArithmetic
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; two_sum(a, b)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;, NaN)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;となり、従ってそれを利用した丸めも&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; FastRounding
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_round(a, b, RoundUp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; add_round(a, b, RoundDown)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.4413868904135704e308&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と丸めが正しく行われていません。記事に載っていた例については加算しか確認していませんが、他にも似たような現象が発生している可能性があるので利用には注意が必要だと思います。
(ライブラリの作者の方々には申し訳ないですが)&lt;/p&gt;
&lt;p&gt;基本的な演算に関してのエミュレートを行うだけでもかなり気を使う必要があり、漏れなく実装するのは容易ではないようです。&lt;/p&gt;
&lt;p&gt;しかしながら、デフォルトの丸めモードだけを使って方向付き丸めのエミュレートを行う発想自体は非常に面白く感じたので、時間のある時に他の演算に関しても実装してみたいです。
(パッケージとして通用するレベルで厳密な実装やテストを書くのは大変そうですが……)&lt;/p&gt;
&lt;h3 id=&#34;結論20203時点&#34;&gt;結論(2020/3時点)&lt;/h3&gt;
&lt;p&gt;Julia で方向付き丸めを指定した浮動小数点数計算はコア言語としては廃止されているが、エミュレートにより丸めを行うパッケージ FastRounding.jl が存在します。&lt;/p&gt;
&lt;p&gt;しかしながら FastRounding.jl は極端な入力を与えた場合に正しい答えを返さない可能性があり、利用の際には注意が必要、と言う結論になりました。&lt;/p&gt;
&lt;p&gt;長くなりましたが最後に参考資料を載せておきます。&lt;/p&gt;
&lt;h3 id=&#34;参考資料リンク&#34;&gt;参考資料、リンク&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;精度保証付数値計算&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tucker, W. &lt;a href=&#34;https://press.princeton.edu/books/ebook/9781400838974/validated-numerics&#34;&gt;Validated Numerics: A Short Introduction to Rigorous Computations&lt;/a&gt;, Princeton University Press, 2011&lt;/li&gt;
&lt;li&gt;大石 新一. &lt;a href=&#34;https://www.coronasha.co.jp/np/isbn/9784339028874/&#34;&gt;精度保証付き数値計算の基礎&lt;/a&gt;, コロナ社, 2018&lt;/li&gt;
&lt;li&gt;Wikipedia. &lt;a href=&#34;https://ja.wikipedia.org/wiki/%E7%B2%BE%E5%BA%A6%E4%BF%9D%E8%A8%BC%E4%BB%98%E3%81%8D%E6%95%B0%E5%80%A4%E8%A8%88%E7%AE%97&#34;&gt;精度保証付き数値計算&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaIntervals/ValidatedNumerics.jl&#34;&gt;JuliaIntervals / ValidatedNumerics.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaIntervals/ValidatedNumerics.jl/issues/165&#34;&gt;JuliaIntervals / ValidatedNumerics.jl / Julia rounding problem #165&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;IEEE 754&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Kahan, W. &lt;a href=&#34;https://people.eecs.berkeley.edu/~wkahan/ieee754status/IEEE754.PDF&#34;&gt;Lecture Notes on the Status of IEEE Standard 754 for Binary Floating-Point Arithmetic&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Wikipedia. &lt;a href=&#34;https://en.wikipedia.org/wiki/IEEE_754&#34;&gt;IEEE 754&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;”Validated Numerics&amp;quot; の 1.5章&lt;/li&gt;
&lt;li&gt;IEEE Computer Society. &lt;a href=&#34;https://ieeexplore.ieee.org/document/8766229&#34;&gt;754-2019 - IEEE Standard for Floating-Point Arithmetic&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;Julia言語の丸めモード&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/manual/integers-and-floating-point-numbers/index.html#Rounding-modes-1&#34;&gt;Integers and Floating-Point Numbers &amp;gt; Rounding modes&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/numbers/#Base.Rounding.setrounding-Tuple%7BType,Any%7D&#34;&gt;Base.Rounding.setrounding&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/base/math/#Base.Rounding.RoundingMode&#34;&gt;Base.Rounding.RoundingMode&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaLang/julia/issues/17926&#34;&gt;JuliaLang / julia / setrounding regression for 0.5.0-rc1 #17926&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaLang/julia/issues/26935&#34;&gt;JuliaLang / julia / what to do with &lt;code&gt;setrounding&lt;/code&gt;? #26935&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaLang/julia/pull/27166&#34;&gt;JuliaLang / julia / Deprecate setrounding #27166&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;o108minmin. &lt;a href=&#34;http://o108minmin.hatenablog.com/entry/2016/06/21/235822&#34;&gt;JuliaのFloatとRoundingの奇妙な挙動[追記]&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;方向付き丸めのエミュレート, Error Free Transformation&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;柏木 雅英. &lt;a href=&#34;http://verifiedby.me/adiary/pub/kashi/image/201406/nas2014.pdf&#34;&gt;最近点丸めによる方向付き丸めのエミュレート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;柏木 雅英. &lt;a href=&#34;http://verifiedby.me/kv/rounding/emu.pdf&#34;&gt;最近点丸めのみによる方向付き丸めのエミュレート&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Takeshi O, Siegfried R, and Shin&amp;rsquo;ichi O, Accurate Sum and Dot Product, SIAM J. Sci. Comput., 26(6), 1955–1988
(&lt;a href=&#34;http://www.oishi.info.waseda.ac.jp/%7Eoishi/papers/OgRuOi05.pdf&#34;&gt;http://www.oishi.info.waseda.ac.jp/%7Eoishi/papers/OgRuOi05.pdf&lt;/a&gt; でプレプリントが読める)&lt;/li&gt;
&lt;li&gt;「精度保証付き数値計算」の 2.2 章&lt;/li&gt;
&lt;li&gt;柏木 雅英. &lt;a href=&#34;http://verifiedby.me/adiary/09&#34;&gt;Error Free Transformation (EFT) is NOT error-free&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JeffreySarnoff/FastRounding.jl&#34;&gt;JeffreySarnoff / FastRounding.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JeffreySarnoff/ErrorfreeArithmetic.jl&#34;&gt;JeffreySarnoff / ErrorfreeArithmetic.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;方向つき丸めのJuliaパッケージ(未調査)&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JeffreySarnoff/DirectedRoundings.jl&#34;&gt;JeffreySarnoff / DirectedRoundings.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaIntervals/SetRounding.jl&#34;&gt;JuliaIntervals / SetRounding.jl&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;区間演算&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Validated Numerics の 2章&lt;/li&gt;
&lt;li&gt;柏木 雅英. &lt;a href=&#34;http://verifiedby.me/adiary/070&#34;&gt;区間演算の実装について(1)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;柏木 雅英. &lt;a href=&#34;http://verifiedby.me/adiary/071&#34;&gt;区間演算の実装について(2)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/mod_poppo&#34;&gt;@mod_poppo&lt;/a&gt;. &lt;a href=&#34;https://miz-ar.info/math/algebraic-real/posts/05-interval-arithmetic.html&#34;&gt;週刊 代数的実数を作る #5 区間演算と計算可能実数&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaIntervals/IntervalArithmetic.jl&#34;&gt;JuliaIntervals / IntervalArithmetic.jl&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/JuliaIntervals/IntervalArithmetic.jl/issues/215&#34;&gt;JuliaIntervals / IntervalArithmetic.jl / Bugs with tiny numbers #215&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Flux.jlでSinGANを実装する</title>
      <link>https://matsueushi.github.io/posts/fluxjl-singan/</link>
      <pubDate>Sun, 12 Jan 2020 01:00:00 -0500</pubDate>
      
      <guid>https://matsueushi.github.io/posts/fluxjl-singan/</guid>
      <description>&lt;p&gt;今回は、Juliaの機械学習フレームワークFlux.jlでSinGAN(一部)を実装して、1枚のアルバムジャケット画像からアニメーションを作成します。結構長いです。&lt;/p&gt;
&lt;p&gt;きっかけは、この紹介記事です。&lt;br&gt;
&lt;a href=&#34;https://qiita.com/kuto/items/ff2a30ca939ffdcd3cc1&#34;&gt;【SinGAN】たった１枚の画像から多様な画像生成タスクが可能に&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;実は&lt;a href=&#34;../fluxjl-dcgan/&#34;&gt;DCGANをFlux.jlで実装&lt;/a&gt;したあと、MNISTの画像では味気ないので自分でデータセットを作成して画像の自動生成を試みていましたが、
ダブりなく大量の画像を収集してデータセットを整備するのは骨が折れ、今一つの結果しか出なかったのでお蔵入りにしていました。&lt;/p&gt;
&lt;p&gt;しかしながら、SinGAN記事に関する読んでみると驚いたことにSinGANではたった1枚の画像から超解像化やアニメーション生成が行え、
ハイスペックのGPUを回さなくても結果が得られるということで実装に挑戦したくなりました。&lt;/p&gt;
&lt;p&gt;一部実装を簡略化したので、論文の著者による実装を完全に再現できたわけではないのでご了承ください。
間違っている点・改善すべき点はご指摘頂けると幸いです。&lt;/p&gt;
&lt;h2 id=&#34;環境&#34;&gt;環境&lt;/h2&gt;
&lt;p&gt;実行環境はJulia v1.3.0 + Flux.jl v0.10.0 で、GCPのGPU環境(K80)です。&lt;/p&gt;
&lt;p&gt;前回と同様、Dockerによる環境構築ですが、JuliaのパッケージもDockerfileに含めてしまっていた前回と違い、
今回はDockerファイルはcudaのベースイメージ+Juliaのシンプルな構成として、Juliaのパッケージ管理はJuliaのプロジェクト機能を用いました。&lt;/p&gt;
&lt;p&gt;参考にしたのは主に下記のページです。&lt;br&gt;
&lt;a href=&#34;https://qiita.com/cometscome_phys/items/989389db3540ebd9e026&#34;&gt;Julia でのパッケージの作り方&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://qiita.com/antimon2/items/5222f4f773bf1944b745&#34;&gt;Julia v1.0 でユニットテスト&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;singanのモデルの概略&#34;&gt;SinGANのモデルの概略&lt;/h2&gt;
&lt;p&gt;理論的な部分の詳細は、論文 &lt;a href=&#34;https://arxiv.org/abs/1905.01164&#34;&gt;SinGAN: Learning a Generative Model from a Single Natural Image&lt;/a&gt; や &lt;a href=&#34;https://qiita.com/kuto/items/ff2a30ca939ffdcd3cc1&#34;&gt;解説記事&lt;/a&gt; に詳しいのでそちらを見ていただきたいのですが、モデルの概要を簡単に説明しておきます。&lt;/p&gt;
&lt;p&gt;論文とは別に公開されている &lt;a href=&#34;https://tomer.net.technion.ac.il/files/2019/09/SingleImageGan_SM.pdf&#34;&gt;Supplementary Material&lt;/a&gt; はハイパーパラメーターや画像のパディング、アニメーションのノイズマップの作り方などが掲載されていて参考になります。&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_pipeline.png&#34;
         alt=&#34;SinGAN’s multi-scale pipeline, retrieved from SinGAN: Learning a Generative Model from a Single Natural Image&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;SinGAN’s multi-scale pipeline, retrieved from &lt;a href=&#34;https://arxiv.org/abs/1905.01164&#34;&gt;SinGAN: Learning a Generative Model from a Single Natural Image&lt;/a&gt;&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;SinGANの学習は、ピラミッド型の構造になっていて、下のステージから順々に学習を行います。
最初は、小さい画像サイズで全体の構造を学習し、ステージを上がっていくごとに画像サイズを拡大していき、微細な構造を学習します。
各ステージでは通常のGANのようにGeneratorとDiscriminatorを並行して学習させていきます。&lt;/p&gt;
&lt;p&gt;GeneratorやDiscriminatorのネットワークは、特段難しい構成をしているわけではなく、
Conv(3x3)-BatchNorm-LeakyLeRU(0.2) を5層重ねて最後の活性化関数を Generator だったら &lt;code&gt;tanh&lt;/code&gt;,
Discriminator だったら &lt;code&gt;identity&lt;/code&gt; に変えたConvolutional netがベースとなります。
Discriminator はこれで完成で、Generator はもう一手間必要です。&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_single.png&#34;
         alt=&#34;Single Scale Generation, retrieved from SinGAN: Learning a Generative Model from a Single Natural Image&#34;/&gt;&lt;figcaption&gt;
            &lt;p&gt;Single Scale Generation, retrieved from &lt;a href=&#34;https://arxiv.org/abs/1905.01164&#34;&gt;SinGAN: Learning a Generative Model from a Single Natural Image&lt;/a&gt;&lt;/p&gt;
        &lt;/figcaption&gt;
&lt;/figure&gt;

&lt;p&gt;Generatorの場合、入力には下層のステップで生成された画像+ノイズを与え、
Convolutional net で生成された結果にもう一度下層の生成画像を加えて出力とします。&lt;/p&gt;
&lt;p&gt;論文では Generator \( G_n \) は \(z_n \) をノイズ、\(\tilde{x}_n\) を第 \(n\) 段階の出力画像,
\( \uparrow^r\) をスケール \(r\) 倍の画像拡大とした時に、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\tilde{x}_N &amp;amp;= G_N(z_N), \\
\tilde{x}_n &amp;amp;= G_n(z_n, (\tilde{x}_{n+1})\uparrow^r), n &amp;lt; N
\end{aligned}
$$
で、Fully convolutional net を \(\psi\) とした時に、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
G(x, z) = (x)\uparrow^r + \psi(z + (x)\uparrow^r)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と言っています。実際は一段階前の画像に0パディングを行う(こともある)のでもう少し複雑になりますがあとで説明します。&lt;/p&gt;
&lt;p&gt;損失関数ですが、各ステージで
$$
\begin{aligned}
\min_{G_n} \min_{D_n} ( \mathcal{L}&lt;em&gt;{\text{adv}}(G_n, D_n) + \alpha \mathcal{L}&lt;/em&gt;{\text{rec}}(G_n) )
\end{aligned}
$$
を考えるのですが、\(\mathcal{L}&lt;em&gt;{\text{adv}}\) が Adversarial loss と呼ばれている通常の GAN の損失関数で、
計算するときは全てのステージでノイズを加えながら生成します。
\(\mathcal{L}&lt;/em&gt;{\text{rec}}\) は Reconstruction loss で、最初以外は全てゼロとなる特定のノイズ
$$
\begin{aligned}
z^{\text{rec}} = \{z_N^{\text{rec}}, z_{N-1}^{\text{rec}}, \ldots, z_0^{\text{rec}}\} = \{z^&lt;em&gt;, 0, \ldots, 0 \}
\end{aligned}
$$
を一つ学習を通して固定し、縮小した元画像との二乗誤差
$$
\begin{aligned}
\mathcal{L}_{\text{rec}, N} &amp;amp;= || G_N(z^&lt;/em&gt;) - x_N ||^2, \\
\mathcal{L}&lt;em&gt;{\text{rec}, n} &amp;amp;= || G_n(0, (\tilde{x}&lt;/em&gt;{n+1}^{\text{rec}})\uparrow^r) - x_n ||^2, n&amp;lt;N
\end{aligned}
$$
を損失関数とするものです。&lt;/p&gt;
&lt;p&gt;読んでいて一つ疑問に思ったのが出力データの値域です。
モデルでは、画像データを各数値が \( [-1,1] \) の範囲に収まる &lt;code&gt;Array&lt;/code&gt; として表現しているのですが、
Convolutional Netで &lt;code&gt;tanh&lt;/code&gt; を適用した段階では \( [-1,1] \) の範囲に収まるものの、
そのあと元の画像を足したらはみ出ることはあり得ます。
ロス関数による制約条件があるため大丈夫なのかもしれませんが……&lt;/p&gt;
&lt;h2 id=&#34;実装開始&#34;&gt;実装開始&lt;/h2&gt;
&lt;p&gt;公式実装の &lt;a href=&#34;https://github.com/tamarott/SinGAN&#34;&gt;tamarott/SinGAN&lt;/a&gt; をベースに、他の実装
&lt;a href=&#34;https://github.com/FriedRonaldo/SinGAN&#34;&gt;FriedRonaldo/SinGAN&lt;/a&gt; も時たま参考にしながらやっていきます。&lt;/p&gt;
&lt;p&gt;全部説明するのは大変なので、ポイントに絞って説明します。パッケージは先に色々インポートしておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Adapt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; BSON&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@load&lt;/span&gt;, &lt;span style=&#34;color:#a6e22e&#34;&gt;@save&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; CuArrays
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; mse, pullback, glorot_normal
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Optimise&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; update!
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; JSON
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; OrderedCollections
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Random
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Statistics
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;配列の0乱数埋め&#34;&gt;配列の0、乱数埋め&lt;/h3&gt;
&lt;p&gt;役立つ関数をいくつか定義しておきます。&lt;/p&gt;
&lt;p&gt;Convolutional Layerに対するFlux.jlの入力データは WHCN の順の array であり、
今回はカラー画像を使うのでチャンネル数は3(アルファチャンネルがないものを今回は使います), バッチサイズは1なので、画像サイズから array のサイズを計算する関数 &lt;code&gt;expand_dim&lt;/code&gt; を下のように定義します。&lt;/p&gt;
&lt;p&gt;あとは与えた配列と同じ型 (CPU 環境だったら &lt;code&gt;Array&lt;/code&gt;, GPU 環境だと &lt;code&gt;CuArray&lt;/code&gt;) で0や乱数で埋めた配列が欲しくなることがあるので、そのための関数も用意します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;expand_dim(dim&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (dim&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zeros_like(T&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill!(similar(T, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;zeros_like(xs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill!(similar(xs, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;randn_like(T&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Type&lt;/span&gt;, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn!(similar(T, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;randn_like(xs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn!(similar(xs, dims&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Flux.jl では &lt;code&gt;gpu&lt;/code&gt; という関数が定義されていて、この関数は CUDA 環境が有効な時に限り オブジェクト (&lt;code&gt;Array&lt;/code&gt; など) を CUDA 用のオブジェクト (&lt;code&gt;CuArray&lt;/code&gt; など) にコンバートします。(CUDA 環境が有効でない時は何もしません)。逆に &lt;code&gt;Array&lt;/code&gt; に変換を行う &lt;code&gt;cpu&lt;/code&gt; という関数も存在します。&lt;/p&gt;
&lt;p&gt;普通に &lt;code&gt;zeros&lt;/code&gt; や &lt;code&gt;randn&lt;/code&gt; を使って &lt;code&gt;gpu&lt;/code&gt; で変換してもいいのですが、
Juliaだと関数は型安定である方がいいと言われているので、出力の型が環境に応じて変化する &lt;code&gt;gpu&lt;/code&gt; を毎回使うのを防ぐために &lt;code&gt;zeros_like&lt;/code&gt; と &lt;code&gt;randn_like&lt;/code&gt; を定義しました。&lt;/p&gt;
&lt;p&gt;気になって変換方法について色々試してみたのですが、やはり &lt;code&gt;similar!&lt;/code&gt; を使うのが良いのではないかと思います。 &lt;a href=&#34;https://gist.github.com/matsueushi/be3071f6b6be040dd7ae9e51cf74b1e5&#34;&gt;https://gist.github.com/matsueushi/be3071f6b6be040dd7ae9e51cf74b1e5&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;画像サイズの計算&#34;&gt;画像サイズの計算&lt;/h3&gt;
&lt;p&gt;最下層の画像のサイズ &lt;code&gt;min_size&lt;/code&gt; からスタートして、サイズを縦横 &lt;code&gt;scale&lt;/code&gt; 倍することを繰り返して最終的なサイズ &lt;code&gt;image_size&lt;/code&gt; に拡大していく関数を作ります。
100層も学習することはないと思うので下のような形になっています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; size_pyramid(scale, min_size, image_size)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    current_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min_size 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pyramid &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        push!(pyramid, current_size)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        current_size &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; image_size &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        current_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt; floor(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;, min_size &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; scale&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;i)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        current_size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(current_size, image_size)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; pyramid
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;中間の Conv 層のチャンネル数は 32 からスタートしてピラミッドを 4 階上がるごとに 2 倍になりますが、128でキャップをかけておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;channel_pyramid(n_stage) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; min&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(map(s&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;32&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;^&lt;/span&gt;(floor(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;, s &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_stage), &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;画像の拡大パディング&#34;&gt;画像の拡大、パディング&lt;/h3&gt;
&lt;p&gt;画像を &lt;code&gt;image_shape&lt;/code&gt; の大きさに拡大したあと、周囲を &lt;code&gt;padded_shape&lt;/code&gt; の大きさになるまで0で埋める関数を作ります。&lt;/p&gt;
&lt;p&gt;Supplimental Material の &amp;ldquo;Boundary conditions and the effect of padding&amp;rdquo; を見ると
Conv 層における0埋めにより画像の四隅の多様性が失われるが、Generator に入力するノイズの周辺をノイズでパディングする
(つまり、ノイズ画像の方を大きくする)と軽減されるということなので、今回アニメーションをさせることを考えて0埋めをすることにしました。&lt;/p&gt;
&lt;p&gt;そのため
$$
\begin{aligned}
G(x, z) = (x)\uparrow^r + \psi(z + (x)\uparrow^r)
\end{aligned}
$$
は少し修正が必要になります。\(z\) は \((x)\uparrow^r\) よりも 四方が幅 \(d\) だけ大きいように毎回取るようにして、
\(\langle \rangle_d\) を幅 \(d\) の0パディング,  \(\rangle \langle_d\) を幅 \(d\) のトリミングとすると、実際にやることは&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
G(x, z) &amp;amp;= \rangle(\bar{x} + \psi(z + \bar{x}))\langle_d, \\
\bar{x} &amp;amp;= \langle(x)\uparrow^r\rangle_d
\end{aligned}
$$
です。定義するのは \(\langle(\cdot)\uparrow^r\rangle_d\) の部分です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; resize_and_padding(x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            image_shape&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}, padded_shape&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# println(size(x), image_shape, padded_shape)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_large &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; imresize(view(x, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), image_shape&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, expand_dim(padded_shape&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pad1, pad2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt; (padded_shape &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; image_shape) &lt;span style=&#34;color:#f92672&#34;&gt;÷&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xx[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;image_shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad1, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;image_shape[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad2, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; , &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x_large
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; xx
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; resize_and_padding(x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CuArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            image_shape&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}, padded_shape&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; cu(resize_and_padding(adapt(&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;}, x), image_shape, padded_shape))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;関数を &lt;code&gt;Array&lt;/code&gt; と &lt;code&gt;CuArray&lt;/code&gt; で分けているのは、 画像を拡大するImages.jlの &lt;code&gt;imresize&lt;/code&gt; を使うと &lt;code&gt;GPU arrays&lt;/code&gt; のスカラー操作が極めて遅いと警告が出るためです。
&lt;a href=&#34;https://github.com/JuliaGPU/GPUArrays.jl/blob/master/src/indexing.jl#L16&#34;&gt;https://github.com/JuliaGPU/GPUArrays.jl/blob/master/src/indexing.jl#L16&lt;/a&gt;
&lt;code&gt;CuArray&lt;/code&gt; の場合は一旦 &lt;code&gt;Array&lt;/code&gt; に変換して拡大とパディングを行い、 &lt;code&gt;CuArray&lt;/code&gt; に戻していますが効果のほどは不明です。&lt;/p&gt;
&lt;p&gt;あとあと各ステージの画像サイズに合わせて元画像を縮小した \( x_n \) が必要になります。これを一気に作れる関数を用意します。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; build_image_pyramid(img&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, image_shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}, noise_shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; map((is, ns)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;resize_and_padding(img, is, ns), image_shapes, noise_shapes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;ノイズの作成&#34;&gt;ノイズの作成&lt;/h3&gt;
&lt;p&gt;Adversarial loss と Reconstuction loss を計算する時に使うノイズ \(z^{\text{adv}}, z^{\text{rec}}\) をそれぞれ計算する関数
&lt;code&gt;build_noise_pyramid&lt;/code&gt; と &lt;code&gt;build_rec_pyramid&lt;/code&gt; を生成します。&lt;/p&gt;
&lt;p&gt;学習の状況に応じてステージごとにノイズの分散は変化するので、調節が行えるようにします。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; build_zero_pyramid(xs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; map(s&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;zeros_like(xs, expand_dim(s&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)), shapes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; build_noise_pyramid(xs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}, amplifiers&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; map((s, a)&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; randn_like(xs, expand_dim(s&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)), shapes, amplifiers)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; build_rec_pyramid(xs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}, amplifier&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_zero_pyramid(xs, shapes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    randn!(v[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    v[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;*=&lt;/span&gt; amplifier
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; v
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;convolutional-block&#34;&gt;Convolutional block&lt;/h3&gt;
&lt;p&gt;Discriminator, Generator の準備として、Convolutional block \(\psi\) から作っていきます。&lt;/p&gt;
&lt;p&gt;このような感じで Discriminator, Generator のどちらも使える &lt;code&gt;build_layers&lt;/code&gt; を定義しておきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Re-define leakyrelu function&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://github.com/FluxML/Flux.jl/issues/963&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;myleakyrelu(x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;, a &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; oftype(x &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; one(x), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; max(a &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; x, x &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; one(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;conv_block(&lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt;, out) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Conv((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; out; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        BatchNorm(out),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;myleakyrelu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; build_layers(n_layers, in_chs, conv_chs, out_chs, σ)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    layers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; conv_block(in_chs, conv_chs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n_layers &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        push!(layers, conv_block(conv_chs, conv_chs)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tail_layer &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Conv((&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), conv_chs &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; out_chs, σ;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(layers, tail_layer)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; Chain(layers&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;leakyrelu&lt;/code&gt; は NNlib.jl で定義されているので Flux.jl で使えますが、
&lt;code&gt;Float32&lt;/code&gt; の数値における (Zygote.jlの) 微分が &lt;code&gt;Float64&lt;/code&gt; になってしまうので自分で定義します。&lt;br&gt;
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/963&#34;&gt;https://github.com/FluxML/Flux.jl/issues/963&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/979&#34;&gt;https://github.com/FluxML/Flux.jl/issues/979&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;NNlib.jlに投げたこのプルリクがマージされたら定義し直す必要がなくなる予定です。(CuArrays.jl も修正する必要があるかもしれませんが……)
&lt;a href=&#34;https://github.com/FluxML/NNlib.jl/pull/149&#34;&gt;https://github.com/FluxML/NNlib.jl/pull/149&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;discriminator-generator&#34;&gt;Discriminator, Generator&lt;/h3&gt;
&lt;p&gt;いよいよ Discriminator, Generator の定義です。
簡単な Discriminator から作ります。DiscriminatorPyramid に関しては、単に Discriminator を複数個集めて来ただけです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    DiscriminatorPyramid
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;DiscriminatorPyramid&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    chains&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    DiscriminatorPyramid(xs&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;xs&lt;/span&gt;)}(xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build_single_discriminator(n_layers, conv_chs) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_layers(n_layers, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, conv_chs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, identity)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; DiscriminatorPyramid(n_stage&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;, n_layers&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_single_discriminator&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(n_layers, channel_pyramid(n_stage))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; DiscriminatorPyramid(gpu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(ds)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; DiscriminatorPyramid(image_shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}, n_layers&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    DiscriminatorPyramid(Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(image_shapes), n_layers)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show(io&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;IO&lt;/span&gt;, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DiscriminatorPyramid&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;DiscriminatorPyramid(&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    join(io, d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chains, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ノイズ画像を足してレイヤーに通し、出力結果にオリジナルの画像を加えて周囲をトリミングする &lt;code&gt;NoiseConnection&lt;/code&gt; (名前は適当)を作ります。
$$
\begin{aligned}
G(x, z) &amp;amp;= \rangle(\bar{x} + \psi(z + \bar{x}))\langle_d, \\
\bar{x} &amp;amp;= \langle(x)\uparrow^r\rangle_d
\end{aligned}
$$
上の式で言えば
$$
\begin{aligned}
N(\bar{x}, z) &amp;amp;= \rangle(\bar{x} + \psi(z + \bar{x}))\langle_d
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;を計算するレイヤーです。&lt;code&gt;pad&lt;/code&gt; は周囲でノイズパディングを行うサイズ \(d\) です。
&lt;code&gt;basic.jl&lt;/code&gt; の &lt;code&gt;SkipConnection&lt;/code&gt; の実装を参考にしました。
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/blob/e92da0cf850a982c425b83c92d6274174e52b02c/src/layers/basic.jl#L197&#34;&gt;https://github.com/FluxML/Flux.jl/blob/e92da0cf850a982c425b83c92d6274174e52b02c/src/layers/basic.jl#L197&lt;/a&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    NoiseConnection
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;NoiseConnection&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    layers
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pad&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@Flux&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;functor NoiseConnection
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (nc&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NoiseConnection&lt;/span&gt;)(prev&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;, noise&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pad
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    raw_output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;layers(noise &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; prev)&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; prev
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; raw_output[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; pad, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; pad, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show(io&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;IO&lt;/span&gt;, nc&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;NoiseConnection&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;NoiseConnection(&amp;#34;&lt;/span&gt;, nc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;layers, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;, nc&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pad, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;いよいよ GeneratorPyramid の定義です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    GeneratorPyramid
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GeneratorPyramid&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    image_shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise_shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pad&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    chains&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    GeneratorPyramid(image_shapes, noise_shapes, pad, xs&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;typeof&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;xs&lt;/span&gt;)}(image_shapes, noise_shapes, pad, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build_single_gen_layers(n_layers, conv_chs) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_layers(n_layers, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, conv_chs, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, tanh)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;build_single_generator(n_layers, conv_chs, pad) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; NoiseConnection(build_single_gen_layers(n_layers, conv_chs), pad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; GeneratorPyramid(image_shapes&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Tuple&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}}, n_layers&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;, pad&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n_stage &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(image_shapes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# receptive field = 11, floor(11/2) = 5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise_shapes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; pad &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; image_shapes]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ds &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_single_generator&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(n_layers, channel_pyramid(n_stage), pad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; GeneratorPyramid(image_shapes, noise_shapes, pad, gpu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(ds)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;show(io&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;IO&lt;/span&gt;, d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GeneratorPyramid&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GeneratorPyramid(&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image_shapes, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    println(io, d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pad, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    join(io, d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chains, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;, &lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    print(io, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; (genp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GeneratorPyramid&lt;/span&gt;)(xs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractVector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}, st&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;, resize&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Bool&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; st &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        zeros_shape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; resize &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; first(genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes) &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; first(genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image_shapes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; zeros_like(T, expand_dim(zeros_shape&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prev &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp(xs, st &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chains[st](prev, xs[st])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; resize &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; resize_and_padding(out, genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image_shapes[st &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes[st &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; out
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;最後の関数が画像を生成する関数で、&lt;code&gt;xs&lt;/code&gt; が与えるノイズ、&lt;code&gt;st&lt;/code&gt; が到達したいステージ、&lt;code&gt;resize&lt;/code&gt; が生成した後に拡大したいかどうかです。
ステージの添字の数え方は論文とは上下が逆で下から上の順に大きくなっているので注意です。&lt;/p&gt;
&lt;h3 id=&#34;損失関数&#34;&gt;損失関数&lt;/h3&gt;
&lt;p&gt;次に損失関数を定義します。SinGAN のオリジナルの実装では GAN には WGAN-GP を使っているのですが、残念なが自分のスキルでは Gradientを損失条件の中に入れられなかった
(損失関数の中にGradientの計算関数を入れると、損失関数の微分が取れなかった) ので、泣く泣く LSGAN に置き換えています。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; discriminator_loss(d_real&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, d_g_fake_adv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    real_loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mse(&lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;, mean(d_real; dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fake_loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mse(&lt;span style=&#34;color:#ae81ff&#34;&gt;0f0&lt;/span&gt;, mean(d_g_fake_adv; dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; real_loss &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; fake_loss
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generator_adv_loss(d_g_fake_adv&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mse(&lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;, mean(d_g_fake_adv; dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generator_rec_loss(real_img&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;, g_fake_rec&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mse(real_img, g_fake_rec)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;いちいち0や1をベクトルに直す必要はありません。シンプルに書けていいですね。&lt;/p&gt;
&lt;h3 id=&#34;discriminator-generator-の更新&#34;&gt;Discriminator, Generator の更新&lt;/h3&gt;
&lt;p&gt;損失関数の値を計算し、Discriminator, Generator のパラメーターに関する微分を取ってパラメーターを更新する関数を書きます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update_discriminator!(opt, dscr, real_img, g_fake_adv)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@eval&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;istraining() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(dscr)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(ps) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        discriminator_loss(dscr(real_img), dscr(g_fake_adv))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(opt, ps, grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@eval&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;istraining() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update_generator!(opt, dscr, gen, real_img, prev_rec, prev_adv, noise_rec, noise_adv, alpha)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@eval&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;istraining() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(gen)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(ps) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        g_fake_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gen(prev_rec, noise_rec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d_g_fake_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dscr(gen(prev_adv, noise_adv))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        generator_adv_loss(d_g_fake_adv) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; alpha &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; generator_rec_loss(real_img, g_fake_rec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(opt, ps, grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@eval&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;istraining() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここで、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(ps) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    discriminator_loss(dscr(real_img), dscr(g_fake_adv))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この部分はこれと一緒です。(&lt;a href=&#34;https://docs.julialang.org/en/v1/manual/functions/index.html#man-anonymous-functions-1&#34;&gt;https://docs.julialang.org/en/v1/manual/functions/index.html#man-anonymous-functions-1&lt;/a&gt;)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; discriminator_loss(dscr(real_img), dscr(g_fake_adv)), ps)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;gradient&lt;/code&gt; の代わりに &lt;code&gt;pullback&lt;/code&gt; を使うと微分と同時に関数の値も取得できます。(&lt;a href=&#34;https://fluxml.ai/Zygote.jl/latest/adjoints/#Pullbacks-1&#34;&gt;https://fluxml.ai/Zygote.jl/latest/adjoints/#Pullbacks-1&lt;/a&gt;)&lt;/p&gt;
&lt;p&gt;パラメーターの更新後に損失関数の値を返したい場合、例えばこのように書けばOKです。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update_discriminator!(opt, dscr, real_img, g_fake_adv)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@eval&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;istraining() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(dscr)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss, back &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pullback(ps) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        discriminator_loss(dscr(real_img), dscr(g_fake_adv))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; back(Zygote&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sensitivity(loss))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(opt, ps, grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#a6e22e&#34;&gt;@eval&lt;/span&gt; Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;istraining() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;学習&#34;&gt;学習&lt;/h3&gt;
&lt;p&gt;1エポックの学習は次のようになります。
改めて損失関数の値を計算しているので少し無駄になっている気もしますが気にしないでおきます。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; train_epoch!(opt_dscr, opt_gen, st, loop_dscr, loop_gen,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        dscr, genp, prev_rec, noise_rec, real_img, amplifiers, alpha)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# discriminator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    foreach(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;loop_dscr) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        noise_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_noise_pyramid(prev_rec, genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;st], amplifiers)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        g_fake_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp(noise_adv, st, false)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        update_discriminator!(opt_dscr, dscr, real_img, g_fake_adv)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# generator&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    foreach(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;loop_gen) &lt;span style=&#34;color:#66d9ef&#34;&gt;do&lt;/span&gt; _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        noise_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_noise_pyramid(prev_rec, genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;st], amplifiers)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prev_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp(noise_adv, st &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        update_generator!(opt_gen, dscr, genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chains[st], real_img, prev_rec, prev_adv, noise_rec, last(noise_adv), alpha)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_noise_pyramid(prev_rec, genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;st], amplifiers)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    g_fake_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp(noise_adv, st, false)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss_dscr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; discriminator_loss(dscr(real_img), dscr(g_fake_adv))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    d_g_fake_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dscr(g_fake_adv)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss_gen_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; generator_adv_loss(d_g_fake_adv)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    g_fake_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chains[st](prev_rec, noise_rec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss_gen_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; generator_rec_loss(real_img, g_fake_rec) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss_dscr, loss_gen_adv, loss_gen_rec
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ハイパーパラメーターを入れておく箱を用意して、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;HyperParams&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    scale&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;                  &lt;span style=&#34;color:#75715e&#34;&gt;# progression scale, &amp;gt; 1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    min_size_x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;# minimal image width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    min_size_y&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;# minimal image height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    img_size_x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;# output image width&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    img_size_y&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;               &lt;span style=&#34;color:#75715e&#34;&gt;# output image height&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n_layers&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;                 &lt;span style=&#34;color:#75715e&#34;&gt;# number of conv layers&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    max_epoch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# training epochs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    reduce_lr_epoch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;          &lt;span style=&#34;color:#75715e&#34;&gt;# reduce learining rate after training `redule_lr_epoch` epochs&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    save_image_every_epoch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;   &lt;span style=&#34;color:#75715e&#34;&gt;# save generated image every `save_image_every_epoch` epoch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    save_loss_every_epoch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# save loss every `save_loss_every_epoch` epoch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loop_dscr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# training steps par descriminator training epoch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loop_gen&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;                 &lt;span style=&#34;color:#75715e&#34;&gt;# training steps par generator training epoch&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lr_dscr&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;                &lt;span style=&#34;color:#75715e&#34;&gt;# discriminator learining rate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lr_gen&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;                 &lt;span style=&#34;color:#75715e&#34;&gt;# generator learning rate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alpha&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;                  &lt;span style=&#34;color:#75715e&#34;&gt;# rec loss coefficient&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    amplifier_init&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;         &lt;span style=&#34;color:#75715e&#34;&gt;# noise amplifier&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    HyperParams() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new(&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1600&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;500&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5e-4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5e-4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;50f0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;show_dict(hp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HyperParams&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; OrderedDict(string(nm) &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; getfield(hp, nm) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; nm &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; fieldnames(HyperParams))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;image_shapes(hp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HyperParams&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size_pyramid(hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;scale, (hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;min_size_x, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;min_size_y), (hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;img_size_x, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;img_size_y))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; setup_models(hp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HyperParams&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    img_shapes &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; image_shapes(hp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dscrp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; DiscriminatorPyramid(img_shapes, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;n_layers) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    genp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GeneratorPyramid(img_shapes, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;n_layers) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; dscrp, genp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ようやく最終的な &lt;code&gt;train&lt;/code&gt; 関数の完成です。(画像を出力するところなどは省いています)。
&lt;code&gt;estimate_noise_amplifier&lt;/code&gt; は、一段階前の画像と元画像からノイズの分散を調節する関数です。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; estimate_noise_amplifier(prev_rec&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}, real_img&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;},
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        pad&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Integer&lt;/span&gt;, amplifier_init&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prev_rec_crop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@view&lt;/span&gt; prev_rec[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; pad, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; pad&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; pad, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    rmse &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sqrt(mse(real_img, prev_rec_crop))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; rmse &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; amplifier_init
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; train!(dscrp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DiscriminatorPyramid&lt;/span&gt;, genp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GeneratorPyramid&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        real_img_p&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}, hp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;HyperParams&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;}}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    stages &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;image_shapes)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    amplifiers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;[]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# fixed noise for rec&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fixed_noise_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; build_rec_pyramid(first(real_img_p), genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes, &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fixed_noise_adv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; similar(fixed_noise_rec)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; st &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;stages
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Step &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&lt;/span&gt;(st)&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# reset optimizer&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        opt_dscr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ADAM(hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lr_dscr, (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.999&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        opt_gen &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ADAM(hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;lr_gen, (&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.999&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# calculate noise amplifier&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        prev_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; genp(fixed_noise_rec, st &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, true) &lt;span style=&#34;color:#75715e&#34;&gt;# padded&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        amp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; st &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;?&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; estimate_noise_amplifier(prev_rec, real_img_p[st], genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;pad, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;amplifier_init)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        push!(amplifiers, amp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# add noise for adv &lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fixed_noise_adv[st] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; amp &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; randn_like(prev_rec, expand_dim(genp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_shapes[st]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        save_noise_amplifiers(st, amp)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Noise amplifier = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;$&lt;/span&gt;(amp)&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#a6e22e&#34;&gt;@time&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; ep &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;max_epoch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#75715e&#34;&gt;# reduce learnint rate&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; ep &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;reduce_lr_epoch
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                &lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Reduce learning rate&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                opt_dscr&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;/=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                opt_gen&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;/=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            loss_dscr, loss_gen_adv, loss_gen_rec &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                train_epoch!(opt_dscr, opt_gen, st, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loop_dscr, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;loop_gen,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    dscrp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;chains[st], genp, prev_rec, fixed_noise_rec[st], real_img_p[st], amplifiers, hp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;alpha)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;アニメーション結果&#34;&gt;アニメーション結果&lt;/h3&gt;
&lt;p&gt;一応トレーニング関数まで到達したので、具体的な実行方法などは一番最後に載せたレポジトリを見てもらうこととして、とりあえずアニメーションの結果を見せたいと思います。
公式実装のアニメーションで使われている画像を強引に 64x64 にリサイズしたものを使いました。
&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_lightning_original.png&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;無理やり 256x256 に引き伸ばすとこんな感じです。
&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_lightning_original.png&#34; width=&#34;256&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;25x25 のサイズからスタートして、64x64 で終了させたのですが、GCP の n1-standard-8 + K80 で一時間弱で学習が終わりました。
今回は Julia サイドで画像だけ吐き出して、アニメーション GIF は ImageMagick で作成しました。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ convert -delay &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt; -loop &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt; img*.png fluxjl-singan_lightning.gif
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_lightning.gif&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;実際の画像はかなり小さいので、256x256 に拡大するとこんな感じです。
もっと時間をかけて大きい画像まで学習すれば高精細な結果が得られると思います。
&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_lightning.gif&#34; width=&#34;256&#34;/&gt;
&lt;/figure&gt;
&lt;/p&gt;
&lt;p&gt;アルバムのジャケットをアニメーションさせた結果です。&lt;/p&gt;
&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_floral.gif&#34; width=&#34;256&#34;/&gt;
&lt;/figure&gt;

&lt;figure&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-singan_farside.gif&#34; width=&#34;256&#34;/&gt;
&lt;/figure&gt;

&lt;p&gt;まだまだ実装の改良の余地がありそうですが、一応一枚の画像だけを使ってアニメーション画像を作成するモデルを Flux.jl で実装できました。&lt;/p&gt;
&lt;p&gt;詳細な部分も含めた全コードはこちらです。
&lt;a href=&#34;https://github.com/matsueushi/SinGAN&#34;&gt;matsueushi/SinGAN&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Flux.jl v0.10.0でDCGANを動かす(CUDA環境)</title>
      <link>https://matsueushi.github.io/posts/fluxjl-dcgan/</link>
      <pubDate>Sun, 01 Dec 2019 18:07:13 -0500</pubDate>
      
      <guid>https://matsueushi.github.io/posts/fluxjl-dcgan/</guid>
      <description>&lt;p&gt;2020/3/8 追記: model-zoo(&lt;a href=&#34;https://github.com/FluxML/model-zoo&#34;&gt;https://github.com/FluxML/model-zoo&lt;/a&gt;) にDCGANのモデルが入りました。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2019/11/29にJuliaの機械学習ライブラリ&lt;a href=&#34;https://fluxml.ai/Flux.jl/stable/&#34;&gt;Flux.jl&lt;/a&gt;の&lt;a href=&#34;https://github.com/FluxML/Flux.jl/releases/tag/v0.10.0&#34;&gt;v0.10.0&lt;/a&gt;がリリースされた。
もともとv0.9.0でDCGANのMNISTデータセットから手書き文字画像生成モデルを作成して、今回の変更に合わせてv0.10.0で動かしたのだが、
ここに至るまで色々と苦戦したので、v0.10.0の主な変更点や、自分がつまづいた点を書いておく。&lt;/p&gt;
&lt;p&gt;実装はGitHubのリポジトリ &lt;a href=&#34;https://github.com/matsueushi/fluxjl-gan&#34;&gt;matsueushi/fluxjl-gan&lt;/a&gt; を見てほしい。&lt;/p&gt;
&lt;p&gt;環境はGCPのn1-standard-8 + 1 x NVIDIA Tesla K80で、Ubuntu 18.04, Juliaのバージョンは1.3.0を利用。&lt;/p&gt;
&lt;h2 id=&#34;dockerで環境構築gpu&#34;&gt;Dockerで環境構築(GPU)&lt;/h2&gt;
&lt;p&gt;GPUが使えるJuliaのオフィシャルなDocker imageは &lt;del&gt;現在(2019/12/1)存在しないと思われる。&lt;/del&gt; 配布されているようです&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;(ひっそり CUDA と Julia が同梱されたコンテナイメージも配布されていたりします…… &lt;a href=&#34;https://t.co/LE1ducHlWE&#34;&gt;https://t.co/LE1ducHlWE&lt;/a&gt; )(姑息な宣伝) &lt;a href=&#34;https://t.co/VbS7xcYTTV&#34;&gt;https://t.co/VbS7xcYTTV&lt;/a&gt;&lt;/p&gt;&amp;mdash; やまさき (@yama_k_1101) &lt;a href=&#34;https://twitter.com/yama_k_1101/status/1201376391779893249?ref_src=twsrc%5Etfw&#34;&gt;December 2, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;&lt;del&gt;このあたり、&lt;a href=&#34;https://www.tensorflow.org/install/docker&#34;&gt;GPUのDockerイメージ&lt;/a&gt; が利用できるTensorflowが羨ましく感じられる部分ではある。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;JuliaGPUのDockerイメージ &lt;a href=&#34;https://github.com/JuliaGPU/docker&#34;&gt;JuliaGPU/docker&lt;/a&gt; はメンテナンスされていないので、&lt;a href=&#34;https://hub.docker.com/r/nvidia/cuda/&#34;&gt;nvidia/cuda&lt;/a&gt; のイメージをベースに、Juliaのインストール部分は &lt;a href=&#34;https://github.com/docker-library/julia&#34;&gt;docker-library/julia&lt;/a&gt; を参考にDockerfileを作成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Dockerfile Julia 1.3.0 + CUDA for Flux.jl&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ARG&lt;/span&gt; CUDA&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;.0&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ARG&lt;/span&gt; UBUNTU_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;.04&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; nvidia/cuda:${CUDA}-cudnn7-devel-ubuntu${UBUNTU_VERSION}&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local/julia&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$JULIA_PATH/bin:$PATH&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_TAR_ARCH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_DIR_ARCH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_GPG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3673DF529D9049477F76B37566E3C7DC03D6E495
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.3.0&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_SHA256&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;9ec9e8076f65bef9ba1fb3c58037743c5abb3b53d845b827e44a37e7bcacffe8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Based on https://github.com/docker-library/julia&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Copyright (c) 2014 Docker, Inc.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Released under the MIT license&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://opensource.org/licenses/mit-license.php&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; set -eux; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get update; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get install -y --no-install-recommends curl gnupg dirmngr; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf /var/lib/apt/lists/*; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    folder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_VERSION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | cut -d. -f1-2&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    julia_tar_url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://julialang-s3.julialang.org/bin/linux/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_DIR_ARCH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;folder&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/julia-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_VERSION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-linux-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_TAR_ARCH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.tar.gz&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl -fL -o julia.tar.gz.asc &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;julia_tar_url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.asc&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl -fL -o julia.tar.gz     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;julia_tar_url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_SHA256&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; *julia.tar.gz&amp;#34;&lt;/span&gt; | sha256sum -c -; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    export GNUPGHOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;mktemp -d&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_GPG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    gpg --batch --verify julia.tar.gz.asc julia.tar.gz; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    command -v gpgconf &amp;gt; /dev/null &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; gpgconf --kill all; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$GNUPGHOME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; julia.tar.gz.asc; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    mkdir &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    tar -xzf julia.tar.gz -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; --strip-components 1; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm julia.tar.gz; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# smoke test&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    julia --version&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install packages&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; julia -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;import Pkg; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Pkg.add([ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;BSON&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;Distributions&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;HDF5&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;JLD&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;FileIO&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;ImageMagick&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;Images&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Pkg.add([ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Pkg.PackageSpec(name=&amp;#34;Flux&amp;#34;, version=&amp;#34;0.10&amp;#34;), \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    using BSON, Distributions, HDF5, JLD, FileIO, ImageMagick, Images, Flux&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CMD&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;julia&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/SatoshiTerasaki/items/10d53e4061f11b63155c&#34;&gt;CUDAが動く Julia の深層学習フレームワーク Flux.jl の環境構築をDockerで行う．&lt;/a&gt; でもっと丁寧に説明されていた(こっちだとソースからビルドしている)。&lt;/p&gt;
&lt;p&gt;v0.9.0では&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/918&#34;&gt;LoadError: LoadError: UndefVarError: libcudnn not defined #918&lt;/a&gt; などのエラーが発生しCuArrays.jlをv1.3に下げる必要があったのだが、v0.10.0ではそのような心配はないのでいいですね。&lt;/p&gt;
&lt;h2 id=&#34;dcganのモデル作成&#34;&gt;DCGANのモデル作成&lt;/h2&gt;
&lt;p&gt;GANの仕組み自体の説明は&lt;br&gt;
&lt;a href=&#34;https://elix-tech.github.io/ja/2017/02/06/gan.html&#34;&gt;はじめてのGAN&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;https://qiita.com/taku-buntu/items/0093a68bfae0b0ff879d&#34;&gt;GANについて概念から実装まで　～DCGANによるキルミーベイベー生成～&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;https://qiita.com/triwave33/items/1890ccc71fab6cbca87e&#34;&gt;今さら聞けないGAN（1）　基本構造の理解&lt;/a&gt;,&lt;br&gt;
などを参照してほしい。(自分も勉強中です……)&lt;/p&gt;
&lt;p&gt;Fluxには &lt;a href=&#34;https://github.com/FluxML/model-zoo&#34;&gt;FluxML/model-zoo&lt;/a&gt; という実装を集めたレポジトリが存在し、
v0.9.0で実装する際にはGANに関係したプルリクエスト
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/47&#34;&gt;GAN models #47&lt;/a&gt;,
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/111&#34;&gt;Added Condtional GAN and DCGAN tutorial #111&lt;/a&gt;
が非常に有用だった。&lt;/p&gt;
&lt;p&gt;しかしながら、後にも触れるが、v0.10.0で、&lt;a href=&#34;https://github.com/FluxML/Flux.jl/pull/669&#34;&gt;デフォルトの自動微分エンジンをTrackerからZygote.jlに変える大きな変更&lt;/a&gt; がマージされたので、
そのままコピペしただけでは動かないと思われるため要注意。&lt;/p&gt;
&lt;p&gt;ネットワーク、ロス関数の構成は &lt;a href=&#34;https://www.tensorflow.org/tutorials/generative/dcgan&#34;&gt;TensorflowのDCGANチュートリアル&lt;/a&gt; を参考にした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noise_dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;channels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Chain(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dense(noise_dim, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;; initW &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BatchNorm(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;, relu),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;reshape(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ConvTranspose((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BatchNorm(&lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, relu),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ConvTranspose((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BatchNorm(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, relu),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ConvTranspose((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; channels, tanh; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;discriminator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  Chain(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Conv((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), channels &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, leakyrelu; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Conv((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, leakyrelu; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;reshape(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; initW &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal)) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; generator_loss(fake_output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(logitbinarycrossentropy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(fake_output, &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; discriminator_loss(real_output, fake_output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    real_loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(logitbinarycrossentropy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(real_output, &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fake_loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(logitbinarycrossentropy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(fake_output, &lt;span style=&#34;color:#ae81ff&#34;&gt;0f0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5f0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (real_loss &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  fake_loss)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GANのdiscriminatorは、オリジナルの画像と、Generatorが生成したフェイクの画像を見分ける役割(二値分類)のため、出力層の活性化関数がシグモイド関数、ロス関数がbinarycrossentropyである実装が多いが、
今回はTensorflowの実装同様、出力層には活性化関数を適用せず(恒等写像), ロス関数にlogitbinarycrossentropyを用いた。&lt;/p&gt;
&lt;p&gt;シグモイド関数を\( \sigma \) とすると、&lt;/p&gt;
&lt;p&gt;\(
\text{binarycrossentropy}(\hat{y}, y) = -y \log \hat{y} - (1 - y) \log(1 - \hat{y}), \\
\text{logitbinarycrossentropy}(\hat{z}, y) = (1 - y) \log \hat{y} - \log(\sigma(\hat{z}))
\)&lt;/p&gt;
&lt;p&gt;だから、(\( y = 0, 1 \) を代入して確かめることで)&lt;/p&gt;
&lt;p&gt;\(
\text{binarycrossentropy}(\sigma(\hat{z}), y) = \text{logitbinarycrossentropy}(\hat{z}, y)
\)&lt;/p&gt;
&lt;p&gt;だから数式上では同じ値になる。
しかし、シグモイド関数を適用する前の値が大きい場合、適用後の値は極めて1に近くなるため、binarycrossentropyの計算中に桁落ちが発生してしまい本来の値からの誤差が大きくなり、勾配の値もおかしくなる。
そのため、logitbinarycrossentropyを使ったほうが計算が安定するようである(実験はしてません、ごめんなさい)。
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/914&#34;&gt;Numerical issues for (logit)binarycrossentropy #914&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;v0.9.0では &lt;code&gt;binarycrossentropy&lt;/code&gt; と &lt;code&gt;logitbinarycrossentropy&lt;/code&gt; はCUDA環境で動かなかったがv0.10.0では修正されている。
このあたりを試していた時、masterブランチで &lt;code&gt;binarycrossetnropy&lt;/code&gt; は直っていたのに &lt;code&gt;logitbinarycrossentropy&lt;/code&gt; は未修正だったので、
初めてFlux.jlに&lt;a href=&#34;https://github.com/FluxML/Flux.jl/pull/940&#34;&gt;Pull resuestを投げて&lt;/a&gt;取り込んでもらった。&lt;/p&gt;
&lt;p&gt;DiscriminatorとGeneratorのtrain関数は下のように書ける。
細かい部分はリポジトリ参照&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; train_discriminator!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DCGAN&lt;/span&gt;, batch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_dim, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;batch_size) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fake_input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator(noise)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss(m) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; discriminator_loss(m(batch), m(fake_input))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    disc_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator), Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator_optimizer, Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator), disc_grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; train_generator!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DCGAN&lt;/span&gt;, batch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_dim, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;batch_size) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss(m) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; generator_loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator(m(noise)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gen_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator), Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator_optimizer, Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator), gen_grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tracker-から-zygotejl-への変更&#34;&gt;Tracker から Zygote.jl への変更&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FluxML/Flux.jl/pull/669&#34;&gt;using Zygote #669&lt;/a&gt; のマージにより自動微分のバックエンドがTrackerから&lt;a href=&#34;https://github.com/FluxML/Zygote.jl&#34;&gt;Zygote.jl&lt;/a&gt;に変更された。
Trackerで書かれたモデルは、Zygote.jlに合わせて多少書き直す必要がある。&lt;/p&gt;
&lt;h3 id=&#34;型の変更&#34;&gt;型の変更&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gradient&lt;/code&gt; を取った時に返ってくる型が変わった。&lt;/p&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; using Flux.Tracker: gradient
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; f&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3x^2 + 2x + 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f, 2.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;14.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Tracker.TrackedReal&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;v0.10.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; f&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3x^2 + 2x + 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f, 2.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;14.0,&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この変更で &lt;code&gt;Tracker.data&lt;/code&gt; や &lt;code&gt;.data&lt;/code&gt; で &lt;code&gt;TrackerArray&lt;/code&gt; や &lt;code&gt;TrackerReal&lt;/code&gt; などでラップされた型からデータを取り出す必要がなくなって便利になった。&lt;/p&gt;
&lt;h3 id=&#34;gradientの書き方&#34;&gt;gradientの書き方&lt;/h3&gt;
&lt;p&gt;Zygote.jl の&lt;a href=&#34;https://fluxml.ai/Zygote.jl/latest/flux/&#34;&gt;リファレンス&lt;/a&gt; には &lt;code&gt;Tracker.gradient&lt;/code&gt; を単に &lt;code&gt;Zygote.gradient&lt;/code&gt; に置き換えれば良いと書いてあるが、
自分の場合はTrackerで取れた微分がZygoteにバックエンドが変わって取れなくなった。&lt;/p&gt;
&lt;p&gt;Trackerでは微分を取るときに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fake_input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; generator(noise)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fake_output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; discriminator(fake_input)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(fake_output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gen_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss, Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(generator))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このような書き方もできた。model-zooのPull RequestのDCGANのコードもこのような形式で書いてある。&lt;/p&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gen_grad.grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IdDict&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any,Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; with &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; entries:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0456388, -0.00530366, -0.0689154, 0.0356684, 0.033944, 0.0469224, 0…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0663779 0.470391 0.0135268 0.169848; -0.265991 0.113839 -0.297718 …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1.0491&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0448993, -0.0436305, -0.0396288, -0.0178894, 0.0191187, 0.0322982, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3.05707e-7, -6.56961e-7, -1.86265e-7, 6.1249e-8, 3.40864e-7, 3.57977e…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-2.31666e-8, -1.72295e-7, 4.83415e-8, 2.7474e-8, 2.61934e-8, -9.76142…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.257108, -1.30009, 0.643118, -0.70479, -0.0380322, 0.047996, 0.1616…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1.68035, -1.09166, -1.92644, 0.398565, 0.342392, -0.541331, 0.957729…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.34392, -1.29767, 0.489044, -0.76697, -0.265278, 0.834581, 0.20901,…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1.86325, -1.0232, -2.0715, -0.0989702, 0.453471, -0.632238, 1.33671,…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.161715 0.358326 1.0731 1.53449; 1.10473 0.652393 -0.844213 0.973572…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.107908 0.042381 … -0.0503733 -0.0570333; 0.141959 -0.0503319 … -0.…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.210451 -0.383133 … -0.441269 -0.122698; 0.0191366 -0.273669 … -0.1…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, -2.23517e-8, 2.6077e-8, 0.0, 2.00234e-8, -9.31323e-9, -2.98023e-…
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一方、v0.10.0では&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gen_grad.grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IdDict&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any,Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; with &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; entries:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0396942 0.00191599 0.0301089 0.00723371; 0.0816196 0.036961 0.0352632 0.0343… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;                                                                            &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0002127 0.0137428 … -0.0121552 0.0268332; -0.0131425 -0.00983153 … -0.02382… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0171712 0.00370337 0.0333522 -0.0189711; 0.0416152 -0.0110209 0.0113975 -0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0109217 0.0165013 … -0.0128005 0.000112204; -0.00316031 -0.0308092 … -0.011… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;微分が &lt;code&gt;nothing&lt;/code&gt; になってしまう。自分は、下のように書き換えた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss(m) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(discriminator(m(noise)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gen_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss(generator), Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(generator))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gen_grad.grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IdDict&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any,Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; with &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; entries:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)}(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0396942 0.00191599 0.… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.136635 -0.1123 -0.0335189 -0.108103; -0.0265187 -0…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}())&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-2.7719e-10, 3.03544e-11, 2.1797e-10, 2.24403e-10, 2.26078e-…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)}(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}())&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0109217 0.0165013 … … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.00735242 0.000570209 … 0.00351829 0.0103457; 0.0116238 -0…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00270601, -0.0176082, 0.00565182, 0.0125242, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  BatchNorm&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;128, λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; relu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing, β &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00270601, -0.…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}())&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)}(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.00987214, -0.0315625, 0.0199244, 0.0148943, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00182929, 0.00162896, 0.00011289, 0.00182924,…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0002127 0.0137428 … … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00630109 0.0134955 … 0.0117517 0.000913039; -0.0059…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0303094, -0.028408, 0.0697083, -0.00634472, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0158277, -0.0324276, 0.0719301, 0.00790212, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00251813, 0.00111592, -0.000486438, 0.0019682…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  BatchNorm&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;64, λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; relu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing, β &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0158277, -0.…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0171712 0.00370337 0.… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00725331 -0.00364046 -0.000333806 -0.00218348; 0.00…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;                     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.426291&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-9.77911e-11, -9.91324e-11, -7.81544e-10, -2.83712e-11, -4.1…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;5.82077e-11, -6.54836e-11, -5.45697e-12, -3.49246e-10, -2.25…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  BatchNorm&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;12544, λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; relu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing, β &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00251813, 0.0…
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zygoteでは上のようなimplicit parametersの書き方だけではなく、explicitな書き方 &lt;code&gt;gradient(loss, generator)&lt;/code&gt; による微分も可能で、
Zygote.jlの &lt;a href=&#34;https://fluxml.ai/Zygote.jl/latest/#Gradients-of-ML-models-1&#34;&gt;Gradients of ML models&lt;/a&gt; にはimplicitな書き方は、
Trackerとの互換性のために残してあると書いてある。&lt;/p&gt;
&lt;p&gt;しかしながら、この二つを利用したときに返ってくる型が異なる&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gen_grad&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Zygote.Grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gradient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loss, generator&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:layers,&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:W, :b, :σ&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,2&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;,Base.RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:σ, :weight, :bias, :stride, :pad, :dilation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;,Base.RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:σ, :weight, :bias, :stride, :pad, :dilation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;,Base.RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:σ, :weight, :bias, :stride, :pad, :dilation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}}}}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ため、&lt;a href=&#34;https://github.com/FluxML/Flux.jl/blob/v0.10.0/src/optimise/train.jl#L13&#34;&gt;&lt;code&gt;update!&lt;/code&gt;&lt;/a&gt; を使ってモデルパラメータを更新しようとすると、
implicitに書く必要がある。このあたりは、将来的に変わっていく可能性もありそう。&lt;/p&gt;
&lt;h3 id=&#34;zero_grad-が不要に&#34;&gt;zero_grad! が不要に&lt;/h3&gt;
&lt;p&gt;DCGANでDiscriminator, Generatorを交互に学習させる時、TrackerではDiscriminatorを学習させた後
&lt;code&gt;zero_grad!&lt;/code&gt; 使ってを勾配を0にしないと正しく学習されなかった
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/111#discussion_r341396388&#34;&gt;https://github.com/FluxML/model-zoo/pull/111#discussion_r341396388&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/111#discussion_r341847127&#34;&gt;https://github.com/FluxML/model-zoo/pull/111#discussion_r341847127&lt;/a&gt;&lt;br&gt;
が、Zygote.jlではその必要がなくなっている。
v0.9.0でこれに気づかず正しく学習が進まず苦戦したので、この修正はありがたい。&lt;/p&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Chain(d1, d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pall &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(c)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(c(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, pall)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p1)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p2)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# zero out for next case&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zero_grad!&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grad&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(p1))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zero_grad!&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grad&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(p2))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p1)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zero_grad!&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grad&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(p2))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p2)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-6.40395 -5.80043&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-4.58864&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-15.8992&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-6.40395 -5.80043&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-15.8992&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-9.17728&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;20.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-6.40395 -5.80043&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-15.8992&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-4.58864&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上のCase2のような状況を防ぐために、Case3のように途中に&lt;code&gt;zero_grad!&lt;/code&gt;を挟む必要があった。
一方、v0.10.0は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Chain(d1, d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pall &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(c)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(c(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gradient(loss, pall)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gradient(loss, p1)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gradient(loss, p2)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;9.715003&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3.7775292 4.41461&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-5.8413825&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;9.715003&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3.7775292 4.41461&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-5.8413825&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と正しく計算できる。&lt;/p&gt;
&lt;h2 id=&#34;fluxistraining&#34;&gt;Flux.istraining()&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;testmode!&lt;/code&gt; が廃止されて &lt;code&gt;istraining&lt;/code&gt; になった。&lt;code&gt;@eval Flux.istraining() = true&lt;/code&gt; と &lt;code&gt;@eval Flux.istraining() = false&lt;/code&gt; で切り替えると思われるが正直よく分かっていない。&lt;br&gt;
今までモデル単位で設定していたのがグローバルな設定となり、機能性について&lt;br&gt;
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/909&#34;&gt;Limitation of &lt;code&gt;Flux.istraining()&lt;/code&gt; #909&lt;/a&gt;&lt;br&gt;
このようなissueが立っているのでここも変更の可能性がありそう。&lt;/p&gt;
&lt;p&gt;以下は他に気づいた点。&lt;/p&gt;
&lt;h2 id=&#34;常にfloat32を使う&#34;&gt;常にFloat32を使う&lt;/h2&gt;
&lt;p&gt;これはバージョンは関係ない話で、
&lt;a href=&#34;https://fluxml.ai/Flux.jl/stable/performance/#Don&#39;t-use-more-precision-than-you-need.-1&#34;&gt;Don&amp;rsquo;t use more precision than you need.&lt;/a&gt; には、必ずしも &lt;code&gt;Float64&lt;/code&gt; を使う必要はなく、 &lt;code&gt;Float32&lt;/code&gt; を使えば良いとある。&lt;/p&gt;
&lt;p&gt;何も考えずにJuliaで実数型を使うと &lt;code&gt;Float64&lt;/code&gt; になるので、明示的に &lt;code&gt;Float32&lt;/code&gt; を使う意識が必要。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Float64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 2.0, 3.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3-element Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 3.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.0f0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Float32
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 2.0, 3.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3-element Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 3.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これと関連して、&lt;a href=&#34;https://fluxml.ai/Flux.jl/stable/performance/#Make-sure-your-activation-and-loss-functions-preserve-the-type-of-their-inputs-1&#34;&gt;Make sure your activation and loss functions preserve the type of their inputs&lt;/a&gt;
に書いてあることではあるが、&lt;code&gt;Float64&lt;/code&gt; と &lt;code&gt;Float32&lt;/code&gt; の変換が起こらないようにする。&lt;/p&gt;
&lt;p&gt;例えば、&lt;code&gt;Float32&lt;/code&gt; を使ってモデル構築をしているのに、&lt;code&gt;leakyrelu&lt;/code&gt; の勾配を変更して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;leakyrelu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と書いてしまうと &lt;code&gt;0.2&lt;/code&gt; の型が &lt;code&gt;Float64&lt;/code&gt; であるため、型の変換が行われて激烈に遅くなる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;leakyrelu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とするのが良い。自分は最初これを知らず前者のように書いてしまい、一向に計算が終わらなくなってしまい時間を浪費した。
&lt;code&gt;logitbinarycrossentropy&lt;/code&gt; に &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; ではなく &lt;code&gt;0f0&lt;/code&gt;, &lt;code&gt;1f0&lt;/code&gt;を渡したのも同様の理由。&lt;/p&gt;
&lt;h2 id=&#34;生成結果&#34;&gt;生成結果&lt;/h2&gt;
&lt;p&gt;MNISTを使って、バッチサイズ128、30エポック(14,000イテレーション)回した結果、&lt;/p&gt;
&lt;p&gt;iterations = 0&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_000000.png&#34; alt=&#34;0 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 1,000&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_001000.png&#34; alt=&#34;1,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 2,500&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_002500.png&#34; alt=&#34;2,500 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 5,000&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_005000.png&#34; alt=&#34;5,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 10,000&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_010000.png&#34; alt=&#34;10,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 14,000 (最後)&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_014000.png&#34; alt=&#34;14,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;アニメーション&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_animation.gif&#34; alt=&#34;Generated digits&#34;&gt;&lt;/p&gt;
&lt;p&gt;損失関数&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_loss.png&#34; alt=&#34;loss&#34;&gt;&lt;/p&gt;
&lt;p&gt;と数字っぽい画像が無事に生成できた。&lt;/p&gt;
&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;
&lt;p&gt;Google Colaboratory上でお気楽に環境やモデル構築ができるTensorflowに比べるとFlux.jlは環境構築やリファレンスの少なさで苦労することはあるかもしれないが、
開発はアクティブに行われているので、今後の発展が楽しみである。自分も、また色々試してみたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaの単位行列</title>
      <link>https://matsueushi.github.io/posts/julia-identity/</link>
      <pubDate>Mon, 02 Sep 2019 01:26:23 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-identity/</guid>
      <description>&lt;p&gt;何かと必要になる単位行列だが、Julia v1.0以降だと &lt;code&gt;LinearAlgebra&lt;/code&gt; をインポートして &lt;code&gt;Matrix&lt;/code&gt; と &lt;code&gt;I&lt;/code&gt; の組み合わせで作成するのが楽なようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;(I, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2×2 Array{Bool,2}:
  true  false
 false   true
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}(I, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2×2 Array{Int64,2}:
 1  0
 0  1
&lt;/code&gt;&lt;/pre&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;2×2 Array{Float64,2}:
 1.0  0.0
 0.0  1.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;MvNormal&lt;/code&gt; の分散を単位行列にしたいときは、 &lt;code&gt;I&lt;/code&gt; だけで大丈夫。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MvNormal([&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], I)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;IsoNormal(
dim: 2
μ: [3.0, 4.0]
Σ: [1.0 0.0; 0.0 1.0]
)
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;p&gt;参考&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://stackoverflow.com/questions/57270276/identity-matrix-in-julia&#34;&gt;https://stackoverflow.com/questions/57270276/identity-matrix-in-julia&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.reddit.com/r/Julia/comments/9cfosj/identity_matrix_in_julia_v10/&#34;&gt;https://www.reddit.com/r/Julia/comments/9cfosj/identity_matrix_in_julia_v10/&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>K-平均アルゴリズム</title>
      <link>https://matsueushi.github.io/posts/clustering-kmean/</link>
      <pubDate>Thu, 22 Aug 2019 00:04:58 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/clustering-kmean/</guid>
      <description>&lt;p&gt;最近なかなか統計モデルに取り組む時間が十分捻出できていないが、「&lt;a href=&#34;http://bookclub.kodansha.co.jp/product?item=0000147666&#34;&gt;ノンパラメトリックベイズ 点過程と統計的機械学習の数理&lt;/a&gt;」に入門を開始した。&lt;/p&gt;
&lt;p&gt;ノンパラベイズに到達する前のデータ点をクラスに分類するクラスタリングの段階で出てきた、\(K\)-平均アルゴリズム(&lt;a href=&#34;https://ja.wikipedia.org/wiki/K%E5%B9%B3%E5%9D%87%E6%B3%95&#34;&gt;Wikipedia&lt;/a&gt;) を実装したので記録。使っているのはいつものようにJulia。&lt;/p&gt;
&lt;p&gt;\(K\)-平均アルゴリズムではすでにクラス数 \(K \) は given として計算を進めていく。実装したアルゴリズムは本を参考にして下のようにした。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;データ点を \( \mathbf{x}_i \in \R^d, i = 1, \ldots, n \), クラスタリングにより決定される、
各クラスを代表する点を \(\boldsymbol{\mu}_k \in \R^d, k = 1, 2, \ldots, K \) とする。&lt;/p&gt;
&lt;p&gt;各データ点 \( x_i \) が属するクラスを \( z_i \in \{ 1, 2, \ldots, K \}\) とすると、
\( K \)-平均法では、
各データ点は \( (\boldsymbol{\mu}_k)_{k=1}^K \) のなかで一番(平方ユークリッド)距離が近い点が代表するクラスに分類されるので、
$$
z_i = \argmin_k || \mathbf{x}_i - \boldsymbol{\mu}_k||^2
$$
となる。&lt;/p&gt;
&lt;p&gt;アルゴリズムは、目的関数&lt;/p&gt;
&lt;p&gt;$$
f((z_i)_{i=1}^n, (\boldsymbol{\mu}_k)_{k=1}^K) = \sum_{i=1}^n || \mathbf{x}_i - \boldsymbol{\mu}_{z_i} ||^2
$$&lt;/p&gt;
&lt;p&gt;が最小となるように \( (z_i)_{i=1}^n, (\boldsymbol{\mu}_k)_{k=1}^K \) を更新していく。&lt;/p&gt;
&lt;h3 id=&#34;アルゴリズム&#34;&gt;アルゴリズム&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;\( (z_i)_{i=1}^n \) を乱数を用いて初期化する。集合 \( \{ z_i \mid i = 1, \ldots, n  \} \) の個数が \( K \) ではない場合、個数が \( K \)になるまで
\( (z_i)_{i=1}^n \) を乱数を用いて再初期化する&lt;/li&gt;
&lt;li&gt;$$
\boldsymbol{\mu}_k = \frac{1}{\sharp \{i \mid z_i = k \}} \sum_{i, z_i=k} \mathbf{x}_i
$$
と代表点の更新を行う&lt;/li&gt;
&lt;li&gt;以下のアルゴリズムを、 \( (z_i)_{i=1}^n, (\boldsymbol{\mu}_k)_{k=1}^K \) を更新することによる目的関数 \( f \) の減少が閾値以下になるまで繰り返す
&lt;ol&gt;
&lt;li&gt;\( z_i = \argmin_k || \mathbf{x}_i - \boldsymbol{\mu}_k||^2, i = 1, \ldots, n \) とラベリングの更新を行う&lt;/li&gt;
&lt;li&gt;集合 \( \{ z_i \mid i = 1, \ldots, n  \} \) の個数が \( K \) ではない場合(=分類されるクラスが減少してしまった場合)、最初に戻って \( (z_i)_{i=1}^n \) の初期化からやり直す&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代表点の位置によっては分類されたクラスの数が当初設定した \( K \)より小さくなってしまうことがあり、
そのまま計算を行うと、\( \boldsymbol{\mu}_k \) のいずれかが &lt;code&gt;NaN&lt;/code&gt; になって計算できないので、
\( K \) を置き換えるか、ラベルを振り直すというのがすぐに思いつく方法だが、今回は後者の方法を採用した。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;使ったデータは &lt;a href=&#34;https://github.com/cstjean/ScikitLearn.jl&#34;&gt;ScikitLearn.jl&lt;/a&gt; で作成。
下の図のような三種類のパターン (&lt;code&gt;noisy_circles&lt;/code&gt;, &lt;code&gt;noisy_moons&lt;/code&gt;, &lt;code&gt;blobs&lt;/code&gt;) を用意して、サンプル点は1500個。
&lt;a href=&#34;https://github.com/cstjean/ScikitLearn.jl/blob/master/examples/Clustering_Comparison.ipynb&#34;&gt;このページ&lt;/a&gt; が参考になる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; ScikitLearn
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Statistics
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Printf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Random
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@sk_import&lt;/span&gt; datasets&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; (make_circles, make_moons, make_blobs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n_samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noisy_circles &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_circles(n_samples&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n_samples, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                             factor&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;.5&lt;/span&gt;, noise&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;.05&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noisy_moons &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_moons(n_samples&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n_samples, noise&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;.05&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;blobs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; make_blobs(n_samples&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;n_samples, random_state&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; data &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; [noisy_circles, noisy_moons, blobs]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    points, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(plts, scatter(points[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], points[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, mc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;label))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(plts&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;400&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/clustering-kmean_dataset.png&#34; alt=&#34;Dataset&#34;&gt;&lt;/p&gt;
&lt;p&gt;本体の実装はこんな感じで、&lt;code&gt;dist&lt;/code&gt; で \( f \) の値、 &lt;code&gt;dist_change&lt;/code&gt; で \( f \) の変化を保持。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KMean&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    points&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    K&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    μs&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dist&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    dist_change&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; KMean(points&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}, K&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n_points &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(points, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    init_zs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        init_zs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;K, n_points)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(&lt;span style=&#34;color:#66d9ef&#34;&gt;Set&lt;/span&gt;(init_zs)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; K
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    zs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; init_zs
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kmean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KMean(points, K, zs, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                  zeros(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, size(points, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), K), &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, typemax(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_μs!(kmean)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kmean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update_μs!(km&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KMean&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;μs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cat([mean(km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points[km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zs &lt;span style=&#34;color:#f92672&#34;&gt;.==&lt;/span&gt; i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;K]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    new_dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum((km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; reshape(km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;μs[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zs], &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dist_change &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dist &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; new_dist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new_dist
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update_zs!(km&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KMean&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    norms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum((km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;μs)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    argmin_norms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [x[&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; argmin(norms, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)][&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;while&lt;/span&gt; true
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(&lt;span style=&#34;color:#66d9ef&#34;&gt;Set&lt;/span&gt;(argmin_norms)) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;K
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        argmin_norms &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;K, size(km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; argmin_norms
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(km&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KMean&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_zs!(km)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update_μs!(km)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;それぞれのサンプルデータに対し、\( f \) の減少幅が0.1以下になるまでイテレーションを行う(最高100回)様子をアニメーションして、gifファイルに出力させると下のようになる。
Juliaはgifのアニメーションを作るのも楽でいいですね。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gifs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i, (data, K)) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; enumerate(zip([noisy_circles, noisy_moons, blobs], [&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    points, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; data
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    km &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KMean(points, K)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    anim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@animate&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; n&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; abs(km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dist_change) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;break&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        scatter(km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;points[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], mc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zs, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        plt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; scatter!(km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;μs[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], km&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;μs[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], ms&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;, mc&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:yellow&lt;/span&gt;, msw&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                       title&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Iterations=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, n))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        update!(km)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        plt
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(gifs, gif(anim, &lt;span style=&#34;color:#a6e22e&#34;&gt;@sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;clustering-kmean_&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.gif&amp;#34;&lt;/span&gt;, i), fps &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;display&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(gifs);
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果は下の通り。黄色の点が、\( (\boldsymbol{\mu}_k)_{k=1}^K \) に該当。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;noisy_circles&lt;/code&gt; と &lt;code&gt;noisy_moons&lt;/code&gt; では次のような結果で、
代表点からの距離でクラスタリングするならばまあそうなるだろう、という結果。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/clustering-kmean_circles.gif&#34; alt=&#34;noisy circles&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/clustering-kmean_moons.gif&#34; alt=&#34;noisy moons&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;blobs&lt;/code&gt; では一見うまくいくように見えるが、&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/clustering-kmean_blobs_1.gif&#34; alt=&#34;blob 成功例&#34;&gt;&lt;/p&gt;
&lt;p&gt;乱数による初期化次第で、下のように期待とは違う場所に収束することも起こり得る。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/clustering-kmean_blobs_2.gif&#34; alt=&#34;blob 失敗例&#34;&gt;&lt;/p&gt;
&lt;p&gt;次は混合ガウスモデルのギブスサンプリングかな。無限次元への扉は遠い&amp;hellip;&lt;/p&gt;
&lt;p&gt;Jupyter Notebook (アニメーションは表示されない):&lt;br&gt;
&lt;a href=&#34;https://github.com/matsueushi/notebook_blog/blob/master/clustering.ipynb&#34;&gt;https://github.com/matsueushi/notebook_blog/blob/master/clustering.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaのガウス過程ライブラリGaussianProcesses.jlを使う(ハイパーパラメーター推定)</title>
      <link>https://matsueushi.github.io/posts/gaussianprocess-jl-2/</link>
      <pubDate>Sun, 04 Aug 2019 11:04:13 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gaussianprocess-jl-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../gaussianprocess-jl/&#34;&gt;前回&lt;/a&gt; の続き。GaussianProcesses.jlを使ってガウス過程回帰のハイパーパラメータ推定を行ってみる。
「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」の図3.20(a)を例とする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xxs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;yys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter(xxs, yys)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip8400&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip8400)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip8401&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip8400)&#34; points=&#34;
161.394,1503.47 2321.26,1503.47 2321.26,47.2441 161.394,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip8402&#34;&gt;
    &lt;rect x=&#34;161&#34; y=&#34;47&#34; width=&#34;2161&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  513.609,1503.47 513.609,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1095.78,1503.47 1095.78,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1677.96,1503.47 1677.96,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2260.13,1503.47 2260.13,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,1290.54 2321.26,1290.54 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,1032.95 2321.26,1032.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,775.359 2321.26,775.359 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,517.771 2321.26,517.771 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,260.183 2321.26,260.183 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1503.47 161.394,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  513.609,1503.47 513.609,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1095.78,1503.47 1095.78,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1677.96,1503.47 1677.96,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2260.13,1503.47 2260.13,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1290.54 193.792,1290.54 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1032.95 193.792,1032.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,775.359 193.792,775.359 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,517.771 193.792,517.771 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,260.183 193.792,260.183 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 513.609, 1557.47)&#34; x=&#34;513.609&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1095.78, 1557.47)&#34; x=&#34;1095.78&#34; y=&#34;1557.47&#34;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1677.96, 1557.47)&#34; x=&#34;1677.96&#34; y=&#34;1557.47&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2260.13, 1557.47)&#34; x=&#34;2260.13&#34; y=&#34;1557.47&#34;&gt;3&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 1308.04)&#34; x=&#34;137.394&#34; y=&#34;1308.04&#34;&gt;0.9&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 1050.45)&#34; x=&#34;137.394&#34; y=&#34;1050.45&#34;&gt;1.2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 792.859)&#34; x=&#34;137.394&#34; y=&#34;792.859&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 535.271)&#34; x=&#34;137.394&#34; y=&#34;535.271&#34;&gt;1.8&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 277.683)&#34; x=&#34;137.394&#34; y=&#34;277.683&#34;&gt;2.1&lt;/text&gt;
&lt;/g&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;222.522&#34; cy=&#34;1462.26&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;222.522&#34; cy=&#34;1462.26&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;804.696&#34; cy=&#34;517.771&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;804.696&#34; cy=&#34;517.771&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1095.78&#34; cy=&#34;603.634&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;1095.78&#34; cy=&#34;603.634&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1328.65&#34; cy=&#34;88.4582&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;1328.65&#34; cy=&#34;88.4582&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;2260.13&#34; cy=&#34;1204.67&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;2260.13&#34; cy=&#34;1204.67&#34; r=&#34;14&#34;/&gt;
&lt;polygon clip-path=&#34;url(#clip8400)&#34; points=&#34;
1958.43,251.724 2249.26,251.724 2249.26,130.764 1958.43,130.764 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1958.43,251.724 2249.26,251.724 2249.26,130.764 1958.43,130.764 1958.43,251.724 
  &#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8400)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;2066.43&#34; cy=&#34;191.244&#34; r=&#34;25&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8400)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;2066.43&#34; cy=&#34;191.244&#34; r=&#34;21&#34;/&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:start;&#34; transform=&#34;rotate(0, 2150.43, 208.744)&#34; x=&#34;2150.43&#34; y=&#34;208.744&#34;&gt;y1&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;
&lt;p&gt;平均0のガウスカーネルのガウス過程に(ノイズ項込みで)フィッティングさせるのは非常に簡単で、&lt;code&gt;optimize!&lt;/code&gt; を呼べば良いだけ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GP(xxs, yys, MeanZero(), SE(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;optimize!(gp)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: L-BFGS
 * Starting Point: [-2.0,0.0,0.0]
 * Minimizer: [-1.250611250087999,0.5939445695924219, ...]
 * Minimum: 5.464078e+00
 * Iterations: 10
 * Convergence: true
   * |x - x&amp;#39;| ≤ 0.0e+00: false 
     |x - x&amp;#39;| = 1.80e-09 
   * |f(x) - f(x&amp;#39;)| ≤ 0.0e+00 |f(x)|: false
     |f(x) - f(x&amp;#39;)| = 1.63e-16 |f(x)|
   * |g(x)| ≤ 1.0e-08: true 
     |g(x)| = 1.23e-14 
   * Stopped by an increasing objective: false
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 26
 * Gradient Calls: 26
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;パラメーターを確認すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;print(gp)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;GP Exact object:
 Dim = 1
 Number of observations = 5
 Mean function:
   Type: MeanZero, Params: Float64[]
 Kernel:
   Type: SEIso{Float64}, Params: [0.593945, 0.233886]
 Input observations = 
[-0.5 0.5 1.0 1.4 3.0]
 Output observations = [0.7, 1.8, 1.7, 2.3, 1.0]
 Variance of observation noise = 0.08198471101193598
 Marginal Log-Likelihood = -5.464
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;「ガウス過程と機械学習」では、カーネルは
$$
k(\mathbf{x}, \mathbf{x}^\prime | \bm{\theta}) = \theta_1 \exp \left( - \frac{|\mathbf{x} - \mathbf{x}^\prime|^2}{\theta_2}\right) + \theta_3 \delta(\mathbf{x}, \mathbf{x}^\prime)
$$
となっていて、推定結果は \((\theta_1, \theta_2, \theta_3)=(1.596,6.560,0.082)\) とされている。
\(\theta_3\)は&lt;code&gt;Variance of observation noise&lt;/code&gt;の&lt;code&gt;0.08198471101193598&lt;/code&gt;とそのまま一致。
&lt;code&gt;SEIso&lt;/code&gt;のカーネル関数は
$$
k(\mathbf{x}, \mathbf{x}^\prime) = \sigma^2 \exp \left( - \frac{(\mathbf{x} - \mathbf{x}^\prime)^\top(\mathbf{x} - \mathbf{x}^\prime))}{2l^2}\right)
$$
で、パラメーターは \(l\) と \(\sigma\) の対数をとった &lt;code&gt;ll&lt;/code&gt; と &lt;code&gt;lσ&lt;/code&gt; だから
\(\theta_1 = \exp(2 * l\sigma), \theta_2=2 * \exp(2 * ll)\) という変換で対応できる。
&lt;code&gt;SEIso&lt;/code&gt; のメンバー変数 &lt;code&gt;σ2&lt;/code&gt; と &lt;code&gt;ℓ2&lt;/code&gt; を使って確認すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;theta1: &amp;#34;&lt;/span&gt;, gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;σ2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;theta2: &amp;#34;&lt;/span&gt;, gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ℓ2 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;theta1: 1.5964347486496255
theta2: 6.560299908989858
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり、同じ結果が得られている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(gp; xlabel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gp.x&amp;#34;&lt;/span&gt;, ylabel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gp.y&amp;#34;&lt;/span&gt;, legend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;false, fmt&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;:png&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip0100&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip0100)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip0101&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip0100)&#34; points=&#34;
224.386,1440.48 2321.26,1440.48 2321.26,47.2441 224.386,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip0102&#34;&gt;
    &lt;rect x=&#34;224&#34; y=&#34;47&#34; width=&#34;2098&#34; height=&#34;1394&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,1440.48 224.386,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  523.94,1440.48 523.94,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  823.493,1440.48 823.493,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1123.05,1440.48 1123.05,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1422.6,1440.48 1422.6,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1722.15,1440.48 1722.15,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2021.71,1440.48 2021.71,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2321.26,1440.48 2321.26,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,1255.7 2321.26,1255.7 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,949.501 2321.26,949.501 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,643.301 2321.26,643.301 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,337.1 2321.26,337.1 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1440.48 2321.26,1440.48 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1440.48 224.386,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1440.48 224.386,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  523.94,1440.48 523.94,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  823.493,1440.48 823.493,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1123.05,1440.48 1123.05,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1422.6,1440.48 1422.6,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1722.15,1440.48 1722.15,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2021.71,1440.48 2021.71,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2321.26,1440.48 2321.26,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1255.7 255.839,1255.7 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,949.501 255.839,949.501 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,643.301 255.839,643.301 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,337.1 255.839,337.1 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 224.386, 1494.48)&#34; x=&#34;224.386&#34; y=&#34;1494.48&#34;&gt;-0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 523.94, 1494.48)&#34; x=&#34;523.94&#34; y=&#34;1494.48&#34;&gt;0.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 823.493, 1494.48)&#34; x=&#34;823.493&#34; y=&#34;1494.48&#34;&gt;0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1123.05, 1494.48)&#34; x=&#34;1123.05&#34; y=&#34;1494.48&#34;&gt;1.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1422.6, 1494.48)&#34; x=&#34;1422.6&#34; y=&#34;1494.48&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1722.15, 1494.48)&#34; x=&#34;1722.15&#34; y=&#34;1494.48&#34;&gt;2.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2021.71, 1494.48)&#34; x=&#34;2021.71&#34; y=&#34;1494.48&#34;&gt;2.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2321.26, 1494.48)&#34; x=&#34;2321.26&#34; y=&#34;1494.48&#34;&gt;3.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 1273.2)&#34; x=&#34;200.386&#34; y=&#34;1273.2&#34;&gt;0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 967.001)&#34; x=&#34;200.386&#34; y=&#34;967.001&#34;&gt;1.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 660.801)&#34; x=&#34;200.386&#34; y=&#34;660.801&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 354.6)&#34; x=&#34;200.386&#34; y=&#34;354.6&#34;&gt;2.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:66px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1272.82, 1590.4)&#34; x=&#34;1272.82&#34; y=&#34;1590.4&#34;&gt;gp.x&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:66px; text-anchor:middle;&#34; transform=&#34;rotate(-90, 57.6, 743.863)&#34; x=&#34;57.6&#34; y=&#34;743.863&#34;&gt;gp.y&lt;/text&gt;
&lt;/g&gt;
&lt;polygon clip-path=&#34;url(#clip0102)&#34; points=&#34;
224.386,1401.05 245.567,1373.75 266.747,1346.85 287.928,1320.33 309.108,1294.21 330.289,1268.47 351.469,1243.11 372.65,1218.13 393.831,1193.49 415.011,1169.21 
  436.192,1145.25 457.372,1121.62 478.553,1098.3 499.733,1075.27 520.914,1052.54 542.094,1030.08 563.275,1007.91 584.455,986.013 605.636,964.394 626.816,943.058 
  647.997,922.013 669.178,901.269 690.358,880.841 711.539,860.746 732.719,841.005 753.9,821.641 775.08,802.681 796.261,784.155 817.441,766.095 838.622,748.534 
  859.802,731.51 880.983,715.06 902.164,699.224 923.344,684.042 944.525,669.554 965.705,655.801 986.886,642.823 1008.07,630.658 1029.25,619.341 1050.43,608.907 
  1071.61,599.385 1092.79,590.802 1113.97,583.179 1135.15,576.534 1156.33,570.877 1177.51,566.217 1198.69,562.555 1219.87,559.886 1241.05,558.204 1262.23,557.495 
  1283.41,557.742 1304.59,558.926 1325.77,561.023 1346.95,564.006 1368.14,567.848 1389.32,572.518 1410.5,577.986 1431.68,584.219 1452.86,591.185 1474.04,598.85 
  1495.22,607.181 1516.4,616.146 1537.58,625.711 1558.76,635.844 1579.94,646.514 1601.12,657.69 1622.3,669.342 1643.48,681.442 1664.66,693.961 1685.84,706.874 
  1707.02,720.157 1728.2,733.785 1749.39,747.737 1770.57,761.995 1791.75,776.54 1812.93,791.357 1834.11,806.433 1855.29,821.759 1876.47,837.326 1897.65,853.129 
  1918.83,869.168 1940.01,885.444 1961.19,901.962 1982.37,918.73 2003.55,935.762 2024.73,953.074 2045.91,970.685 2067.09,988.619 2088.27,1006.9 2109.45,1025.57 
  2130.63,1044.65 2151.82,1064.18 2173,1084.19 2194.18,1104.73 2215.36,1125.83 2236.54,1147.53 2257.72,1169.85 2278.9,1192.84 2300.08,1216.51 2321.26,1240.88 
  2321.26,589.312 2300.08,574.448 2278.9,558.891 2257.72,542.701 2236.54,525.944 2215.36,508.693 2194.18,491.024 2173,473.016 2151.82,454.75 2130.63,436.309 
  2109.45,417.773 2088.27,399.222 2067.09,380.734 2045.91,362.384 2024.73,344.244 2003.55,326.38 1982.37,308.857 1961.19,291.734 1940.01,275.067 1918.83,258.908 
  1897.65,243.303 1876.47,228.294 1855.29,213.922 1834.11,200.22 1812.93,187.221 1791.75,174.95 1770.57,163.432 1749.39,152.688 1728.2,142.733 1707.02,133.581 
  1685.84,125.242 1664.66,117.724 1643.48,111.03 1622.3,105.161 1601.12,100.116 1579.94,95.8891 1558.76,92.4731 1537.58,89.8578 1516.4,88.0303 1495.22,86.9754 
  1474.04,86.6754 1452.86,87.1103 1431.68,88.2583 1410.5,90.0956 1389.32,92.5968 1368.14,95.735 1346.95,99.4826 1325.77,103.811 1304.59,108.691 1283.41,114.095 
  1262.23,119.995 1241.05,126.363 1219.87,133.174 1198.69,140.406 1177.51,148.037 1156.33,156.05 1135.15,164.431 1113.97,173.168 1092.79,182.253 1071.61,191.682 
  1050.43,201.453 1029.25,211.568 1008.07,222.029 986.886,232.843 965.705,244.015 944.525,255.554 923.344,267.465 902.164,279.755 880.983,292.43 859.802,305.495 
  838.622,318.949 817.441,332.794 796.261,347.026 775.08,361.64 753.9,376.625 732.719,391.969 711.539,407.657 690.358,423.668 669.178,439.981 647.997,456.567 
  626.816,473.398 605.636,490.438 584.455,507.651 563.275,524.996 542.094,542.429 520.914,559.903 499.733,577.37 478.553,594.777 457.372,612.072 436.192,629.2 
  415.011,646.105 393.831,662.732 372.65,679.025 351.469,694.931 330.289,710.396 309.108,725.371 287.928,739.808 266.747,753.663 245.567,766.896 224.386,779.471 
  &#34; fill=&#34;#add8e6&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;0.5&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1090.26 245.567,1070.32 266.747,1050.25 287.928,1030.07 309.108,1009.79 330.289,989.435 351.469,969.023 372.65,948.575 393.831,928.113 415.011,907.656 
  436.192,887.227 457.372,866.847 478.553,846.537 499.733,826.321 520.914,806.22 542.094,786.256 563.275,766.453 584.455,746.832 605.636,727.416 626.816,708.228 
  647.997,689.29 669.178,670.625 690.358,652.255 711.539,634.201 732.719,616.487 753.9,599.133 775.08,582.16 796.261,565.591 817.441,549.444 838.622,533.742 
  859.802,518.502 880.983,503.745 902.164,489.49 923.344,475.753 944.525,462.554 965.705,449.908 986.886,437.833 1008.07,426.344 1029.25,415.455 1050.43,405.18 
  1071.61,395.534 1092.79,386.528 1113.97,378.174 1135.15,370.482 1156.33,363.464 1177.51,357.127 1198.69,351.48 1219.87,346.53 1241.05,342.283 1262.23,338.745 
  1283.41,335.919 1304.59,333.809 1325.77,332.417 1346.95,331.744 1368.14,331.791 1389.32,332.557 1410.5,334.041 1431.68,336.239 1452.86,339.148 1474.04,342.763 
  1495.22,347.078 1516.4,352.088 1537.58,357.784 1558.76,364.159 1579.94,371.202 1601.12,378.903 1622.3,387.252 1643.48,396.236 1664.66,405.843 1685.84,416.058 
  1707.02,426.869 1728.2,438.259 1749.39,450.212 1770.57,462.714 1791.75,475.745 1812.93,489.289 1834.11,503.327 1855.29,517.84 1876.47,532.81 1897.65,548.216 
  1918.83,564.038 1940.01,580.256 1961.19,596.848 1982.37,613.794 2003.55,631.071 2024.73,648.659 2045.91,666.535 2067.09,684.677 2088.27,703.063 2109.45,721.671 
  2130.63,740.478 2151.82,759.463 2173,778.603 2194.18,797.877 2215.36,817.261 2236.54,836.735 2257.72,856.277 2278.9,875.865 2300.08,895.478 2321.26,915.097 
  &#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;224.386&#34; cy=&#34;1133.22&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;224.386&#34; cy=&#34;1133.22&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;823.493&#34; cy=&#34;459.58&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;823.493&#34; cy=&#34;459.58&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1123.05&#34; cy=&#34;520.821&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1123.05&#34; cy=&#34;520.821&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1362.69&#34; cy=&#34;153.38&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1362.69&#34; cy=&#34;153.38&#34; r=&#34;14&#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;上だと点が端ギリギリに配置され結構見ずらい(+ガウス誤差が含まれていない？)ので、ガウス観測誤差も含めた予測結果を自分でプロットすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xtest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape(collect(range(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, stop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;, length &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;μ, σ2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; predict_y(gp, xtest)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Normal&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(μ, sqrt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(σ2))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat(map(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, p), dists)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xtest[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter!(xxs, yys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot!(xtest[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(dists), linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip1800&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip1800)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip1801&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip1800)&#34; points=&#34;
189.504,1503.47 2321.26,1503.47 2321.26,47.2441 189.504,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip1802&#34;&gt;
    &lt;rect x=&#34;189&#34; y=&#34;47&#34; width=&#34;2133&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  249.837,1503.47 249.837,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  696.746,1503.47 696.746,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1143.65,1503.47 1143.65,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1590.56,1503.47 1590.56,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2037.47,1503.47 2037.47,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1418.28 2321.26,1418.28 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1210.07 2321.26,1210.07 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1001.86 2321.26,1001.86 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,793.651 2321.26,793.651 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,585.441 2321.26,585.441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,377.232 2321.26,377.232 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,169.022 2321.26,169.022 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 189.504,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,1503.47 249.837,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  696.746,1503.47 696.746,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1143.65,1503.47 1143.65,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1590.56,1503.47 1590.56,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2037.47,1503.47 2037.47,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1418.28 221.48,1418.28 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1210.07 221.48,1210.07 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1001.86 221.48,1001.86 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,793.651 221.48,793.651 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,585.441 221.48,585.441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,377.232 221.48,377.232 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,169.022 221.48,169.022 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 249.837, 1557.47)&#34; x=&#34;249.837&#34; y=&#34;1557.47&#34;&gt;-1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 696.746, 1557.47)&#34; x=&#34;696.746&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1143.65, 1557.47)&#34; x=&#34;1143.65&#34; y=&#34;1557.47&#34;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1590.56, 1557.47)&#34; x=&#34;1590.56&#34; y=&#34;1557.47&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2037.47, 1557.47)&#34; x=&#34;2037.47&#34; y=&#34;1557.47&#34;&gt;3&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1435.78)&#34; x=&#34;165.504&#34; y=&#34;1435.78&#34;&gt;-0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1227.57)&#34; x=&#34;165.504&#34; y=&#34;1227.57&#34;&gt;0.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1019.36)&#34; x=&#34;165.504&#34; y=&#34;1019.36&#34;&gt;0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 811.151)&#34; x=&#34;165.504&#34; y=&#34;811.151&#34;&gt;1.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 602.941)&#34; x=&#34;165.504&#34; y=&#34;602.941&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 394.732)&#34; x=&#34;165.504&#34; y=&#34;394.732&#34;&gt;2.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 186.522)&#34; x=&#34;165.504&#34; y=&#34;186.522&#34;&gt;2.5&lt;/text&gt;
&lt;/g&gt;
&lt;polygon clip-path=&#34;url(#clip1802)&#34; points=&#34;
249.837,1462.26 270.151,1437.64 290.465,1413.19 310.779,1388.92 331.093,1364.88 351.407,1341.09 371.721,1317.56 392.035,1294.32 412.349,1271.38 432.663,1248.75 
  452.977,1226.44 473.291,1204.44 493.605,1182.76 513.919,1161.38 534.233,1140.31 554.547,1119.53 574.862,1099.04 595.176,1078.82 615.49,1058.87 635.804,1039.18 
  656.118,1019.75 676.432,1000.57 696.746,981.649 717.06,962.991 737.374,944.604 757.688,926.501 778.002,908.698 798.316,891.214 818.63,874.075 838.944,857.307 
  859.258,840.94 879.572,825.009 899.886,809.548 920.2,794.596 940.514,780.192 960.828,766.377 981.142,753.193 1001.46,740.681 1021.77,728.881 1042.08,717.834 
  1062.4,707.577 1082.71,698.146 1103.03,689.573 1123.34,681.889 1143.65,675.118 1163.97,669.281 1184.28,664.394 1204.6,660.469 1224.91,657.513 1245.22,655.526 
  1265.54,654.505 1285.85,654.442 1306.17,655.323 1326.48,657.13 1346.8,659.842 1367.11,663.434 1387.42,667.878 1407.74,673.142 1428.05,679.195 1448.37,686.002 
  1468.68,693.526 1488.99,701.731 1509.31,710.58 1529.62,720.038 1549.94,730.067 1570.25,740.633 1590.56,751.703 1610.88,763.244 1631.19,775.227 1651.51,787.625 
  1671.82,800.414 1692.13,813.572 1712.45,827.082 1732.76,840.93 1753.08,855.106 1773.39,869.604 1793.7,884.423 1814.02,899.567 1834.33,915.042 1854.65,930.86 
  1874.96,947.037 1895.27,963.594 1915.59,980.553 1935.9,997.941 1956.22,1015.78 1976.53,1034.11 1996.84,1052.95 2017.16,1072.32 2037.47,1092.26 2057.79,1112.78 
  2078.1,1133.89 2098.41,1155.6 2118.73,1177.91 2139.04,1200.81 2159.36,1224.3 2179.67,1248.34 2199.99,1272.9 2220.3,1297.95 2240.61,1323.44 2260.93,1349.32 
  2260.93,554.307 2240.61,549.172 2220.3,543.111 2199.99,536.114 2179.67,528.182 2159.36,519.321 2139.04,509.549 2118.73,498.89 2098.41,487.382 2078.1,475.068 
  2057.79,462.004 2037.47,448.253 2017.16,433.887 1996.84,418.983 1976.53,403.626 1956.22,387.904 1935.9,371.905 1915.59,355.722 1895.27,339.446 1874.96,323.166 
  1854.65,306.97 1834.33,290.941 1814.02,275.161 1793.7,259.704 1773.39,244.641 1753.08,230.038 1732.76,215.955 1712.45,202.446 1692.13,189.561 1671.82,177.343 
  1651.51,165.83 1631.19,155.056 1610.88,145.047 1590.56,135.827 1570.25,127.413 1549.94,119.818 1529.62,113.05 1509.31,107.114 1488.99,102.011 1468.68,97.7361 
  1448.37,94.2834 1428.05,91.6428 1407.74,89.8019 1387.42,88.7459 1367.11,88.4582 1346.8,88.9205 1326.48,90.1137 1306.17,92.0182 1285.85,94.614 1265.54,97.8816 
  1245.22,101.802 1224.91,106.357 1204.6,111.53 1184.28,117.305 1163.97,123.669 1143.65,130.61 1123.34,138.116 1103.03,146.178 1082.71,154.788 1062.4,163.938 
  1042.08,173.622 1021.77,183.832 1001.46,194.561 981.142,205.801 960.828,217.542 940.514,229.774 920.2,242.482 899.886,255.653 879.572,269.266 859.258,283.3 
  838.944,297.73 818.63,312.528 798.316,327.659 778.002,343.088 757.688,358.775 737.374,374.673 717.06,390.734 696.746,406.906 676.432,423.132 656.118,439.353 
  635.804,455.506 615.49,471.526 595.176,487.347 574.862,502.9 554.547,518.117 534.233,532.929 513.919,547.272 493.605,561.078 473.291,574.289 452.977,586.845 
  432.663,598.695 412.349,609.792 392.035,620.094 371.721,629.566 351.407,638.181 331.093,645.917 310.779,652.758 290.465,658.697 270.151,663.73 249.837,667.86 
  &#34; fill=&#34;#009af9&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;0.3&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#009af9; stroke-width:0; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,1462.26 270.151,1437.64 290.465,1413.19 310.779,1388.92 331.093,1364.88 351.407,1341.09 371.721,1317.56 392.035,1294.32 412.349,1271.38 432.663,1248.75 
  452.977,1226.44 473.291,1204.44 493.605,1182.76 513.919,1161.38 534.233,1140.31 554.547,1119.53 574.862,1099.04 595.176,1078.82 615.49,1058.87 635.804,1039.18 
  656.118,1019.75 676.432,1000.57 696.746,981.649 717.06,962.991 737.374,944.604 757.688,926.501 778.002,908.698 798.316,891.214 818.63,874.075 838.944,857.307 
  859.258,840.94 879.572,825.009 899.886,809.548 920.2,794.596 940.514,780.192 960.828,766.377 981.142,753.193 1001.46,740.681 1021.77,728.881 1042.08,717.834 
  1062.4,707.577 1082.71,698.146 1103.03,689.573 1123.34,681.889 1143.65,675.118 1163.97,669.281 1184.28,664.394 1204.6,660.469 1224.91,657.513 1245.22,655.526 
  1265.54,654.505 1285.85,654.442 1306.17,655.323 1326.48,657.13 1346.8,659.842 1367.11,663.434 1387.42,667.878 1407.74,673.142 1428.05,679.195 1448.37,686.002 
  1468.68,693.526 1488.99,701.731 1509.31,710.58 1529.62,720.038 1549.94,730.067 1570.25,740.633 1590.56,751.703 1610.88,763.244 1631.19,775.227 1651.51,787.625 
  1671.82,800.414 1692.13,813.572 1712.45,827.082 1732.76,840.93 1753.08,855.106 1773.39,869.604 1793.7,884.423 1814.02,899.567 1834.33,915.042 1854.65,930.86 
  1874.96,947.037 1895.27,963.594 1915.59,980.553 1935.9,997.941 1956.22,1015.78 1976.53,1034.11 1996.84,1052.95 2017.16,1072.32 2037.47,1092.26 2057.79,1112.78 
  2078.1,1133.89 2098.41,1155.6 2118.73,1177.91 2139.04,1200.81 2159.36,1224.3 2179.67,1248.34 2199.99,1272.9 2220.3,1297.95 2240.61,1323.44 2260.93,1349.32 
  &#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;473.291&#34; cy=&#34;918.577&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;473.291&#34; cy=&#34;918.577&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;920.2&#34; cy=&#34;460.516&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;920.2&#34; cy=&#34;460.516&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1143.65&#34; cy=&#34;502.157&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;1143.65&#34; cy=&#34;502.157&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1322.42&#34; cy=&#34;252.306&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;1322.42&#34; cy=&#34;252.306&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;2037.47&#34; cy=&#34;793.651&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;2037.47&#34; cy=&#34;793.651&#34; r=&#34;14&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; stroke-dasharray=&#34;32, 20&#34; points=&#34;
  249.837,1065.06 270.151,1050.69 290.465,1035.94 310.779,1020.84 331.093,1005.4 351.407,989.633 371.721,973.563 392.035,957.207 412.349,940.587 432.663,923.724 
  452.977,906.642 473.291,889.365 493.605,871.918 513.919,854.327 534.233,836.62 554.547,818.824 574.862,800.968 595.176,783.083 615.49,765.197 635.804,747.342 
  656.118,729.549 676.432,711.85 696.746,694.277 717.06,676.862 737.374,659.638 757.688,642.638 778.002,625.893 798.316,609.437 818.63,593.301 838.944,577.519 
  859.258,562.12 879.572,547.137 899.886,532.6 920.2,518.539 940.514,504.983 960.828,491.96 981.142,479.497 1001.46,467.621 1021.77,456.356 1042.08,445.728 
  1062.4,435.758 1082.71,426.467 1103.03,417.876 1123.34,410.002 1143.65,402.864 1163.97,396.475 1184.28,390.85 1204.6,386 1224.91,381.935 1245.22,378.664 
  1265.54,376.194 1285.85,374.528 1306.17,373.67 1326.48,373.622 1346.8,374.381 1367.11,375.946 1387.42,378.312 1407.74,381.472 1428.05,385.419 1448.37,390.142 
  1468.68,395.631 1488.99,401.871 1509.31,408.847 1529.62,416.544 1549.94,424.942 1570.25,434.023 1590.56,443.765 1610.88,454.146 1631.19,465.141 1651.51,476.728 
  1671.82,488.878 1692.13,501.566 1712.45,514.764 1732.76,528.442 1753.08,542.572 1773.39,557.123 1793.7,572.064 1814.02,587.364 1834.33,602.991 1854.65,618.915 
  1874.96,635.102 1895.27,651.52 1915.59,668.138 1935.9,684.923 1956.22,701.843 1976.53,718.868 1996.84,735.966 2017.16,753.105 2037.47,770.256 2057.79,787.39 
  2078.1,804.477 2098.41,821.49 2118.73,838.4 2139.04,855.182 2159.36,871.809 2179.67,888.258 2199.99,904.505 2220.3,920.528 2240.61,936.305 2260.93,951.816 
  &#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;ノートブック:
&lt;a href=&#34;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&#34;&gt;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaのガウス過程ライブラリGaussianProcesses.jlを使う(基本編)</title>
      <link>https://matsueushi.github.io/posts/gaussianprocess-jl/</link>
      <pubDate>Wed, 17 Jul 2019 21:22:00 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gaussianprocess-jl/</guid>
      <description>&lt;p&gt;Juliaのガウス過程ライブラリ &lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl&#34;&gt;GaussianProcesses.jl&lt;/a&gt; を触ってみる。
チュートリアルはまだ未整備のようなので、&lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl/tree/master/notebooks&#34;&gt;サンプルノートブック&lt;/a&gt;と&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」などを参考にしながらやっていく。
Juliaのはv1.1.0, GaussianProcesses.jlはv0.9.0を使っている。&lt;/p&gt;
&lt;p&gt;インストールはいつものように&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GaussianProcesses&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;カーネル関数&#34;&gt;カーネル関数&lt;/h3&gt;
&lt;p&gt;すでに多くの種類のカーネル関数が&lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/kernels.html&#34;&gt;実装されており&lt;/a&gt;、
ガウスカーネル、線形カーネル、指数カーネル、周期カーネル、Matérnカーネルなど、
「ガウス過程と機械学習」に出てきたカーネル関数はほぼカバーされているようだ。&lt;/p&gt;
&lt;p&gt;全て見ていくとキリがないのでいくつか基本的な部分だけ確認することにする。&lt;/p&gt;
&lt;p&gt;ガウスカーネルのカーネル関数は「ガウス過程と機械学習」では
$$
k(\mathbf{x}, \mathbf{x}^\prime) = \theta_1 \exp \left( - \frac{|\mathbf{x} - \mathbf{x}^\prime|^2}{\theta_2}\right)
$$&lt;/p&gt;
&lt;p&gt;となっているが、GaussianProcesses.jlでこれに対応するのは [&lt;code&gt;GaussianProcesses.SEIso&lt;/code&gt;]
(&lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/kernels.html#GaussianProcesses.SEIso&#34;&gt;http://stor-i.github.io/GaussianProcesses.jl/latest/kernels.html#GaussianProcesses.SEIso&lt;/a&gt;) である。
関数のパラメトライズは対数スケールとなっているため十分注意する必要があり、カーネル関数 &lt;code&gt;SEIso(ll::T, lσ::T)&lt;/code&gt; は、
\(\sigma = \log (\) &lt;code&gt;lσ&lt;/code&gt; \()\), \(l = \log (\) &lt;code&gt;ll&lt;/code&gt; \()\) とした時に&lt;/p&gt;
&lt;p&gt;$$
k(\mathbf{x}, \mathbf{x}^\prime) = \sigma^2 \exp \left( - \frac{(\mathbf{x} - \mathbf{x}^\prime)^\top(\mathbf{x} - \mathbf{x}^\prime))}{2l^2}\right)
$$&lt;/p&gt;
&lt;p&gt;だから、\(
k(\mathbf{x}, \mathbf{x}^\prime) = \exp \left( - |\mathbf{x} - \mathbf{x}^\prime|^2\right)
\) は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rbf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SEIso(log(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に対応している。「ガウス過程と機械学習」の pp.69 のように、\( (x_1, x_2, x_3, x_4) = (1, 2, 3, 4) \) とした時の共分散行列を求める。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cov(rbf, xs, xs)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このようにすると &lt;code&gt;xs&lt;/code&gt; の全体が1要素として認識されてしまい&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;1.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;が帰ってきてダメなので、&lt;code&gt;reshape&lt;/code&gt; で 1×4 Arrayに変換して次のようにする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape([&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cov(rbf, xs, xs)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;4×4 Array{Float64,2}:
 1.0         0.367879   0.0183156  0.00012341
 0.367879    1.0        0.367879   0.0183156 
 0.0183156   0.367879   1.0        0.367879  
 0.00012341  0.0183156  0.367879   1.0       
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり本と同様の結果が得られた。ちなみに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cov(rbf, xs, xs)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;InexactError: Int64(0.3678794411714422)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり動かないので、&lt;code&gt;xs&lt;/code&gt; を &lt;code&gt;Real&lt;/code&gt; のベクターにする。&lt;/p&gt;
&lt;h3 id=&#34;ガウス過程からのサンプル&#34;&gt;ガウス過程からのサンプル&lt;/h3&gt;
&lt;p&gt;次はこのカーネル関数で定義したガウス過程からサンプリングを行う。GaussianProcesses.jl でガウス過程を呼び出すメソッド &lt;code&gt;GPE&lt;/code&gt; は、
学習データからフィッティングを行うものと行わないものの両方が用意されている。&lt;/p&gt;
&lt;p&gt;すでにカーネル関数を定義したので、使うのはフィッティングしない方。
ちなみに &lt;code&gt;GPE&lt;/code&gt; は観測ノイズを考慮しないノイズフリーのガウス過程のフィッティングをするメソッドで、観測ノイズも考慮したフィッティングを行いたければ &lt;code&gt;GP&lt;/code&gt; を使う。
この辺りは &lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/gp.html&#34;&gt;公式ドキュメント&lt;/a&gt; を見た方が良いかもしれない。&lt;/p&gt;
&lt;p&gt;先ほどのRBFカーネルで定まるガウス過程を定義し、サンプルを5つ取得する。&lt;/p&gt;
&lt;p&gt;コード上ではカーネルのみを指定して平均は与えていないが、&lt;code&gt;GPE&lt;/code&gt; の &lt;code&gt;mean&lt;/code&gt; 引数のデフォルトが &lt;code&gt;MeanZero()&lt;/code&gt; なので平均0のガウス過程を考えていることになる。
&lt;code&gt;mean&lt;/code&gt; 引数を変更すれば様々な平均関数のガウス過程を考えられる(はず、未確認)。&lt;/p&gt;
&lt;p&gt;サンプルは &lt;code&gt;rand&lt;/code&gt; で行うことができ、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_rbf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GPE(kernel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rbf)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(gp_rbf, xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs, samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip5700&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip5700)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip5701&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip5700)&#34; points=&#34;
149.361,1503.47 2321.26,1503.47 2321.26,47.2441 149.361,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip5702&#34;&gt;
    &lt;rect x=&#34;149&#34; y=&#34;47&#34; width=&#34;2173&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1274.16 2321.26,1274.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1013.85 2321.26,1013.85 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,753.535 2321.26,753.535 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,493.225 2321.26,493.225 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,232.915 2321.26,232.915 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 149.361,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1274.16 181.939,1274.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1013.85 181.939,1013.85 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,753.535 181.939,753.535 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,493.225 181.939,493.225 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,232.915 181.939,232.915 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 415.726, 1557.47)&#34; x=&#34;415.726&#34; y=&#34;1557.47&#34;&gt;-20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 825.518, 1557.47)&#34; x=&#34;825.518&#34; y=&#34;1557.47&#34;&gt;-10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1235.31, 1557.47)&#34; x=&#34;1235.31&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1645.1, 1557.47)&#34; x=&#34;1645.1&#34; y=&#34;1557.47&#34;&gt;10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2054.89, 1557.47)&#34; x=&#34;2054.89&#34; y=&#34;1557.47&#34;&gt;20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1291.66)&#34; x=&#34;125.361&#34; y=&#34;1291.66&#34;&gt;-2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1031.35)&#34; x=&#34;125.361&#34; y=&#34;1031.35&#34;&gt;-1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 771.035)&#34; x=&#34;125.361&#34; y=&#34;771.035&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 510.725)&#34; x=&#34;125.361&#34; y=&#34;510.725&#34;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 250.415)&#34; x=&#34;125.361&#34; y=&#34;250.415&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#009af9; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,831.137 214.927,790.548 219.025,742.502 223.123,689.694 227.221,637.638 231.319,591.07 235.417,550.919 239.515,521.87 243.613,502.767 247.711,494.4 
  251.809,493.271 255.907,497.457 260.005,505.377 264.102,514.375 268.2,524.138 272.298,535.915 276.396,547.529 280.494,560.969 284.592,576.636 288.69,594.525 
  292.788,613.636 296.886,635.79 300.984,660.585 305.082,688.316 309.18,719.553 313.278,753.95 317.375,791.871 321.473,831.795 325.571,872.203 329.669,910.694 
  333.767,945.23 337.865,971.777 341.963,989.979 346.061,998.839 350.159,996.809 354.257,985.633 358.355,966.198 362.453,940.389 366.551,911.652 370.648,881.194 
  374.746,852.216 378.844,825.979 382.942,804.151 387.04,787.138 391.138,775.698 395.236,769.498 399.334,768.645 403.432,772.668 407.53,782.563 411.628,798.857 
  415.726,821.872 419.824,852.223 423.921,891.68 428.019,937.324 432.117,990.032 436.215,1043.69 440.313,1098.64 444.411,1147.53 448.509,1187.7 452.607,1216.45 
  456.705,1231.82 460.803,1234.48 464.901,1225.73 468.999,1209.79 473.097,1190.78 477.194,1173.04 481.292,1159.96 485.39,1154.2 489.488,1156.13 493.586,1166.66 
  497.684,1182.49 501.782,1201.36 505.88,1220.82 509.978,1235.67 514.076,1243.09 518.174,1239.25 522.272,1221.7 526.37,1189.76 530.467,1142.99 534.565,1082.48 
  538.663,1010.5 542.761,931.402 546.859,851.362 550.957,772.808 555.055,704.071 559.153,647.563 563.251,608.748 567.349,589.164 571.447,588.68 575.545,606.304 
  579.643,638.915 583.74,682.951 587.838,733.063 591.936,784.895 596.034,833.605 600.132,876.44 604.23,909.45 608.328,933.023 612.426,945.067 616.524,948.194 
  620.622,944.523 624.72,936.754 628.818,927.33 632.916,920.913 637.013,920.816 641.111,930.201 645.209,950.355 649.307,983.367 653.405,1027.77 657.503,1082.77 
  661.601,1144.77 665.699,1208.81 669.797,1267.84 673.895,1317.76 677.993,1352.33 682.091,1367.46 686.189,1361.13 690.286,1332.68 694.384,1284.09 698.482,1219.36 
  702.58,1143.65 706.678,1061.49 710.776,979.126 714.874,901.402 718.972,831.881 723.07,773.467 727.168,724.668 731.266,686.877 735.364,657.807 739.462,634.482 
  743.559,616.178 747.657,600.523 751.755,587.046 755.853,573.655 759.951,561.309 764.049,547.962 768.147,534.071 772.245,518.319 776.343,499.116 780.441,476.589 
  784.539,449.541 788.637,419.433 792.735,387.733 796.832,357.927 800.93,333.084 805.028,319.115 809.126,316.681 813.224,332.668 817.322,364.404 821.42,410.435 
  825.518,468.031 829.616,532.175 833.714,596.517 837.812,655.929 841.91,706.876 846.008,746.999 850.105,775.351 854.203,794.752 858.301,805.372 862.399,812.092 
  866.497,815.429 870.595,817.238 874.693,817.432 878.791,815.544 882.889,811.153 886.987,805.811 891.085,798.569 895.183,793.222 899.281,793.285 903.378,801.311 
  907.476,819.769 911.574,850.616 915.672,892.291 919.77,944.849 923.868,1002.67 927.966,1062.13 932.064,1115.93 936.162,1159.79 940.26,1189.86 944.358,1202.99 
  948.456,1197.78 952.554,1176.66 956.651,1141.68 960.749,1095.74 964.847,1043.03 968.945,988.968 973.043,935.303 977.141,884.657 981.239,841.354 985.337,805.502 
  989.435,779.911 993.533,765.291 997.631,763.759 1001.73,775.677 1005.83,801.159 1009.92,839.353 1014.02,888.875 1018.12,944.063 1022.22,1000.58 1026.32,1052.08 
  1030.41,1091.93 1034.51,1113.59 1038.61,1115.51 1042.71,1095.02 1046.81,1055.93 1050.9,1001.36 1055,937.982 1059.1,874.041 1063.2,813.756 1067.3,764.72 
  1071.39,727.726 1075.49,702.234 1079.59,687.36 1083.69,678.589 1087.78,670.919 1091.88,663.171 1095.98,653.233 1100.08,641.353 1104.18,628.994 1108.27,621.144 
  1112.37,620.535 1116.47,630.822 1120.57,655.181 1124.67,693.721 1128.76,743.535 1132.86,801.616 1136.96,862.394 1141.06,920.231 1145.16,967.561 1149.25,1001.04 
  1153.35,1016.89 1157.45,1014.25 1161.55,996.492 1165.65,965.893 1169.74,927.02 1173.84,885.79 1177.94,847.703 1182.04,814.405 1186.14,789.887 1190.23,774.866 
  1194.33,769.851 1198.43,775.779 1202.53,789.854 1206.62,811.584 1210.72,838.707 1214.82,867.551 1218.92,895.615 1223.02,919.02 1227.11,934.707 1231.21,939.793 
  1235.31,932.89 1239.41,914.169 1243.51,883.023 1247.6,842.953 1251.7,796.827 1255.8,749.796 1259.9,704.451 1264,666.476 1268.09,638.551 1272.19,622.073 
  1276.29,619.541 1280.39,627.44 1284.49,645.204 1288.58,668.961 1292.68,696.213 1296.78,724.292 1300.88,751.258 1304.97,775.939 1309.07,796.199 1313.17,812.819 
  1317.27,825.013 1321.37,832.433 1325.46,835.771 1329.56,835.318 1333.66,833.136 1337.76,831.142 1341.86,832.972 1345.95,839.973 1350.05,853.706 1354.15,874.433 
  1358.25,902.051 1362.35,934.307 1366.44,967.823 1370.54,999.154 1374.64,1024.75 1378.74,1044.14 1382.84,1052.4 1386.93,1052.58 1391.03,1044.47 1395.13,1030.77 
  1399.23,1012.67 1403.33,993.331 1407.42,972.198 1411.52,950.323 1415.62,928.705 1419.72,904.996 1423.81,877.323 1427.91,846.374 1432.01,809.952 1436.11,768.71 
  1440.21,723.471 1444.3,675.445 1448.4,625.376 1452.5,575.526 1456.6,528.321 1460.7,483.68 1464.79,443.797 1468.89,408.322 1472.99,378.563 1477.09,354.256 
  1481.19,335.959 1485.28,323.903 1489.38,319.083 1493.48,320.559 1497.58,330.279 1501.68,346.53 1505.77,369.936 1509.87,396.905 1513.97,427.083 1518.07,455.64 
  1522.16,481.694 1526.26,502.607 1530.36,516.89 1534.46,526.669 1538.56,532.979 1542.65,538.77 1546.75,547.819 1550.85,561.626 1554.95,582.478 1559.05,611.509 
  1563.14,645.461 1567.24,684.763 1571.34,723.835 1575.44,761.404 1579.54,794.514 1583.63,822.625 1587.73,846.225 1591.83,865.618 1595.93,883.372 1600.03,901.111 
  1604.12,919.309 1608.22,937.469 1612.32,954.954 1616.42,967.171 1620.51,971.777 1624.61,964.099 1628.71,941.75 1632.81,903.379 1636.91,848.17 1641,777.837 
  1645.1,697.903 1649.2,612.892 1653.3,528.638 1657.4,450.759 1661.49,384.818 1665.59,334.359 1669.69,300.733 1673.79,284.902 1677.89,284.854 1681.98,299.903 
  1686.08,327.412 1690.18,364.559 1694.28,410.371 1698.38,462.269 1702.47,518.663 1706.57,577.798 1710.67,637.226 1714.77,694.551 1718.87,748.354 1722.96,795.576 
  1727.06,836.389 1731.16,866.903 1735.26,889.903 1739.35,904.05 1743.45,910.189 1747.55,911.762 1751.65,907.917 1755.75,902.524 1759.84,896.037 1763.94,891.412 
  1768.04,887.879 1772.14,887.192 1776.24,888.82 1780.33,890.922 1784.43,893.359 1788.53,894.181 1792.63,893.397 1796.73,887.517 1800.82,879.217 1804.92,868.034 
  1809.02,854.803 1813.12,842.177 1817.22,832.573 1821.31,827.913 1825.41,829.471 1829.51,837.177 1833.61,852.243 1837.7,873.802 1841.8,898.385 1845.9,926.275 
  1850,954.503 1854.1,981.796 1858.19,1007.3 1862.29,1031.27 1866.39,1052.87 1870.49,1072 1874.59,1088.82 1878.68,1103.64 1882.78,1115.6 1886.88,1125.09 
  1890.98,1131.51 1895.08,1134.67 1899.17,1135.98 1903.27,1134.47 1907.37,1131.54 1911.47,1126.69 1915.57,1119.83 1919.66,1110.96 1923.76,1098.6 1927.86,1082.38 
  1931.96,1061.56 1936.06,1033.29 1940.15,1000.33 1944.25,961.974 1948.35,921.09 1952.45,881.651 1956.54,846.988 1960.64,820.578 1964.74,804.72 1968.84,800.997 
  1972.94,808.572 1977.03,825.02 1981.13,848.865 1985.23,876.435 1989.33,905.997 1993.43,935.678 1997.52,964.195 2001.62,991.4 2005.72,1018.24 2009.82,1042.01 
  2013.92,1062.8 2018.01,1077.79 2022.11,1083.22 2026.21,1075.86 2030.31,1053.75 2034.41,1014.45 2038.5,957.521 2042.6,884.73 2046.7,799.111 2050.8,706.091 
  2054.89,610.022 2058.99,516.949 2063.09,430.75 2067.19,355.818 2071.29,295.909 2075.38,251.416 2079.48,221.999 2083.58,208.051 2087.68,207.601 2091.78,218.536 
  2095.87,238.237 2099.97,262.093 2104.07,287.42 2108.17,308.569 2112.27,323.888 2116.36,328.434 2120.46,321.614 2124.56,303.556 2128.66,276.975 2132.76,247.29 
  2136.85,217.344 2140.95,195.267 2145.05,184.904 2149.15,188.758 2153.24,207.112 2157.34,240.327 2161.44,283.071 2165.54,333.398 2169.64,384.666 2173.73,432.176 
  2177.83,473.349 2181.93,503.598 2186.03,520.887 2190.13,524.122 2194.22,515.184 2198.32,494.559 2202.42,464.669 2206.52,431.839 2210.62,397.763 2214.71,370.155 
  2218.81,350.434 2222.91,342.162 2227.01,345.12 2231.11,359.706 2235.2,381.697 2239.3,407.204 2243.4,433.554 2247.5,456.408 2251.6,473.776 2255.69,484.758 
  2259.79,490.037 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#e26f46; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,582.111 214.927,546.56 219.025,522.087 223.123,508.129 227.221,505.603 231.319,510.657 235.417,523.318 239.515,540.128 243.613,557.863 247.711,575.621 
  251.809,592.386 255.907,606.644 260.005,618.302 264.102,626.046 268.2,631.16 272.298,631.574 276.396,628.028 280.494,618.979 284.592,604.322 288.69,583.394 
  292.788,556.186 296.886,525.065 300.984,491.74 305.082,459.818 309.18,433.544 313.278,415.726 317.375,410.691 321.473,420.104 325.571,446.195 329.669,485.966 
  333.767,537.039 337.865,596.365 341.963,657.082 346.061,716.076 350.159,766.958 354.257,806.871 358.355,833.089 362.453,844.861 366.551,842.389 370.648,828.608 
  374.746,804.75 378.844,774.84 382.942,742.211 387.04,710.724 391.138,681.865 395.236,657.77 399.334,641.225 403.432,634.024 407.53,636.356 411.628,649.355 
  415.726,673.195 419.824,706.162 423.921,746.836 428.019,791.364 432.117,835.502 436.215,876.448 440.313,908.946 444.411,931.702 448.509,943.756 452.607,944.706 
  456.705,938.315 460.803,927.931 464.901,918.019 468.999,911.472 473.097,912.24 477.194,922.35 481.292,941.202 485.39,967.042 489.488,997.075 493.586,1025.27 
  497.684,1047.76 501.782,1060.18 505.88,1059.37 509.978,1043.7 514.076,1013.14 518.174,973.118 522.272,926.828 526.37,881.979 530.467,845.791 534.565,823.02 
  538.663,818.877 542.761,834.058 546.859,867.286 550.957,912.82 555.055,965.276 559.153,1017.88 563.251,1063.49 567.349,1098.67 571.447,1121.3 575.545,1133.1 
  579.643,1134.59 583.74,1129.35 587.838,1120.5 591.936,1110.36 596.034,1098.95 600.132,1086.13 604.23,1070.88 608.328,1050.71 612.426,1026.48 616.524,998.807 
  620.622,969.7 624.72,942.814 628.818,921.834 632.916,909.187 637.013,908.247 641.111,918.265 645.209,939.438 649.307,967.192 653.405,996.939 657.503,1026.39 
  661.601,1050.03 665.699,1064.88 669.797,1071.65 673.895,1070.16 677.993,1060.95 682.091,1048.32 686.189,1034 690.286,1021.19 694.384,1008.99 698.482,997.752 
  702.58,985.053 706.678,969.472 710.776,947.633 714.874,918.218 718.972,879.134 723.07,831.877 727.168,776.987 731.266,718.558 735.364,658.939 739.462,602.6 
  743.559,552.175 747.657,510.365 751.755,478.983 755.853,458.437 759.951,446.945 764.049,445.163 768.147,450.446 772.245,462.957 776.343,479.987 780.441,501.564 
  784.539,529.349 788.637,561.81 792.735,600.048 796.832,645.014 800.93,695.072 805.028,750.367 809.126,810.665 813.224,872.206 817.322,934.119 821.42,993.871 
  825.518,1047.85 829.616,1091.99 833.714,1124.38 837.812,1141.58 841.91,1142.27 846.008,1127.88 850.105,1099.26 854.203,1059.31 858.301,1012.24 862.399,962.521 
  866.497,912.796 870.595,866.172 874.693,823.363 878.791,787.63 882.889,754.795 886.987,726.454 891.085,701.85 895.183,681.015 899.281,664.614 903.378,654.552 
  907.476,650.711 911.574,654.97 915.672,665.624 919.77,680.996 923.868,699.987 927.966,716.876 932.064,729.964 936.162,736.018 940.26,731.699 944.358,716.494 
  948.456,691.271 952.554,658.142 956.651,620.725 960.749,583.056 964.847,549.78 968.945,525.168 973.043,511.284 977.141,509.384 981.239,520.253 985.337,541.433 
  989.435,571.416 993.533,606.412 997.631,645.476 1001.73,685.084 1005.83,724.479 1009.92,763.517 1014.02,801.217 1018.12,838.245 1022.22,874.227 1026.32,908.817 
  1030.41,942.677 1034.51,973.826 1038.61,1001.83 1042.71,1026.82 1046.81,1046.32 1050.9,1060.65 1055,1069.13 1059.1,1071.48 1063.2,1068.51 1067.3,1061.44 
  1071.39,1049.67 1075.49,1034.97 1079.59,1019.13 1083.69,1004.01 1087.78,991.206 1091.88,982.827 1095.98,980.926 1100.08,985.513 1104.18,997.486 1108.27,1012.89 
  1112.37,1033.16 1116.47,1053.29 1120.57,1071.55 1124.67,1086.39 1128.76,1093.92 1132.86,1095.94 1136.96,1092.02 1141.06,1082.44 1145.16,1069.55 1149.25,1055.62 
  1153.35,1042.04 1157.45,1029.04 1161.55,1017.73 1165.65,1007.95 1169.74,998.816 1173.84,990.91 1177.94,982.433 1182.04,974.938 1186.14,967.221 1190.23,958.53 
  1194.33,948.619 1198.43,937.459 1202.53,925.018 1206.62,911.502 1210.72,896.811 1214.82,880.658 1218.92,864.472 1223.02,847.676 1227.11,829.981 1231.21,811.269 
  1235.31,788.965 1239.41,763.534 1243.51,733.913 1247.6,698.749 1251.7,660.921 1255.8,621.78 1259.9,583.427 1264,547.932 1268.09,518.455 1272.19,496.102 
  1276.29,479.744 1280.39,469.951 1284.49,464.351 1288.58,460.914 1292.68,459.987 1296.78,460.044 1300.88,462.132 1304.97,466.05 1309.07,472.987 1313.17,483.684 
  1317.27,501.189 1321.37,523.327 1325.46,552.547 1329.56,588.122 1333.66,627.876 1337.76,670.677 1341.86,713.125 1345.95,754.78 1350.05,791.068 1354.15,820.379 
  1358.25,841.579 1362.35,853.131 1366.44,856.491 1370.54,853.535 1374.64,846.909 1378.74,840.89 1382.84,839.165 1386.93,844.14 1391.03,858.507 1395.13,882.757 
  1399.23,917.198 1403.33,960.112 1407.42,1007.75 1411.52,1058.89 1415.62,1109.57 1419.72,1157.94 1423.81,1200.13 1427.91,1235.49 1432.01,1263.84 1436.11,1283.43 
  1440.21,1295.92 1444.3,1299 1448.4,1296.44 1452.5,1287.19 1456.6,1272.04 1460.7,1251.39 1464.79,1224.66 1468.89,1190.87 1472.99,1150.41 1477.09,1102.18 
  1481.19,1046.68 1485.28,986.101 1489.38,923.31 1493.48,862.226 1497.58,808.866 1501.68,767.583 1505.77,741.941 1509.87,734.838 1513.97,746.347 1518.07,774.074 
  1522.16,814.681 1526.26,861.843 1530.36,911.184 1534.46,955.594 1538.56,991.111 1542.65,1013.28 1546.75,1019.92 1550.85,1012.51 1554.95,991.24 1559.05,959.447 
  1563.14,921.425 1567.24,881.404 1571.34,843.76 1575.44,812.532 1579.54,788.499 1583.63,775.91 1587.73,772.068 1591.83,777.5 1595.93,787.927 1600.03,800.435 
  1604.12,810.675 1608.22,811.157 1612.32,799.93 1616.42,772.952 1620.51,730.004 1624.61,672.637 1628.71,605.714 1632.81,536.208 1636.91,472.279 1641,419.692 
  1645.1,386.497 1649.2,374.351 1653.3,385.582 1657.4,415.601 1661.49,460.439 1665.59,513.371 1669.69,567.386 1673.79,614.97 1677.89,651.075 1681.98,671.426 
  1686.08,674.589 1690.18,659.209 1694.28,628.558 1698.38,584.363 1702.47,532.153 1706.57,475.065 1710.67,419.694 1714.77,370.321 1718.87,332.426 1722.96,309.988 
  1727.06,306.403 1731.16,323.968 1735.26,363.414 1739.35,423.026 1743.45,500.135 1747.55,589.362 1751.65,683.948 1755.75,776.852 1759.84,861.752 1763.94,931.085 
  1768.04,981.117 1772.14,1009.46 1776.24,1016.08 1780.33,1004.17 1784.43,976.473 1788.53,938.989 1792.63,897.585 1796.73,853.846 1800.82,814.691 1804.92,781.401 
  1809.02,756.16 1813.12,741.983 1817.22,739.389 1821.31,749.628 1825.41,772.213 1829.51,806.079 1833.61,849.884 1837.7,900.236 1841.8,953.491 1845.9,1006.09 
  1850,1053.76 1854.1,1092.34 1858.19,1121.25 1862.29,1138.19 1866.39,1145.49 1870.49,1143.02 1874.59,1133.94 1878.68,1122.12 1882.78,1109.8 1886.88,1099.81 
  1890.98,1096.04 1895.08,1100.53 1899.17,1113.61 1903.27,1135.4 1907.37,1162.31 1911.47,1192.34 1915.57,1221.01 1919.66,1242.04 1923.76,1253.35 1927.86,1252.26 
  1931.96,1238.6 1936.06,1215.56 1940.15,1184.26 1944.25,1151.11 1948.35,1119.02 1952.45,1090.99 1956.54,1068.5 1960.64,1051.88 1964.74,1037.38 1968.84,1022.17 
  1972.94,1004.36 1977.03,980.565 1981.13,949.643 1985.23,912.477 1989.33,870.634 1993.43,829.47 1997.52,792.146 2001.62,761.881 2005.72,741.613 2009.82,734.539 
  2013.92,738.538 2018.01,752.031 2022.11,772.792 2026.21,797.231 2030.31,822.555 2034.41,846.719 2038.5,869.407 2042.6,890.464 2046.7,910.708 2050.8,931.58 
  2054.89,952.448 2058.99,974.212 2063.09,994.892 2067.19,1014 2071.29,1029.54 2075.38,1038.83 2079.48,1040.56 2083.58,1034.38 2087.68,1019.08 2091.78,996.258 
  2095.87,965.775 2099.97,927.79 2104.07,883.086 2108.17,833.857 2112.27,780.202 2116.36,723.624 2120.46,665.353 2124.56,606.279 2128.66,550.602 2132.76,497.364 
  2136.85,448.71 2140.95,406.964 2145.05,373.172 2149.15,347.737 2153.24,331.634 2157.34,325.817 2161.44,328.67 2165.54,340.651 2169.64,359.324 2173.73,384.958 
  2177.83,415.124 2181.93,449.309 2186.03,486.84 2190.13,526.508 2194.22,567.484 2198.32,609.635 2202.42,650.593 2206.52,690.354 2210.62,725.014 2214.71,753.538 
  2218.81,775.167 2222.91,789.352 2227.01,795.614 2231.11,796.192 2235.2,791.391 2239.3,783.083 2243.4,772.667 2247.5,763.371 2251.6,755.214 2255.69,750.388 
  2259.79,748.165 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,782.444 214.927,737.978 219.025,700.998 223.123,675.086 227.221,660.617 231.319,657.767 235.417,663.553 239.515,674.544 243.613,687.185 247.711,697.086 
  251.809,701.601 255.907,697.127 260.005,684.464 264.102,664.004 268.2,638.541 272.298,610.817 276.396,585.887 280.494,566.636 284.592,557.518 288.69,561.016 
  292.788,579.374 296.886,611.26 300.984,657.043 305.082,712.634 309.18,777.233 313.278,845.876 317.375,916.457 321.473,985.744 325.571,1050.2 329.669,1109.9 
  333.767,1161.78 337.865,1205.07 341.963,1239.01 346.061,1263.01 350.159,1276.96 354.257,1281.19 358.355,1275.51 362.453,1261.37 366.551,1240.09 370.648,1211.9 
  374.746,1176.97 378.844,1136.07 382.942,1088.9 387.04,1035.28 391.138,978.637 395.236,919.845 399.334,862.483 403.432,812.147 407.53,772.795 411.628,748.635 
  415.726,742.624 419.824,755.323 423.921,784.786 428.019,827.198 432.117,876.321 436.215,924.525 440.313,964.819 444.411,989 448.509,992.935 452.607,972.381 
  456.705,926.579 460.803,858.842 464.901,771.272 468.999,671.161 473.097,565.19 477.194,458.978 481.292,360.534 485.39,274.087 489.488,204.578 493.586,151.767 
  497.684,115.712 501.782,96.0596 505.88,88.4582 509.978,90.6392 514.076,98.8368 518.174,111.041 522.272,127.237 526.37,145.782 530.467,167.881 534.565,194.535 
  538.663,226.643 542.761,265.598 546.859,311.378 550.957,362.543 555.055,418.42 559.153,476.814 563.251,534.487 567.349,587.605 571.447,635.073 575.545,673.592 
  579.643,702.314 583.74,720.926 587.838,730.482 591.936,731.286 596.034,727.353 600.132,719.679 604.23,712.389 608.328,707.189 612.426,705.828 616.524,710.992 
  620.622,723.607 624.72,746.598 628.818,780.469 632.916,825.203 637.013,880.446 641.111,945.356 645.209,1016.58 649.307,1088.68 653.405,1158.85 657.503,1221.09 
  661.601,1269.5 665.699,1299.81 669.797,1311.48 673.895,1301.3 677.993,1272.15 682.091,1228.47 686.189,1173.66 690.286,1113.41 694.384,1051.3 698.482,992.854 
  702.58,938.334 706.678,889.92 710.776,846.596 714.874,807.261 718.972,769.948 723.07,736.369 727.168,707.39 731.266,683.219 735.364,665.098 739.462,654.049 
  743.559,649.51 747.657,648.492 751.755,649.993 755.853,651.31 759.951,650.549 764.049,647.218 768.147,642.398 772.245,638.017 776.343,637.469 780.441,642.03 
  784.539,654.759 788.637,674.239 792.735,702.297 796.832,732.078 800.93,763.736 805.028,791.346 809.126,811.06 813.224,820.742 817.322,818.671 821.42,805.918 
  825.518,784.04 829.616,756.245 833.714,725.88 837.812,694.555 841.91,664.356 846.008,636.653 850.105,612.697 854.203,592.476 858.301,576.117 862.399,564.735 
  866.497,560.718 870.595,563.456 874.693,575.643 878.791,595.958 882.889,625.147 886.987,659.001 891.085,694.225 895.183,727.739 899.281,752.647 903.378,764.571 
  907.476,760.337 911.574,739.016 915.672,700.951 919.77,650.669 923.868,594.602 927.966,538.206 932.064,489.781 936.162,454.927 940.26,438.703 944.358,443.335 
  948.456,467.532 952.554,509.042 956.651,564.495 960.749,627.858 964.847,695.101 968.945,760.506 973.043,821.57 977.141,876.768 981.239,925.011 985.337,966.174 
  989.435,1001.87 993.533,1030.77 997.631,1055.05 1001.73,1072.13 1005.83,1082.14 1009.92,1084.1 1014.02,1078.9 1018.12,1065.45 1022.22,1044.99 1026.32,1020 
  1030.41,993.976 1034.51,965.892 1038.61,937.222 1042.71,908.506 1046.81,876.628 1050.9,841.339 1055,800.627 1059.1,753.647 1063.2,702.339 1067.3,647.067 
  1071.39,591.895 1075.49,540.009 1079.59,496.307 1083.69,466.289 1087.78,453.678 1091.88,461.217 1095.98,491.777 1100.08,545.082 1104.18,618.597 1108.27,707.19 
  1112.37,805.295 1116.47,906.557 1120.57,1002.73 1124.67,1086.99 1128.76,1155.55 1132.86,1203.93 1136.96,1233.32 1141.06,1244.06 1145.16,1240.2 1149.25,1223.91 
  1153.35,1201.25 1157.45,1175.12 1161.55,1148.2 1165.65,1122.64 1169.74,1100.24 1173.84,1081.72 1177.94,1065.79 1182.04,1052.12 1186.14,1039.37 1190.23,1026.58 
  1194.33,1011.49 1198.43,993.704 1202.53,971.32 1206.62,945.304 1210.72,915.273 1214.82,884.51 1218.92,853.798 1223.02,824.243 1227.11,800.563 1231.21,782.876 
  1235.31,772.067 1239.41,768.939 1243.51,772.783 1247.6,782.704 1251.7,798.701 1255.8,818.605 1259.9,842.559 1264,869.544 1268.09,898.883 1272.19,929.198 
  1276.29,958.705 1280.39,983.373 1284.49,1000.97 1288.58,1006.34 1292.68,996.696 1296.78,968.158 1300.88,919.498 1304.97,851.54 1309.07,769.266 1313.17,678.42 
  1317.27,587.696 1321.37,507.014 1325.46,445.881 1329.56,410.463 1333.66,407.485 1337.76,436.609 1341.86,494.882 1345.95,575.746 1350.05,669.795 1354.15,767.531 
  1358.25,860.212 1362.35,941.935 1366.44,1009.25 1370.54,1060.61 1374.64,1099.13 1378.74,1127.93 1382.84,1152.17 1386.93,1174.82 1391.03,1197.9 1395.13,1221.66 
  1399.23,1246.63 1403.33,1268.31 1407.42,1285.71 1411.52,1295.59 1415.62,1296.43 1419.72,1285.5 1423.81,1264.64 1427.91,1233.76 1432.01,1193.66 1436.11,1145.82 
  1440.21,1091.78 1444.3,1033.08 1448.4,970.145 1452.5,904.353 1456.6,835.853 1460.7,766.041 1464.79,695.173 1468.89,624.032 1472.99,553.807 1477.09,484.438 
  1481.19,418.401 1485.28,356.212 1489.38,300.523 1493.48,254.201 1497.58,219.663 1501.68,201.213 1505.77,200.832 1509.87,220.918 1513.97,262.66 1518.07,323.35 
  1522.16,400.119 1526.26,487.187 1530.36,577.73 1534.46,664.21 1538.56,741.711 1542.65,803.833 1546.75,846.482 1550.85,870.579 1554.95,875.319 1559.05,864.854 
  1563.14,842.58 1567.24,812.101 1571.34,777.547 1575.44,741.21 1579.54,705.669 1583.63,670.843 1587.73,637.121 1591.83,603.776 1595.93,569.989 1600.03,533.742 
  1604.12,496.324 1608.22,457.446 1612.32,418.635 1616.42,382.08 1620.51,349.971 1624.61,324.811 1628.71,308.355 1632.81,302.297 1636.91,308.687 1641,325.81 
  1645.1,353.645 1649.2,391.572 1653.3,435.721 1657.4,486.29 1661.49,539.447 1665.59,592.698 1669.69,642.498 1673.79,686.576 1677.89,723.426 1681.98,750.45 
  1686.08,767.498 1690.18,775.317 1694.28,774.646 1698.38,767.464 1702.47,755.803 1706.57,742.049 1710.67,728.004 1714.77,717.846 1718.87,710.682 1722.96,708.727 
  1727.06,712.852 1731.16,724.112 1735.26,741.537 1739.35,764.906 1743.45,793.415 1747.55,823.594 1751.65,854.395 1755.75,883.182 1759.84,905.777 1763.94,921.096 
  1768.04,925.21 1772.14,917.81 1776.24,898.435 1780.33,867.539 1784.43,826.637 1788.53,779.259 1792.63,728.199 1796.73,676.812 1800.82,628.46 1804.92,585.962 
  1809.02,549.649 1813.12,521.356 1817.22,498.442 1821.31,481.73 1825.41,470.232 1829.51,460.762 1833.61,454.246 1837.7,450.033 1841.8,447.653 1845.9,448.079 
  1850,452.237 1854.1,459.79 1858.19,472.423 1862.29,489.391 1866.39,511.942 1870.49,539.344 1874.59,570.775 1878.68,606.185 1882.78,642.882 1886.88,679.962 
  1890.98,716.033 1895.08,748.315 1899.17,776.096 1903.27,798.607 1907.37,816.658 1911.47,830.253 1915.57,841.115 1919.66,849.879 1923.76,856.989 1927.86,863.187 
  1931.96,867.504 1936.06,867.425 1940.15,861.086 1944.25,848.884 1948.35,829.44 1952.45,802.108 1956.54,771.859 1960.64,738.499 1964.74,707.349 1968.84,679.135 
  1972.94,655.945 1977.03,637.392 1981.13,620.48 1985.23,602.898 1989.33,580.576 1993.43,550.09 1997.52,509.696 2001.62,458.869 2005.72,398.493 2009.82,334.627 
  2013.92,270.88 2018.01,212.69 2022.11,165.703 2026.21,136.102 2030.31,125.053 2034.41,135.115 2038.5,165.468 2042.6,213.645 2046.7,276.769 2050.8,349.773 
  2054.89,427.494 2058.99,505.116 2063.09,578.954 2067.19,644.776 2071.29,699.824 2075.38,744.017 2079.48,777.834 2083.58,802.443 2087.68,823.068 2091.78,842.429 
  2095.87,864.351 2099.97,891.955 2104.07,926.838 2108.17,967.848 2112.27,1011.22 2116.36,1053.93 2120.46,1090.86 2124.56,1118.2 2128.66,1134.2 2132.76,1136.83 
  2136.85,1127.77 2140.95,1109.84 2145.05,1087.1 2149.15,1062.68 2153.24,1039.58 2157.34,1022.1 2161.44,1008.01 2165.54,998.981 2169.64,991.159 2173.73,982.082 
  2177.83,969.668 2181.93,950.619 2186.03,924.34 2190.13,891.169 2194.22,852.059 2198.32,809.374 2202.42,768.52 2206.52,731.644 2210.62,702.634 2214.71,684.684 
  2218.81,679.928 2222.91,688.829 2227.01,712.008 2231.11,747.604 2235.2,796.233 2239.3,854.334 2243.4,919.681 2247.5,987.662 2251.6,1053.9 2255.69,1115.32 
  2259.79,1168.03 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#c271d2; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1187.97 214.927,1158.4 219.025,1121.93 223.123,1080.46 227.221,1037.29 231.319,994.029 235.417,953.067 239.515,915.027 243.613,882.553 247.711,856.965 
  251.809,840.583 255.907,835.128 260.005,840.803 264.102,856.766 268.2,882.028 272.298,912.758 276.396,945.025 280.494,972.718 284.592,990.822 288.69,996.101 
  292.788,983.591 296.886,952.85 300.984,904.477 305.082,841.781 309.18,767.627 313.278,689.576 317.375,612.199 321.473,541.553 325.571,482.028 329.669,437.983 
  333.767,410.334 337.865,399.151 341.963,403.617 346.061,419.99 350.159,443.543 354.257,469.988 358.355,496.024 362.453,517.578 366.551,533.558 370.648,544.298 
  374.746,549.942 378.844,552.317 382.942,554.963 387.04,558.913 391.138,567.798 395.236,581.426 399.334,602.172 403.432,628.529 407.53,660.699 411.628,695.892 
  415.726,733.928 419.824,772.02 423.921,808.765 428.019,843.526 432.117,876.64 436.215,907.292 440.313,937.052 444.411,964.507 448.509,990.29 452.607,1012.06 
  456.705,1027.92 460.803,1036.35 464.901,1034.01 468.999,1019.54 473.097,993.225 477.194,956.389 481.292,911.675 485.39,861.922 489.488,810.434 493.586,762.488 
  497.684,717.647 501.782,679.105 505.88,647.399 509.978,623.046 514.076,606.861 518.174,598.543 522.272,598.718 526.37,608.436 530.467,626.587 534.565,651.788 
  538.663,683.079 542.761,717.092 546.859,752.176 550.957,786.213 555.055,816.886 559.153,844.612 563.251,870.188 567.349,893.695 571.447,919.347 575.545,945.465 
  579.643,976.59 583.74,1011.55 587.838,1049.58 591.936,1088.81 596.034,1128.59 600.132,1165.75 604.23,1198.96 608.328,1226.53 612.426,1250.37 616.524,1269.28 
  620.622,1284.53 624.72,1296.96 628.818,1307.59 632.916,1316.13 637.013,1321.33 641.111,1321.02 645.209,1313.3 649.307,1294.53 653.405,1264.58 657.503,1221.87 
  661.601,1166.7 665.699,1104.54 669.797,1038.14 673.895,972.268 677.993,911.704 682.091,860.704 686.189,822.08 690.286,795.198 694.384,780.807 698.482,775.571 
  702.58,776.573 706.678,781.814 710.776,788.596 714.874,795.57 718.972,803.388 723.07,811.684 727.168,820.722 731.266,830.525 735.364,841.987 739.462,854.043 
  743.559,866.006 747.657,876.747 751.755,883.98 755.853,886.067 759.951,882.857 764.049,873.926 768.147,860.563 772.245,844.248 776.343,827.151 780.441,812.916 
  784.539,806.431 788.637,810.009 792.735,826.009 796.832,856.087 800.93,898.513 805.028,952.111 809.126,1011.35 813.224,1072.76 817.322,1128.93 821.42,1176.83 
  825.518,1211.87 829.616,1230.7 833.714,1232.44 837.812,1217.12 841.91,1184.76 846.008,1138.64 850.105,1081.19 854.203,1014.11 858.301,940.364 862.399,863.515 
  866.497,783.811 870.595,704.045 874.693,626.563 878.791,552.313 882.889,485.029 886.987,427.7 891.085,382.043 895.183,350.875 899.281,335.797 903.378,336.333 
  907.476,350.412 911.574,373.898 915.672,403.514 919.77,433.849 923.868,459.697 927.966,478.659 932.064,488.915 936.162,491.151 940.26,487.403 944.358,480.19 
  948.456,473.417 952.554,469.402 956.651,472.012 960.749,481.142 964.847,496.937 968.945,518.175 973.043,542.511 977.141,568.382 981.239,590.349 985.337,605.326 
  989.435,611.804 993.533,606.368 997.631,586.709 1001.73,555.988 1005.83,515.546 1009.92,469.557 1014.02,422.817 1018.12,383.328 1022.22,355.524 1026.32,343.823 
  1030.41,350.258 1034.51,373.107 1038.61,411.158 1042.71,456.641 1046.81,506.81 1050.9,554.781 1055,598 1059.1,634.129 1063.2,662.342 1067.3,685.213 
  1071.39,704.78 1075.49,721.047 1079.59,736.999 1083.69,752.895 1087.78,768.897 1091.88,784.066 1095.98,796.094 1100.08,803.913 1104.18,807.6 1108.27,805.049 
  1112.37,796.994 1116.47,783.803 1120.57,767.334 1124.67,749.929 1128.76,731.351 1132.86,713.911 1136.96,697.848 1141.06,683.226 1145.16,670.023 1149.25,658.068 
  1153.35,648.898 1157.45,642.047 1161.55,639.701 1165.65,641.001 1169.74,648.001 1173.84,662.97 1177.94,685.166 1182.04,714.281 1186.14,748.176 1190.23,786.026 
  1194.33,824.583 1198.43,860.766 1202.53,891.616 1206.62,915.101 1210.72,928.893 1214.82,932.681 1218.92,928.461 1223.02,919.553 1227.11,908.433 1231.21,899.624 
  1235.31,896.57 1239.41,901.902 1243.51,915.278 1247.6,936.777 1251.7,960.83 1255.8,983.595 1259.9,998.74 1264,1001.01 1268.09,987.166 1272.19,954.004 
  1276.29,904.685 1280.39,841.273 1284.49,769.712 1288.58,695.972 1292.68,628.421 1296.78,570.466 1300.88,528.282 1304.97,501.356 1309.07,489.208 1313.17,492.432 
  1317.27,508.742 1321.37,533.801 1325.46,566.825 1329.56,605.944 1333.66,648.923 1337.76,693.413 1341.86,736.776 1345.95,776.365 1350.05,808.555 1354.15,830.452 
  1358.25,839.744 1362.35,836.257 1366.44,820.689 1370.54,796.41 1374.64,768.872 1378.74,743.069 1382.84,723.64 1386.93,715.665 1391.03,720.576 1395.13,739.522 
  1399.23,769.934 1403.33,809.745 1407.42,853.392 1411.52,897.738 1415.62,939.92 1419.72,977.714 1423.81,1010.33 1427.91,1039.35 1432.01,1065.77 1436.11,1091.48 
  1440.21,1115.66 1444.3,1140.32 1448.4,1164.38 1452.5,1185.9 1456.6,1201.51 1460.7,1208.42 1464.79,1206.46 1468.89,1192.99 1472.99,1167.8 1477.09,1133.24 
  1481.19,1091.93 1485.28,1045.33 1489.38,998.817 1493.48,955.241 1497.58,916.32 1501.68,884.836 1505.77,861.66 1509.87,846.775 1513.97,840.371 1518.07,839.868 
  1522.16,843.135 1526.26,846.948 1530.36,848.495 1534.46,845.588 1538.56,836.192 1542.65,818.985 1546.75,796.78 1550.85,772.06 1554.95,749.244 1559.05,733.906 
  1563.14,729.765 1567.24,739.239 1571.34,763.285 1575.44,800.266 1579.54,845.162 1583.63,892.4 1587.73,933.948 1591.83,963.423 1595.93,975.792 1600.03,969.272 
  1604.12,944.173 1608.22,902.784 1612.32,851.095 1616.42,794.557 1620.51,738.348 1624.61,689.091 1628.71,648.241 1632.81,616.767 1636.91,595.787 1641,582.286 
  1645.1,575.323 1649.2,572.682 1653.3,573.033 1657.4,577.85 1661.49,586.218 1665.59,601.923 1669.69,625.96 1673.79,660.398 1677.89,706.76 1681.98,763.637 
  1686.08,829.291 1690.18,900.453 1694.28,971.406 1698.38,1036.91 1702.47,1092.14 1706.57,1131.74 1710.67,1154.68 1714.77,1159.4 1718.87,1146.98 1722.96,1121.71 
  1727.06,1087.24 1731.16,1047.37 1735.26,1006.17 1739.35,968.17 1743.45,934.93 1747.55,906.129 1751.65,881.198 1755.75,860.008 1759.84,840.852 1763.94,822.763 
  1768.04,805.954 1772.14,791.385 1776.24,780.126 1780.33,775.128 1784.43,777.099 1788.53,787.039 1792.63,804.233 1796.73,826.868 1800.82,850.959 1804.92,875.249 
  1809.02,895.774 1813.12,910.681 1817.22,918.676 1821.31,920.31 1825.41,918.117 1829.51,912.741 1833.61,908.428 1837.7,904.306 1841.8,903.77 1845.9,907.894 
  1850,916.431 1854.1,929.65 1858.19,947.08 1862.29,966.343 1866.39,984.824 1870.49,1000.72 1874.59,1010.09 1878.68,1008.47 1882.78,994.599 1886.88,967.391 
  1890.98,927.924 1895.08,878.113 1899.17,823.165 1903.27,767.488 1907.37,717.661 1911.47,676.692 1915.57,648.175 1919.66,632.793 1923.76,630.399 1927.86,638.114 
  1931.96,653.503 1936.06,673.266 1940.15,695.652 1944.25,717.766 1948.35,737.322 1952.45,754.016 1956.54,767.152 1960.64,774.243 1964.74,775.677 1968.84,767.837 
  1972.94,752.794 1977.03,728.365 1981.13,694.629 1985.23,653.376 1989.33,606.021 1993.43,554.771 1997.52,502.843 2001.62,451.723 2005.72,404.465 2009.82,361.854 
  2013.92,325.192 2018.01,294.197 2022.11,269.701 2026.21,248.13 2030.31,231.016 2034.41,216.9 2038.5,206.701 2042.6,198.281 2046.7,195.727 2050.8,199.204 
  2054.89,209.864 2058.99,228.878 2063.09,256.959 2067.19,293.271 2071.29,336.206 2075.38,384.547 2079.48,435.222 2083.58,486.853 2087.68,535.956 2091.78,581.882 
  2095.87,621.373 2099.97,655.104 2104.07,681.289 2108.17,700.656 2112.27,714.137 2116.36,721.479 2120.46,726.342 2124.56,727.838 2128.66,729.126 2132.76,731.093 
  2136.85,734.671 2140.95,740.31 2145.05,748.278 2149.15,757.151 2153.24,766.249 2157.34,775.98 2161.44,784.675 2165.54,790.083 2169.64,792.661 2173.73,792.233 
  2177.83,788.656 2181.93,782.531 2186.03,774.525 2190.13,765.506 2194.22,757.393 2198.32,750.31 2202.42,744.342 2206.52,738.512 2210.62,731.926 2214.71,723.844 
  2218.81,712.01 2222.91,696.783 2227.01,677.84 2231.11,656.922 2235.2,636.451 2239.3,619.048 2243.4,608.985 2247.5,609.104 2251.6,621.554 2255.69,645.644 
  2259.79,683.525 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#ac8d18; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,931.237 214.927,993.598 219.025,1042.33 223.123,1073.6 227.221,1084.57 231.319,1075.46 235.417,1045.79 239.515,996.379 243.613,930.706 247.711,851.78 
  251.809,762.3 255.907,669.399 260.005,578.391 264.102,494.544 268.2,424.867 272.298,373.179 276.396,344.309 280.494,339.033 284.592,357.044 288.69,396.518 
  292.788,452.466 296.886,517.979 300.984,587.962 305.082,654.996 309.18,713.264 313.278,757.442 317.375,784.735 321.473,791.407 325.571,779.204 329.669,749.812 
  333.767,706.089 337.865,654.207 341.963,598.889 346.061,544.611 350.159,497.877 354.257,461.621 358.355,438.189 362.453,428.248 366.551,431.809 370.648,446.545 
  374.746,469.343 378.844,498.612 382.942,531.06 387.04,564.816 391.138,597.363 395.236,628.504 399.334,658.009 403.432,687.456 407.53,718.238 411.628,749.467 
  415.726,783.859 419.824,819.95 423.921,855.86 428.019,891.572 432.117,922.223 436.215,946.325 440.313,960.8 444.411,965.254 448.509,957.181 452.607,939.957 
  456.705,911.895 460.803,877.316 464.901,837.758 468.999,797.182 473.097,758.349 477.194,723.482 481.292,696.234 485.39,676.7 489.488,665.374 493.586,662.683 
  497.684,667.264 501.782,677.032 505.88,691.043 509.978,707.359 514.076,724.52 518.174,744.235 522.272,764.873 526.37,789.828 530.467,817.849 534.565,851.162 
  538.663,888.331 542.761,930.43 546.859,975.58 550.957,1022.99 555.055,1072.06 559.153,1119.86 563.251,1163.05 567.349,1200.78 571.447,1227.61 575.545,1239.7 
  579.643,1235.26 583.74,1213.07 587.838,1173.42 591.936,1119.73 596.034,1056.64 600.132,988.692 604.23,922.723 608.328,862.32 612.426,810.021 616.524,765.374 
  620.622,728.479 624.72,695.026 628.818,661.546 632.916,626.12 637.013,587.682 641.111,547.436 645.209,508.819 649.307,474.821 653.405,451.4 657.503,441.796 
  661.601,449.601 665.699,474.171 669.797,515.198 673.895,568.224 677.993,628.359 682.091,687.559 686.189,742.144 690.286,786.331 694.384,816.072 698.482,830.367 
  702.58,830.271 706.678,816.795 710.776,793.396 714.874,761.829 718.972,727.119 723.07,690.032 727.168,653.457 731.266,618.474 735.364,586.6 739.462,558.31 
  743.559,534.017 747.657,512.45 751.755,494.375 755.853,478.279 759.951,461.985 764.049,444.39 768.147,425.341 772.245,403.821 776.343,380.8 780.441,356.958 
  784.539,337.342 788.637,323.288 792.735,320.111 796.832,331.016 800.93,359.288 805.028,407.075 809.126,472.021 813.224,552.101 817.322,641.683 821.42,734.947 
  825.518,825.995 829.616,906.16 833.714,973.474 837.812,1023.9 841.91,1056.86 846.008,1072.27 850.105,1072.94 854.203,1059.8 858.301,1035.7 862.399,1000.75 
  866.497,958.497 870.595,909.201 874.693,855.9 878.791,800.903 882.889,747.065 886.987,697.848 891.085,655.545 895.183,622.017 899.281,598.934 903.378,585.234 
  907.476,581.476 911.574,586.873 915.672,599.198 919.77,618.748 923.868,644.845 927.966,676.676 932.064,714.878 936.162,760.406 940.26,811.867 944.358,868.295 
  948.456,929.187 952.554,989.452 956.651,1046.57 960.749,1093.47 964.847,1127.38 968.945,1142.48 973.043,1135.71 977.141,1107.07 981.239,1057.33 985.337,988.92 
  989.435,908.5 993.533,820.863 997.631,732.394 1001.73,649.534 1005.83,577.174 1009.92,518.939 1014.02,478.278 1018.12,455.333 1022.22,450.59 1026.32,463.557 
  1030.41,492.413 1034.51,534.559 1038.61,586.081 1042.71,644.201 1046.81,703.204 1050.9,760.387 1055,812.813 1059.1,856.899 1063.2,891.198 1067.3,916.007 
  1071.39,930.88 1075.49,935.369 1079.59,930.467 1083.69,916.499 1087.78,895.008 1091.88,866.523 1095.98,833.424 1100.08,797.593 1104.18,762.72 1108.27,732.828 
  1112.37,712.721 1116.47,703.542 1120.57,709.068 1124.67,729.057 1128.76,763.613 1132.86,808.285 1136.96,861.242 1141.06,916.975 1145.16,971.278 1149.25,1020.61 
  1153.35,1060.18 1157.45,1086.84 1161.55,1098.21 1165.65,1091.2 1169.74,1065.87 1173.84,1020.37 1177.94,958.109 1182.04,880.017 1186.14,792.584 1190.23,698.982 
  1194.33,608.132 1198.43,524.238 1202.53,453.085 1206.62,398.533 1210.72,361.327 1214.82,341.577 1218.92,334.013 1223.02,335.633 1227.11,341.434 1231.21,345.923 
  1235.31,345.589 1239.41,338.357 1243.51,326.241 1247.6,309.879 1251.7,292.534 1255.8,277.651 1259.9,270.199 1264,270.1 1268.09,279.897 1272.19,297.974 
  1276.29,324.274 1280.39,354.33 1284.49,386.697 1288.58,417.452 1292.68,443.608 1296.78,462.617 1300.88,472.89 1304.97,473.437 1309.07,465.213 1313.17,449.385 
  1317.27,427.437 1321.37,404.777 1325.46,383.299 1329.56,366.336 1333.66,359.367 1337.76,363.05 1341.86,377.965 1345.95,404.794 1350.05,441.39 1354.15,484.705 
  1358.25,533.628 1362.35,583.385 1366.44,632.255 1370.54,677.48 1374.64,716.337 1378.74,745.808 1382.84,763.271 1386.93,767.738 1391.03,758.63 1395.13,735.081 
  1399.23,699.401 1403.33,656.408 1407.42,609.737 1411.52,566.128 1415.62,532.014 1419.72,511.891 1423.81,509.119 1427.91,525.872 1432.01,561.117 1436.11,612.036 
  1440.21,673.072 1444.3,739.224 1448.4,803.084 1452.5,860.067 1456.6,902.751 1460.7,927.521 1464.79,932.78 1468.89,920.623 1472.99,892.481 1477.09,853.557 
  1481.19,810.642 1485.28,770.38 1489.38,738.29 1493.48,717.217 1497.58,709.713 1501.68,714.075 1505.77,726.162 1509.87,741.374 1513.97,754.258 1518.07,758.892 
  1522.16,753.042 1526.26,734.248 1530.36,705.024 1534.46,666.075 1538.56,622.386 1542.65,578.958 1546.75,540.291 1550.85,510.431 1554.95,490.649 1559.05,482.169 
  1563.14,486.949 1567.24,501.83 1571.34,528.082 1575.44,564.576 1579.54,608.694 1583.63,660.551 1587.73,718.465 1591.83,780.305 1595.93,843.384 1600.03,905.326 
  1604.12,961.877 1608.22,1011.41 1612.32,1051.18 1616.42,1078.53 1620.51,1093.97 1624.61,1097.71 1628.71,1091.28 1632.81,1078.71 1636.91,1062.51 1641,1047.96 
  1645.1,1037.75 1649.2,1032.94 1653.3,1035.9 1657.4,1043.1 1661.49,1052.85 1665.59,1061.72 1669.69,1066.57 1673.79,1063.87 1677.89,1052.59 1681.98,1031.7 
  1686.08,1000.44 1690.18,961.246 1694.28,914.235 1698.38,861.148 1702.47,803.721 1706.57,744.356 1710.67,683.187 1714.77,623.156 1718.87,564.812 1722.96,512.061 
  1727.06,463.434 1731.16,422.256 1735.26,388.318 1739.35,362.665 1743.45,344.962 1747.55,335.93 1751.65,334.62 1755.75,341.235 1759.84,355.931 1763.94,378.24 
  1768.04,407.501 1772.14,443.879 1776.24,486.813 1780.33,534.483 1784.43,586.447 1788.53,638.137 1792.63,687.344 1796.73,729.516 1800.82,760.922 1804.92,778.785 
  1809.02,781.805 1813.12,770.256 1817.22,746.287 1821.31,713.969 1825.41,677.399 1829.51,642.638 1833.61,612.527 1837.7,591.421 1841.8,581.463 1845.9,583.313 
  1850,594.643 1854.1,613.37 1858.19,637.454 1862.29,662.635 1866.39,687.089 1870.49,708.284 1874.59,725.889 1878.68,739.395 1882.78,750.753 1886.88,761.029 
  1890.98,772.789 1895.08,786.181 1899.17,801.769 1903.27,819.025 1907.37,837.314 1911.47,852.273 1915.57,863.257 1919.66,867.967 1923.76,864.738 1927.86,852.217 
  1931.96,833.769 1936.06,809.788 1940.15,783.504 1944.25,755.79 1948.35,730.045 1952.45,706.974 1956.54,686.507 1960.64,669.834 1964.74,655.205 1968.84,642.827 
  1972.94,632.235 1977.03,623.492 1981.13,615.813 1985.23,608.166 1989.33,600.469 1993.43,592.937 1997.52,585.814 2001.62,579.617 2005.72,576.568 2009.82,578.513 
  2013.92,587.483 2018.01,606.31 2022.11,634.696 2026.21,672.966 2030.31,719.934 2034.41,770.818 2038.5,824.852 2042.6,875.754 2046.7,922.077 2050.8,961.148 
  2054.89,990.736 2058.99,1011.55 2063.09,1024.22 2067.19,1030.9 2071.29,1034.34 2075.38,1036.31 2079.48,1037.06 2083.58,1038.68 2087.68,1039.28 2091.78,1039.07 
  2095.87,1036.31 2099.97,1032.44 2104.07,1026.82 2108.17,1020.86 2112.27,1019.64 2116.36,1023.9 2120.46,1036.57 2124.56,1057.47 2128.66,1087.39 2132.76,1121.57 
  2136.85,1156.41 2140.95,1188.3 2145.05,1212.05 2149.15,1227.06 2153.24,1229.18 2157.34,1220.37 2161.44,1203.03 2165.54,1180.3 2169.64,1155.73 2173.73,1134.93 
  2177.83,1122.37 2181.93,1120.53 2186.03,1132.3 2190.13,1158.1 2194.22,1197.12 2198.32,1244.9 2202.42,1297.89 2206.52,1352.3 2210.62,1399.12 2214.71,1435.68 
  2218.81,1457.38 2222.91,1462.26 2227.01,1450.15 2231.11,1422.88 2235.2,1383.58 2239.3,1337.21 2243.4,1287.8 2247.5,1238.17 2251.6,1191.87 2255.69,1150.29 
  2259.79,1113.25 
  &#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;非常にお手軽である。&lt;/p&gt;
&lt;h3 id=&#34;カーネルの和積&#34;&gt;カーネルの和、積&lt;/h3&gt;
&lt;p&gt;カーネルの和と積も定義されている。線形カーネルと周期カーネルで和、積を使ってみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kernel_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Lin(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Periodic(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GPE(kernel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; kernel_sum)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(gp_sum, xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs, samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6100&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6100)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6101&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6100)&#34; points=&#34;
149.361,1503.47 2321.26,1503.47 2321.26,47.2441 149.361,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6102&#34;&gt;
    &lt;rect x=&#34;149&#34; y=&#34;47&#34; width=&#34;2173&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1493.39 2321.26,1493.39 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1283.95 2321.26,1283.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1074.51 2321.26,1074.51 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,865.068 2321.26,865.068 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,655.627 2321.26,655.627 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,446.185 2321.26,446.185 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,236.743 2321.26,236.743 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 149.361,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1493.39 181.939,1493.39 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1283.95 181.939,1283.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1074.51 181.939,1074.51 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,865.068 181.939,865.068 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,655.627 181.939,655.627 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,446.185 181.939,446.185 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,236.743 181.939,236.743 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 415.726, 1557.47)&#34; x=&#34;415.726&#34; y=&#34;1557.47&#34;&gt;-20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 825.518, 1557.47)&#34; x=&#34;825.518&#34; y=&#34;1557.47&#34;&gt;-10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1235.31, 1557.47)&#34; x=&#34;1235.31&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1645.1, 1557.47)&#34; x=&#34;1645.1&#34; y=&#34;1557.47&#34;&gt;10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2054.89, 1557.47)&#34; x=&#34;2054.89&#34; y=&#34;1557.47&#34;&gt;20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1510.89)&#34; x=&#34;125.361&#34; y=&#34;1510.89&#34;&gt;-6&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1301.45)&#34; x=&#34;125.361&#34; y=&#34;1301.45&#34;&gt;-4&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1092.01)&#34; x=&#34;125.361&#34; y=&#34;1092.01&#34;&gt;-2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 882.568)&#34; x=&#34;125.361&#34; y=&#34;882.568&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 673.127)&#34; x=&#34;125.361&#34; y=&#34;673.127&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 463.685)&#34; x=&#34;125.361&#34; y=&#34;463.685&#34;&gt;4&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 254.243)&#34; x=&#34;125.361&#34; y=&#34;254.243&#34;&gt;6&lt;/text&gt;
&lt;/g&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#009af9; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1106.88 214.927,1100.46 219.025,1094.16 223.123,1086.27 227.221,1077.92 231.319,1068.35 235.417,1058.34 239.515,1046.88 243.613,1035.58 247.711,1021.92 
  251.809,1008.79 255.907,995.719 260.005,981.843 264.102,968.419 268.2,956.364 272.298,945.378 276.396,936.383 280.494,928.279 284.592,923.276 288.69,920.965 
  292.788,920.921 296.886,923.015 300.984,927.024 305.082,932.317 309.18,938.617 313.278,945.963 317.375,951.383 321.473,957.065 325.571,961.292 329.669,963.411 
  333.767,965.057 337.865,965.659 341.963,965.65 346.061,966.11 350.159,966.835 354.257,968.762 358.355,971.823 362.453,976.703 366.551,983.624 370.648,991.366 
  374.746,1001.67 378.844,1012.46 382.942,1026.09 387.04,1039.75 391.138,1055.2 395.236,1071.55 399.334,1086.98 403.432,1102.02 407.53,1115.77 411.628,1128.91 
  415.726,1139.06 419.824,1146.33 423.921,1151.12 428.019,1152.63 432.117,1151.74 436.215,1147.26 440.313,1141.76 444.411,1133.66 448.509,1124.29 452.607,1114.87 
  456.705,1104.6 460.803,1095.51 464.901,1088.03 468.999,1080.71 473.097,1075.08 477.194,1070.3 481.292,1065.79 485.39,1062.46 489.488,1059.22 493.586,1056 
  497.684,1051.92 501.782,1048.5 505.88,1044.56 509.978,1039.76 514.076,1034.29 518.174,1028.32 522.272,1021.55 526.37,1013.91 530.467,1005.06 534.565,995.903 
  538.663,985.295 542.761,973.767 546.859,961.959 550.957,948.882 555.055,935.635 559.153,922.27 563.251,908.354 567.349,895.394 571.447,883.453 575.545,872.243 
  579.643,863.218 583.74,855.926 587.838,851.269 591.936,849.005 596.034,849.29 600.132,851.528 604.23,856.016 608.328,861.543 612.426,867.934 616.524,874.077 
  620.622,880.378 624.72,885.412 628.818,889.221 632.916,891.862 637.013,893.25 641.111,893.653 645.209,894.035 649.307,894.067 653.405,895.069 657.503,896.869 
  661.601,900.494 665.699,905.793 669.797,912.357 673.895,920.738 677.993,930.463 682.091,942.233 686.189,955.528 690.286,969.438 694.384,985.357 698.482,1000.76 
  702.58,1016.73 706.678,1031.98 710.776,1046.13 714.874,1058.36 718.972,1067.98 723.07,1075.25 727.168,1079.49 731.266,1081.29 735.364,1079.57 739.462,1074.9 
  743.559,1068.66 747.657,1060.62 751.755,1051.34 755.853,1041.57 759.951,1032.34 764.049,1023.41 768.147,1014.97 772.245,1008.16 776.343,1002.57 780.441,997.67 
  784.539,993.837 788.637,990.295 792.735,987.745 796.832,983.885 800.93,979.978 805.028,976.727 809.126,971.99 813.224,967.337 817.322,961.974 821.42,955.477 
  825.518,949.181 829.616,941.281 833.714,932.328 837.812,923.433 841.91,912.589 846.008,901.047 850.105,888.594 854.203,876.212 858.301,862.486 862.399,848.552 
  866.497,834.877 870.595,821.79 874.693,810.288 878.791,798.985 882.889,790.335 886.987,783.791 891.085,779.753 895.183,777.023 899.281,777.664 903.378,780.103 
  907.476,784.335 911.574,789.841 915.672,796.669 919.77,803.235 923.868,808.9 927.966,814.04 932.064,817.466 936.162,820.39 940.26,821.653 944.358,821.909 
  948.456,822.276 952.554,822.194 956.651,823.629 960.749,825.419 964.847,828.984 968.945,833.996 973.043,841.231 977.141,850.263 981.239,860.388 985.337,872.07 
  989.435,885.153 993.533,899.746 997.631,915.137 1001.73,931.147 1005.83,947.024 1009.92,961.87 1014.02,975.831 1018.12,987.577 1022.22,997.4 1026.32,1004 
  1030.41,1008.1 1034.51,1008.75 1038.61,1007.1 1042.71,1002.98 1046.81,995.445 1050.9,988.03 1055,978.811 1059.1,968.94 1063.2,959.247 1067.3,950.388 
  1071.39,942.334 1075.49,935.678 1079.59,930.308 1083.69,925.175 1087.78,921.511 1091.88,918.627 1095.98,914.798 1100.08,911.618 1104.18,908.269 1108.27,903.826 
  1112.37,899.768 1116.47,895.197 1120.57,889.269 1124.67,883.341 1128.76,875.997 1132.86,868.278 1136.96,860.061 1141.06,850.043 1145.16,839.702 1149.25,827.801 
  1153.35,815.51 1157.45,802.464 1161.55,789.152 1165.65,775.397 1169.74,761.979 1173.84,748.798 1177.94,737.019 1182.04,726.326 1186.14,717.377 1190.23,711.277 
  1194.33,707.042 1198.43,705.253 1202.53,705.906 1206.62,708.6 1210.72,712.765 1214.82,719.092 1218.92,725.817 1223.02,732.17 1227.11,738.465 1231.21,742.671 
  1235.31,747.041 1239.41,748.994 1243.51,750.166 1247.6,750.155 1251.7,750.891 1255.8,750.886 1259.9,752.03 1264,754.174 1268.09,757.959 1272.19,763.473 
  1276.29,770.325 1280.39,779.329 1284.49,790.018 1288.58,801.984 1292.68,814.991 1296.78,829.8 1300.88,845.167 1304.97,860.901 1309.07,876.196 1313.17,891.528 
  1317.27,905.065 1321.37,917.141 1325.46,925.981 1329.56,933.328 1333.66,937.032 1337.76,937.141 1341.86,935.449 1345.95,930.678 1350.05,923.568 1354.15,915.262 
  1358.25,905.641 1362.35,895.736 1366.44,886.444 1370.54,877.723 1374.64,870.13 1378.74,863.368 1382.84,857.523 1386.93,853.288 1391.03,849.613 1395.13,846.035 
  1399.23,842.771 1403.33,839.432 1407.42,836.112 1411.52,832.083 1415.62,827.142 1419.72,822.603 1423.81,817.211 1427.91,810.82 1432.01,803.843 1436.11,795.776 
  1440.21,786.674 1444.3,777.44 1448.4,766.709 1452.5,754.869 1456.6,742.389 1460.7,729.233 1464.79,715.399 1468.89,702.053 1472.99,689.132 1477.09,676.042 
  1481.19,664.645 1485.28,654.146 1489.38,645.035 1493.48,638.915 1497.58,634.809 1501.68,632.939 1505.77,634.002 1509.87,637.005 1513.97,642.039 1518.07,648.111 
  1522.16,654.433 1526.26,660.675 1530.36,667.295 1534.46,671.93 1538.56,675.224 1542.65,676.781 1546.75,678.444 1550.85,678.216 1554.95,678.759 1559.05,679.209 
  1563.14,680.458 1567.24,682.782 1571.34,686.713 1575.44,692.666 1579.54,699.608 1583.63,708.733 1587.73,719.28 1591.83,731.897 1595.93,744.829 1600.03,759.446 
  1604.12,775.226 1608.22,791.203 1612.32,806.663 1616.42,820.904 1620.51,834.922 1624.61,846.776 1628.71,854.916 1632.81,861.419 1636.91,865.383 1641,865.602 
  1645.1,862.768 1649.2,857.909 1653.3,851.079 1657.4,842.258 1661.49,832.797 1665.59,823.568 1669.69,813.903 1673.79,804.894 1677.89,797.338 1681.98,790.862 
  1686.08,785.539 1690.18,781.253 1694.28,777.354 1698.38,773.898 1702.47,771.137 1706.57,767.51 1710.67,763.892 1714.77,759.557 1718.87,755.189 1722.96,750.209 
  1727.06,744.645 1731.16,738.462 1735.26,731.361 1739.35,722.9 1743.45,714.16 1747.55,703.767 1751.65,693.673 1755.75,681.82 1759.84,669.358 1763.94,656.536 
  1768.04,642.318 1772.14,629.15 1776.24,615.761 1780.33,602.473 1784.43,590.943 1788.53,580.783 1792.63,572.625 1796.73,566.427 1800.82,563.1 1804.92,561.819 
  1809.02,562.766 1813.12,565.831 1817.22,570.601 1821.31,576.761 1825.41,583.327 1829.51,589.981 1833.61,595.831 1837.7,600.268 1841.8,603.623 1845.9,606.033 
  1850,606.216 1854.1,606.4 1858.19,606.668 1862.29,607.367 1866.39,608.315 1870.49,611.931 1874.59,615.645 1878.68,621.13 1882.78,628.824 1886.88,637.906 
  1890.98,648.756 1895.08,661.419 1899.17,674.613 1903.27,689.388 1907.37,704.974 1911.47,721.46 1915.57,736.662 1919.66,750.977 1923.76,764.558 1927.86,775.447 
  1931.96,784.451 1936.06,790.701 1940.15,793.354 1944.25,793.478 1948.35,790.556 1952.45,785.459 1956.54,778.631 1960.64,769.917 1964.74,759.967 1968.84,750.725 
  1972.94,740.739 1977.03,732.373 1981.13,724.9 1985.23,718.516 1989.33,713.27 1993.43,708.985 1997.52,705.034 2001.62,701.639 2005.72,698.257 2009.82,695.455 
  2013.92,691.715 2018.01,687.542 2022.11,682.523 2026.21,678.025 2030.31,672.328 2034.41,665.641 2038.5,658.513 2042.6,650.371 2046.7,641.636 2050.8,631.616 
  2054.89,620.664 2058.99,609.168 2063.09,596.106 2067.19,582.35 2071.29,569.508 2075.38,555.543 2079.48,542.498 2083.58,530.011 2087.68,518.497 2091.78,508.528 
  2095.87,499.999 2099.97,494.015 2104.07,490.785 2108.17,489.702 2112.27,491.429 2116.36,494.65 2120.46,500.301 2124.56,505.264 2128.66,512.469 2132.76,518.774 
  2136.85,524.613 2140.95,528.791 2145.05,532.345 2149.15,533.755 2153.24,534.948 2157.34,534.562 2161.44,535.108 2165.54,535.902 2169.64,537.134 2173.73,540.105 
  2177.83,544.288 2181.93,549.996 2186.03,557.911 2190.13,566.948 2194.22,578.225 2198.32,590.359 2202.42,604.638 2206.52,619.455 2210.62,635.055 2214.71,650.746 
  2218.81,666.757 2222.91,680.931 2227.01,694.374 2231.11,704.929 2235.2,713.882 2239.3,719.025 2243.4,722.028 2247.5,721.951 2251.6,718.285 2255.69,713.189 
  2259.79,705.674 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#e26f46; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,660.658 214.927,647.261 219.025,633.188 223.123,619.711 227.221,607.087 231.319,596.179 235.417,587.21 239.515,581.42 243.613,579.098 247.711,579.162 
  251.809,582.855 255.907,590.506 260.005,601.072 264.102,613.766 268.2,628.472 272.298,644.082 276.396,658.885 280.494,673.752 284.592,686.409 288.69,695.739 
  292.788,701.838 296.886,704.303 300.984,703.517 305.082,699.445 309.18,692.769 313.278,683.909 317.375,673.679 321.473,663.175 325.571,652.968 329.669,643.825 
  333.767,635.835 337.865,631.005 341.963,627.85 346.061,627.432 350.159,629.242 354.257,632.631 358.355,637.881 362.453,643.98 366.551,651.108 370.648,658.477 
  374.746,665.664 378.844,672.194 382.942,678.549 387.04,683.873 391.138,687.19 395.236,689.443 399.334,691.22 403.432,690.507 407.53,690.042 411.628,688.086 
  415.726,685.617 419.824,684.2 423.921,682.94 428.019,682.257 432.117,682.725 436.215,685.25 440.313,688.716 444.411,692.993 448.509,698.822 452.607,705.61 
  456.705,713.253 460.803,721.285 464.901,729.066 468.999,736.286 473.097,744.107 477.194,749.724 481.292,754.997 485.39,758.027 489.488,758.678 493.586,757.62 
  497.684,753.124 501.782,746.335 505.88,737.612 509.978,726.873 514.076,713.922 518.174,700.131 522.272,686.291 526.37,672.803 530.467,660.257 534.565,649.58 
  538.663,641.149 542.761,635.553 546.859,632.939 550.957,634.247 555.055,638.691 559.153,646.164 563.251,656.75 567.349,670.104 571.447,684.763 575.545,700.65 
  579.643,715.903 583.74,729.816 587.838,742.283 591.936,751.469 596.034,756.681 600.132,759.193 604.23,758.1 608.328,753.202 612.426,746.44 616.524,736.922 
  620.622,727.159 624.72,716.953 628.818,706.591 632.916,697.079 637.013,690.041 641.111,684.837 645.209,682.601 649.307,682.107 653.405,683.949 657.503,687.822 
  661.601,693.084 665.699,698.927 669.797,706.803 673.895,713.921 677.993,720.794 682.091,727.734 686.189,733.926 690.286,738.657 694.384,742.137 698.482,744.515 
  702.58,745.724 706.678,745.85 710.776,744.512 714.874,742.518 718.972,740.72 723.07,738.41 727.168,737.611 731.266,736.947 735.364,737.588 739.462,739.973 
  743.559,743.633 747.657,748.126 751.755,753.945 755.853,761.331 759.951,768.423 764.049,776.503 768.147,784.92 772.245,792.409 776.343,799.131 780.441,805.483 
  784.539,810.284 788.637,812.952 792.735,813.646 796.832,811.768 800.93,808.068 805.028,800.673 809.126,791.236 813.224,779.798 817.322,766.763 821.42,753.431 
  825.518,739.584 829.616,726.016 833.714,714.074 837.812,703.402 841.91,694.609 846.008,690.104 850.105,688.134 854.203,689.189 858.301,693.425 862.399,701.788 
  866.497,713.38 870.595,726.269 874.693,741.057 878.791,756.576 882.889,772.068 886.987,785.821 891.085,797.768 895.183,806.675 899.281,811.985 903.378,814.022 
  907.476,812.325 911.574,807.566 915.672,800.378 919.77,791.08 923.868,780.917 927.966,770.078 932.064,760.05 936.162,751.128 940.26,744.064 944.358,739.493 
  948.456,736.899 952.554,737.415 956.651,739.525 960.749,742.823 964.847,748.38 968.945,754.915 973.043,762.104 977.141,769.629 981.239,776.275 985.337,782.823 
  989.435,789.243 993.533,793.508 997.631,797.392 1001.73,799.391 1005.83,800.465 1009.92,800.127 1014.02,798.674 1018.12,797.175 1022.22,795.221 1026.32,793.346 
  1030.41,792.139 1034.51,791.288 1038.61,792.172 1042.71,795.297 1046.81,798.671 1050.9,803.42 1055,809.343 1059.1,816.536 1063.2,824.046 1067.3,832.048 
  1071.39,840.341 1075.49,847.545 1079.59,854.693 1083.69,860.554 1087.78,865.219 1091.88,867.785 1095.98,868.344 1100.08,866.703 1104.18,861.249 1108.27,854.102 
  1112.37,845.135 1116.47,832.936 1120.57,820.254 1124.67,806.291 1128.76,792.326 1132.86,779.321 1136.96,766.867 1141.06,757.042 1145.16,748.975 1149.25,744.257 
  1153.35,742.241 1157.45,744.094 1161.55,748.638 1165.65,757.624 1169.74,769.099 1173.84,782.635 1177.94,797.415 1182.04,812.989 1186.14,828.536 1190.23,842.136 
  1194.33,853.445 1198.43,862.162 1202.53,866.791 1206.62,868.732 1210.72,866.774 1214.82,861.795 1218.92,854.33 1223.02,844.874 1227.11,834.373 1231.21,823.316 
  1235.31,813.288 1239.41,804.795 1243.51,798.256 1247.6,793.796 1251.7,791.583 1255.8,792.11 1259.9,793.834 1264,798.135 1268.09,803.453 1272.19,810.002 
  1276.29,817.282 1280.39,824.573 1284.49,832.047 1288.58,838.417 1292.68,844.177 1296.78,848.826 1300.88,851.775 1304.97,854.745 1309.07,854.954 1313.17,854.663 
  1317.27,853.388 1321.37,851.517 1325.46,849.417 1329.56,847.935 1333.66,846.442 1337.76,846.23 1341.86,846.862 1345.95,850.026 1350.05,854.015 1354.15,859.023 
  1358.25,864.839 1362.35,872.343 1366.44,879.893 1370.54,887.399 1374.64,895.514 1378.74,903.246 1382.84,909.993 1386.93,915.724 1391.03,920.521 1395.13,922.92 
  1399.23,923.109 1403.33,920.493 1407.42,915.328 1411.52,908.224 1415.62,897.931 1419.72,886.299 1423.81,874.013 1427.91,859.888 1432.01,846.099 1436.11,832.356 
  1440.21,820.759 1444.3,811.251 1448.4,802.771 1452.5,798.307 1456.6,796.941 1460.7,798.87 1464.79,804.533 1468.89,813.518 1472.99,824.809 1477.09,838.718 
  1481.19,853.911 1485.28,869.403 1489.38,884.718 1493.48,898.231 1497.58,909.347 1501.68,917.841 1505.77,921.851 1509.87,923.136 1513.97,920.805 1518.07,916.077 
  1522.16,908.026 1526.26,898.035 1530.36,887.664 1534.46,877.135 1538.56,867.342 1542.65,858.998 1546.75,852.654 1550.85,848.162 1554.95,846.419 1559.05,846.502 
  1563.14,849.181 1567.24,853.222 1571.34,858.776 1575.44,865.487 1579.54,872.934 1583.63,879.856 1587.73,887.382 1591.83,894.033 1595.93,899.286 1600.03,904.587 
  1604.12,907.592 1608.22,908.78 1612.32,909.449 1616.42,909.321 1620.51,907.935 1624.61,905.604 1628.71,903.6 1632.81,902.036 1636.91,901.273 1641,900.648 
  1645.1,902.3 1649.2,905.276 1653.3,909.217 1657.4,914.305 1661.49,920.188 1665.59,927.891 1669.69,935.099 1673.79,943.122 1677.89,951.074 1681.98,958.484 
  1686.08,965.476 1690.18,971.416 1694.28,975.299 1698.38,977.347 1702.47,977.025 1706.57,974.519 1710.67,969.355 1714.77,961.878 1718.87,951.322 1722.96,939.71 
  1727.06,926.499 1731.16,912.944 1735.26,898.936 1739.35,886.38 1743.45,874.412 1747.55,864.663 1751.65,856.761 1755.75,853.122 1759.84,851.734 1763.94,854.266 
  1768.04,860.271 1772.14,869.091 1776.24,880.938 1780.33,895.037 1784.43,910.486 1788.53,926.34 1792.63,940.709 1796.73,954.515 1800.82,964.872 1804.92,972.955 
  1809.02,976.843 1813.12,977.991 1817.22,975.351 1821.31,969.6 1825.41,961.395 1829.51,951.671 1833.61,941.227 1837.7,930.584 1841.8,920.924 1845.9,912.909 
  1850,906.613 1854.1,902.218 1858.19,900.659 1862.29,901.44 1866.39,903.955 1870.49,908.819 1874.59,914.546 1878.68,920.948 1882.78,928.05 1886.88,935.485 
  1890.98,943.021 1895.08,948.749 1899.17,954.591 1903.27,959.061 1907.37,962.386 1911.47,963.651 1915.57,964.768 1919.66,963.807 1923.76,962.293 1927.86,960.318 
  1931.96,958.505 1936.06,956.463 1940.15,955.478 1944.25,955.728 1948.35,957.255 1952.45,960.021 1956.54,964.436 1960.64,969.439 1964.74,975.5 1968.84,983.439 
  1972.94,990.592 1977.03,999.024 1981.13,1006.76 1985.23,1014.23 1989.33,1021.08 1993.43,1026.19 1997.52,1030.31 2001.62,1032.34 2005.72,1031.67 2009.82,1029.22 
  2013.92,1023.26 2018.01,1015.2 2022.11,1005.04 2026.21,993.366 2030.31,979.828 2034.41,965.757 2038.5,951.967 2042.6,939.37 2046.7,927.743 2050.8,917.995 
  2054.89,911.531 2058.99,907.203 2063.09,906.682 2067.19,909.407 2071.29,915.526 2075.38,925.001 2079.48,936.894 2083.58,950.817 2087.68,966.848 2091.78,982.213 
  2095.87,996.872 2099.97,1009.9 2104.07,1020.72 2108.17,1027.85 2112.27,1032.22 2116.36,1032.48 2120.46,1029.53 2124.56,1023.2 2128.66,1014.9 2132.76,1005.39 
  2136.85,995 2140.95,984.202 2145.05,974.895 2149.15,966.535 2153.24,960.789 2157.34,956.751 2161.44,955.622 2165.54,956.22 2169.64,959.671 2173.73,964.241 
  2177.83,969.682 2181.93,976.476 2186.03,983.773 2190.13,991.005 2194.22,997.809 2198.32,1004.21 2202.42,1010.08 2206.52,1013.83 2210.62,1016.79 2214.71,1018.51 
  2218.81,1019.03 2222.91,1018.53 2227.01,1016.68 2231.11,1015.18 2235.2,1012.76 2239.3,1011.47 2243.4,1010.63 2247.5,1010.28 2251.6,1012.54 2255.69,1014.94 
  2259.79,1019.4 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1462.26 214.927,1454.22 219.025,1445.87 223.123,1438.07 227.221,1430.53 231.319,1424.28 235.417,1418.2 239.515,1413.89 243.613,1410.53 247.711,1408.83 
  251.809,1408.29 255.907,1408.72 260.005,1408.72 264.102,1410.21 268.2,1411.44 272.298,1412.45 276.396,1412.09 280.494,1411.89 284.592,1410.04 288.69,1406.46 
  292.788,1402.26 296.886,1396.43 300.984,1389.73 305.082,1382.18 309.18,1374.34 313.278,1367.01 317.375,1360.11 321.473,1355.09 325.571,1351.07 329.669,1349.35 
  333.767,1348.79 337.865,1349.76 341.963,1350.37 346.061,1352.27 350.159,1352.64 354.257,1351.88 358.355,1349.55 362.453,1345.48 366.551,1339.32 370.648,1331.33 
  374.746,1322.63 378.844,1313.23 382.942,1304 387.04,1295.19 391.138,1287.3 395.236,1280.76 399.334,1274.89 403.432,1270.68 407.53,1267.47 411.628,1265.65 
  415.726,1264.33 419.824,1264.63 423.921,1265.54 428.019,1266.89 432.117,1268.68 436.215,1271.73 440.313,1274.28 444.411,1277.3 448.509,1280.32 452.607,1282.69 
  456.705,1286.29 460.803,1288.41 464.901,1290.02 468.999,1292.51 473.097,1294.21 477.194,1295.4 481.292,1295.43 485.39,1295.27 489.488,1294.27 493.586,1292.45 
  497.684,1288.88 501.782,1284.34 505.88,1278.83 509.978,1272.58 514.076,1265.31 518.174,1257.26 522.272,1249.31 526.37,1241.1 530.467,1234.31 534.565,1227.69 
  538.663,1221.95 542.761,1217.21 546.859,1214.6 550.957,1212.59 555.055,1212.5 559.153,1212.2 563.251,1213.04 567.349,1214.27 571.447,1215.15 575.545,1216.54 
  579.643,1216.4 583.74,1215.97 587.838,1214.06 591.936,1210.2 596.034,1205.71 600.132,1199.5 604.23,1193.26 608.328,1185.22 612.426,1177.67 616.524,1170.37 
  620.622,1163.35 624.72,1158.82 628.818,1155.06 632.916,1153.3 637.013,1152.63 641.111,1153.57 645.209,1155.27 649.307,1156.23 653.405,1157.26 657.503,1155.62 
  661.601,1153.09 665.699,1148.64 669.797,1142.48 673.895,1134.42 677.993,1125.47 682.091,1115.97 686.189,1107.06 690.286,1098.55 694.384,1090.57 698.482,1084.08 
  702.58,1078.04 706.678,1074.39 710.776,1071.26 714.874,1068.78 718.972,1068.53 723.07,1068.52 727.168,1069.31 731.266,1071.02 735.364,1072.86 739.462,1075.73 
  743.559,1078.54 747.657,1081.45 751.755,1084.66 755.853,1087.61 759.951,1090.11 764.049,1092.36 768.147,1094.92 772.245,1096.66 776.343,1098.7 780.441,1099.25 
  784.539,1099.84 788.637,1099.23 792.735,1097.72 796.832,1096.38 800.93,1092.62 805.028,1088.01 809.126,1082.27 813.224,1075.56 817.322,1068.37 821.42,1059.92 
  825.518,1052.17 829.616,1044 833.714,1037.35 837.812,1030.96 841.91,1025.07 846.008,1021.09 850.105,1018.62 854.203,1016.54 858.301,1016.29 862.399,1016.42 
  866.497,1017.22 870.595,1018.38 874.693,1019.39 878.791,1020.23 882.889,1020.46 886.987,1019.49 891.085,1017.47 895.183,1013.76 899.281,1008.96 903.378,1003.24 
  907.476,996.084 911.574,988.519 915.672,980.638 919.77,974.115 923.868,966.989 927.966,962.122 932.064,958.537 936.162,957.148 940.26,956.858 944.358,957.957 
  948.456,959.357 952.554,960.191 956.651,960.641 960.749,959.897 964.847,956.707 968.945,951.789 973.043,945.363 977.141,937.628 981.239,928.733 985.337,919.35 
  989.435,910.607 993.533,901.514 997.631,893.627 1001.73,887.525 1005.83,882.115 1009.92,878.249 1014.02,874.987 1018.12,873.222 1022.22,872.783 1026.32,872.185 
  1030.41,873.548 1034.51,875.432 1038.61,877.092 1042.71,880.257 1046.81,883.083 1050.9,886.146 1055,888.779 1059.1,891.416 1063.2,894.493 1067.3,896.724 
  1071.39,899.205 1075.49,901.05 1079.59,902.162 1083.69,903.381 1087.78,903.953 1091.88,903.249 1095.98,902.021 1100.08,899.134 1104.18,896.454 1108.27,891.472 
  1112.37,885.084 1116.47,878.453 1120.57,870.89 1124.67,863.612 1128.76,855.404 1132.86,847.65 1136.96,840.054 1141.06,833.893 1145.16,828.797 1149.25,824.902 
  1153.35,821.865 1157.45,820.758 1161.55,820.145 1165.65,820.719 1169.74,821.513 1173.84,822.691 1177.94,824.173 1182.04,824.594 1186.14,824.881 1190.23,823.057 
  1194.33,820.89 1198.43,817.624 1202.53,812.777 1206.62,806.203 1210.72,799.325 1214.82,791.445 1218.92,783.933 1223.02,776.976 1227.11,770.277 1231.21,765.735 
  1235.31,762.762 1239.41,761.046 1243.51,760.747 1247.6,761.829 1251.7,763.098 1255.8,764.512 1259.9,765.017 1264,763.367 1268.09,760.183 1272.19,755.442 
  1276.29,748.67 1280.39,740.85 1284.49,731.805 1288.58,722.67 1292.68,713.329 1296.78,704.37 1300.88,696.832 1304.97,691.04 1309.07,685.437 1313.17,681.969 
  1317.27,678.674 1321.37,676.846 1325.46,676.251 1329.56,677.091 1333.66,677.994 1337.76,679.663 1341.86,681.626 1345.95,684.351 1350.05,687.245 1354.15,690.281 
  1358.25,693.132 1362.35,696.401 1366.44,698.682 1370.54,701.145 1374.64,703.527 1378.74,705.281 1382.84,706.73 1386.93,707.886 1391.03,708.144 1395.13,707.233 
  1399.23,706.266 1403.33,703.366 1407.42,699.586 1411.52,694.894 1415.62,689.048 1419.72,682.144 1423.81,674.453 1427.91,666.658 1432.01,658.301 1436.11,650.785 
  1440.21,643.089 1444.3,637.457 1448.4,632.149 1452.5,628.534 1456.6,625.818 1460.7,624.423 1464.79,624.056 1468.89,624.518 1472.99,625.438 1477.09,627.019 
  1481.19,627.91 1485.28,628.183 1489.38,628.781 1493.48,627.138 1497.58,624.987 1501.68,620.898 1505.77,616.145 1509.87,609.55 1513.97,602.466 1518.07,595.18 
  1522.16,587.058 1526.26,580.163 1530.36,574.205 1534.46,569.176 1538.56,566.418 1542.65,564.921 1546.75,565.081 1550.85,566 1554.95,567.35 1559.05,568.644 
  1563.14,568.41 1567.24,567.065 1571.34,564.069 1575.44,558.748 1579.54,552.01 1583.63,543.658 1587.73,534.601 1591.83,525.244 1595.93,516.411 1600.03,508.05 
  1604.12,500.336 1608.22,493.985 1612.32,489.034 1616.42,484.85 1620.51,482.141 1624.61,480.632 1628.71,480.767 1632.81,480.665 1636.91,481.952 1641,483.729 
  1645.1,486.077 1649.2,488.565 1653.3,491.483 1657.4,494.672 1661.49,497.713 1665.59,500.79 1669.69,503.067 1673.79,505.589 1677.89,507.581 1681.98,509.104 
  1686.08,510.658 1690.18,511.359 1694.28,511.97 1698.38,510.971 1702.47,509.304 1706.57,507.253 1710.67,503.524 1714.77,498.55 1718.87,492.23 1722.96,485.539 
  1727.06,477.872 1731.16,469.606 1735.26,461.537 1739.35,453.496 1743.45,446.932 1747.55,440.635 1751.65,435.701 1755.75,432.258 1759.84,429.629 1763.94,428.437 
  1768.04,428.075 1772.14,429.14 1776.24,429.697 1780.33,430.652 1784.43,431.781 1788.53,432.297 1792.63,432.244 1796.73,430.899 1800.82,428.514 1804.92,424.811 
  1809.02,419.348 1813.12,412.83 1817.22,405.657 1821.31,398.068 1825.41,390.468 1829.51,383.179 1833.61,377.771 1837.7,372.522 1841.8,370.551 1845.9,369.061 
  1850,369.206 1854.1,370.231 1858.19,371.27 1862.29,372.801 1866.39,372.33 1870.49,371.244 1874.59,367.476 1878.68,361.548 1882.78,355.06 1886.88,346.619 
  1890.98,337.834 1895.08,328.117 1899.17,319.67 1903.27,311.378 1907.37,303.785 1911.47,297.789 1915.57,292.747 1919.66,289.057 1923.76,286.187 1927.86,284.866 
  1931.96,284.164 1936.06,285.005 1940.15,285.967 1944.25,288.201 1948.35,290.543 1952.45,292.819 1956.54,295.995 1960.64,299.206 1964.74,302.006 1968.84,305.193 
  1972.94,307.16 1977.03,309.489 1981.13,311.931 1985.23,314.04 1989.33,314.757 1993.43,315.585 1997.52,315.932 2001.62,314.689 2005.72,313.578 2009.82,310.959 
  2013.92,306.75 2018.01,301.43 2022.11,295.359 2026.21,288.501 2030.31,280.957 2034.41,273.28 2038.5,264.685 2042.6,256.708 2046.7,250.032 2050.8,244.43 
  2054.89,239.19 2058.99,235.435 2063.09,233.184 2067.19,232.34 2071.29,232.038 2075.38,232.394 2079.48,233.915 2083.58,235.484 2087.68,236.061 2091.78,236.724 
  2095.87,236.066 2099.97,234.632 2104.07,232.115 2108.17,228.349 2112.27,222.797 2116.36,215.969 2120.46,208.822 2124.56,201.472 2128.66,193.791 2132.76,186.934 
  2136.85,180.854 2140.95,176.802 2145.05,174.09 2149.15,173.081 2153.24,173.417 2157.34,174.484 2161.44,175.542 2165.54,177.164 2169.64,176.212 2173.73,174.268 
  2177.83,171.051 2181.93,165.203 2186.03,157.763 2190.13,149.777 2194.22,140.736 2198.32,131.303 2202.42,122.538 2206.52,114.552 2210.62,106.647 2214.71,101.112 
  2218.81,96.0619 2222.91,92.7809 2227.01,89.9039 2231.11,88.839 2235.2,88.4582 2239.3,88.9636 2243.4,90.4319 2247.5,92.0718 2251.6,94.8618 2255.69,96.853 
  2259.79,100.549 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#c271d2; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1115.87 214.927,1121.5 219.025,1129.22 223.123,1138.25 227.221,1149.32 231.319,1161.44 235.417,1172.98 239.515,1185.3 243.613,1196.44 247.711,1205.83 
  251.809,1212.76 255.907,1216.72 260.005,1218.88 264.102,1216.65 268.2,1210.98 272.298,1203.94 276.396,1193.6 280.494,1181.58 284.592,1167.72 288.69,1154.35 
  292.788,1140.68 296.886,1127.85 300.984,1115.96 305.082,1105.61 309.18,1096.92 313.278,1089.37 317.375,1082.6 321.473,1077.47 325.571,1071.89 329.669,1067.39 
  333.767,1063.04 337.865,1058.45 341.963,1053.81 346.061,1048.87 350.159,1043.61 354.257,1038.27 358.355,1032.12 362.453,1025.86 366.551,1018.71 370.648,1010.95 
  374.746,1002.23 378.844,993.027 382.942,982.359 387.04,970.984 391.138,958.975 395.236,946.725 399.334,933.826 403.432,921.267 407.53,909.26 411.628,899.588 
  415.726,890.973 419.824,885.726 423.921,884.042 428.019,885.445 432.117,890.875 436.215,899.148 440.313,910.005 444.411,923.666 448.509,938.352 452.607,953.333 
  456.705,968.421 460.803,981.997 464.901,992.955 468.999,1002.56 473.097,1009.39 477.194,1013.81 481.292,1016.53 485.39,1016.89 489.488,1016.16 493.586,1014.43 
  497.684,1013.51 501.782,1012.39 505.88,1012.32 509.978,1014.82 514.076,1018.27 518.174,1023.99 522.272,1032.25 526.37,1042.13 530.467,1052.48 534.565,1064.8 
  538.663,1076.67 542.761,1088.56 546.859,1099.4 550.957,1108.48 555.055,1115.16 559.153,1119.46 563.251,1120.21 567.349,1118.06 571.447,1112.84 575.545,1104.64 
  579.643,1094.71 583.74,1081.96 587.838,1068.72 591.936,1054.77 596.034,1041.1 600.132,1028.13 604.23,1016.86 608.328,1006.43 612.426,997.779 616.524,990.507 
  620.622,984.317 624.72,979.192 628.818,973.458 632.916,968.541 637.013,964.762 641.111,960.041 645.209,955.266 649.307,950.56 653.405,945.518 657.503,939.805 
  661.601,933.91 665.699,927.435 669.797,920.155 673.895,912.525 677.993,903.34 682.091,894.14 686.189,883.328 690.286,871.874 694.384,859.604 698.482,847.233 
  702.58,834.402 706.678,821.787 710.776,810.458 714.874,800.537 718.972,792.182 723.07,787.74 727.168,785.941 731.266,787.772 735.364,793.184 739.462,802.417 
  743.559,813.849 747.657,827.195 751.755,841.984 755.853,857.456 759.951,871.785 764.049,885.196 768.147,896.311 772.245,905.398 776.343,912.56 780.441,917.069 
  784.539,918.741 788.637,919.153 792.735,917.89 796.832,916.446 800.93,915.073 805.028,914.219 809.126,915.09 813.224,917.158 817.322,920.969 821.42,926.972 
  825.518,935.138 829.616,945.482 833.714,955.976 837.812,968.38 841.91,980.067 846.008,991.819 850.105,1002.22 854.203,1011.55 858.301,1017.85 862.399,1021.71 
  866.497,1022.13 870.595,1019.87 874.693,1014.23 878.791,1006.01 882.889,995.737 886.987,982.722 891.085,969.512 895.183,955.403 899.281,942.196 903.378,929.043 
  907.476,917.704 911.574,907.586 915.672,898.73 919.77,891.81 923.868,885.69 927.966,879.843 932.064,874.95 936.162,870.82 940.26,866.25 944.358,861.665 
  948.456,856.921 952.554,851.818 956.651,846.568 960.749,840.699 964.847,834.859 968.945,828.418 973.043,821.371 977.141,813.388 981.239,804.562 985.337,794.892 
  989.435,784.557 993.533,772.679 997.631,760.223 1001.73,747.703 1005.83,735.049 1009.92,722.564 1014.02,711.142 1018.12,701.226 1022.22,694.19 1026.32,689.228 
  1030.41,687.736 1034.51,690.575 1038.61,696.131 1042.71,705.3 1046.81,716.988 1050.9,730.951 1055,745.451 1059.1,760.774 1063.2,775.354 1067.3,788.602 
  1071.39,799.88 1075.49,808.256 1079.59,814.616 1083.69,819.071 1087.78,821.021 1091.88,820.857 1095.98,820.277 1100.08,818.042 1104.18,817.167 1108.27,816.651 
  1112.37,817.249 1116.47,819.837 1120.57,823.446 1124.67,830.019 1128.76,838.344 1132.86,847.628 1136.96,859.316 1141.06,871.353 1145.16,883.432 1149.25,895.598 
  1153.35,905.713 1157.45,914.436 1161.55,920.589 1165.65,923.876 1169.74,924.609 1173.84,921.685 1177.94,915.527 1182.04,906.576 1186.14,895.737 1190.23,883.238 
  1194.33,869.815 1198.43,855.443 1202.53,841.967 1206.62,829.868 1210.72,818.545 1214.82,808.396 1218.92,800.252 1223.02,793.658 1227.11,787.062 1231.21,781.673 
  1235.31,777.072 1239.41,771.967 1243.51,767.612 1247.6,763.115 1251.7,757.913 1255.8,753.333 1259.9,748.488 1264,742.404 1268.09,736.577 1272.19,729.676 
  1276.29,722.714 1280.39,714.385 1284.49,705.638 1288.58,695.829 1292.68,685.253 1296.78,673.255 1300.88,661.335 1304.97,648.573 1309.07,635.574 1313.17,623.38 
  1317.27,612.09 1321.37,602.702 1325.46,595.02 1329.56,590.593 1333.66,589.869 1337.76,592.689 1341.86,598.806 1345.95,608.396 1350.05,620.672 1354.15,634.378 
  1358.25,649.678 1362.35,665.204 1366.44,679.024 1370.54,691.692 1374.64,702.749 1378.74,711.211 1382.84,717.591 1386.93,721.397 1391.03,722.769 1395.13,723.231 
  1399.23,721.63 1403.33,720.085 1407.42,719.487 1411.52,718.329 1415.62,719.562 1419.72,722.203 1423.81,726.476 1427.91,732.372 1432.01,741.23 1436.11,751.356 
  1440.21,762.345 1444.3,775.157 1448.4,786.825 1452.5,798.139 1456.6,808.989 1460.7,816.923 1464.79,823.372 1468.89,826.418 1472.99,826.021 1477.09,822.658 
  1481.19,816.418 1485.28,807.928 1489.38,796.332 1493.48,783.575 1497.58,770.17 1501.68,756.405 1505.77,743.067 1509.87,730.19 1513.97,719.348 1518.07,709.346 
  1522.16,701.479 1526.26,693.858 1530.36,688.429 1534.46,682.833 1538.56,677.702 1542.65,673.54 1546.75,669.217 1550.85,664.371 1554.95,659.588 1559.05,654.871 
  1563.14,649.332 1567.24,644.064 1571.34,637.741 1575.44,631.334 1579.54,623.72 1583.63,615.553 1587.73,607.002 1591.83,596.301 1595.93,585.65 1600.03,574.503 
  1604.12,562.129 1608.22,549.253 1612.32,536.748 1616.42,524.169 1620.51,512.796 1624.61,503.457 1628.71,497.122 1632.81,492.47 1636.91,492.248 1641,495.001 
  1645.1,501.857 1649.2,511.525 1653.3,523.923 1657.4,538.123 1661.49,553.151 1665.59,567.912 1669.69,582.451 1673.79,595.235 1677.89,605.989 1681.98,614.499 
  1686.08,619.647 1690.18,623.673 1694.28,625.103 1698.38,624.393 1702.47,623.745 1706.57,622.342 1710.67,620.942 1714.77,620.608 1718.87,621.635 1722.96,624.347 
  1727.06,628.918 1731.16,635.452 1735.26,644.175 1739.35,654.776 1743.45,665.735 1747.55,678.302 1751.65,690.232 1755.75,701.917 1759.84,711.602 1763.94,719.647 
  1768.04,725.72 1772.14,728.253 1776.24,728.116 1780.33,724.429 1784.43,718.165 1788.53,708.726 1792.63,697.644 1796.73,684.641 1800.82,670.847 1804.92,657.013 
  1809.02,643.283 1813.12,631.154 1817.22,620.258 1821.31,610.835 1825.41,602.505 1829.51,595.678 1833.61,589.818 1837.7,584.528 1841.8,579.56 1845.9,575.272 
  1850,570.455 1854.1,566.188 1858.19,561.27 1862.29,556.31 1866.39,550.719 1870.49,545.52 1874.59,538.973 1878.68,532.261 1882.78,525.317 1886.88,516.734 
  1890.98,507.395 1895.08,497.634 1899.17,486.614 1903.27,474.998 1907.37,462.425 1911.47,449.596 1915.57,437.123 1919.66,425.334 1923.76,414.215 1927.86,404.862 
  1931.96,398.285 1936.06,394.138 1940.15,394.187 1944.25,397.749 1948.35,404.908 1952.45,414.702 1956.54,427.285 1960.64,441.749 1964.74,456.982 1968.84,472.285 
  1972.94,485.879 1977.03,498.569 1981.13,508.597 1985.23,516.907 1989.33,522.456 1993.43,525.806 1997.52,527.305 2001.62,527.003 2005.72,525.828 2009.82,523.998 
  2013.92,523.237 2018.01,522.71 2022.11,523.977 2026.21,526.535 2030.31,531.305 2034.41,538.438 2038.5,547.295 2042.6,557.887 2046.7,569.475 2050.8,581.39 
  2054.89,593.701 2058.99,605.259 2063.09,614.747 2067.19,622.695 2071.29,627.995 2075.38,630.436 2079.48,629.911 2083.58,625.982 2087.68,618.735 2091.78,609.336 
  2095.87,598.122 2099.97,585.095 2104.07,571.196 2108.17,557.372 2112.27,544.502 2116.36,532.056 2120.46,521.561 2124.56,512.151 2128.66,503.611 2132.76,496.922 
  2136.85,490.926 2140.95,485.832 2145.05,481.022 2149.15,476.67 2153.24,472.39 2157.34,468.009 2161.44,462.742 2165.54,457.794 2169.64,452.273 2173.73,446.579 
  2177.83,440.665 2181.93,433.732 2186.03,426.226 2190.13,417.868 2194.22,408.393 2198.32,398.134 2202.42,387.54 2206.52,375.414 2210.62,363.505 2214.71,350.451 
  2218.81,337.409 2222.91,325.441 2227.01,314.992 2231.11,306.067 2235.2,299.478 2239.3,296.376 2243.4,296.529 2247.5,300.789 2251.6,307.863 2255.69,318.105 
  2259.79,330.901 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#ac8d18; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,512.207 214.927,510.119 219.025,507.378 223.123,503.723 227.221,499.699 231.319,494.855 235.417,489.652 239.515,484.349 243.613,479.422 247.711,473.865 
  251.809,469.864 255.907,465.039 260.005,461.557 264.102,459.087 268.2,457.333 272.298,456.004 276.396,455.868 280.494,455.174 284.592,453.961 288.69,451.646 
  292.788,448.821 296.886,443.868 300.984,437.631 305.082,429.267 309.18,418.962 313.278,407.736 317.375,394.304 321.473,381 325.571,366.934 329.669,354.274 
  333.767,342.141 337.865,331.75 341.963,324.543 346.061,319.371 350.159,317.497 354.257,318.759 358.355,322.598 362.453,329.771 366.551,338.873 370.648,349.898 
  374.746,362.639 378.844,376.371 382.942,391.225 387.04,406.839 391.138,421.808 395.236,436.967 399.334,452.245 403.432,466.796 407.53,481.766 411.628,495.342 
  415.726,508.615 419.824,521.386 423.921,534.477 428.019,547.042 432.117,558.761 436.215,570.294 440.313,581.309 444.411,590.934 448.509,600.532 452.607,609.494 
  456.705,617.141 460.803,624.999 464.901,630.808 468.999,636.424 473.097,640.799 477.194,643.876 481.292,646.581 485.39,648.779 489.488,650.12 493.586,651.006 
  497.684,650.935 501.782,651.122 505.88,650.495 509.978,649.04 514.076,647.265 518.174,644.971 522.272,642.076 526.37,638.767 530.467,634.918 534.565,629.945 
  538.663,624.951 542.761,619.703 546.859,614.007 550.957,609.021 555.055,603.481 559.153,599.52 563.251,596.847 567.349,594.176 571.447,592.382 575.545,591.524 
  579.643,590.641 583.74,589.763 587.838,588.67 591.936,586.822 596.034,583.543 600.132,578.961 604.23,572.307 608.328,563.638 612.426,554.046 616.524,541.571 
  620.622,528.66 624.72,514.768 628.818,501.095 632.916,488.118 637.013,475.582 641.111,466.369 645.209,458.862 649.307,454.406 653.405,452.953 657.503,454.118 
  661.601,458.578 665.699,465.515 669.797,475.378 673.895,486.707 677.993,499.674 682.091,513.702 686.189,528.871 690.286,543.302 694.384,558.597 698.482,574.315 
  702.58,588.694 706.678,603.601 710.776,618.019 714.874,631.506 718.972,645.325 723.07,658.747 727.168,671.375 731.266,683.784 735.364,695.14 739.462,706.632 
  743.559,717.508 747.657,727.763 751.755,736.774 755.853,745.223 759.951,753.242 764.049,760.311 768.147,766.885 772.245,771.711 776.343,775.96 780.441,779.445 
  784.539,782.02 788.637,783.377 792.735,785.487 796.832,785.939 800.93,786.125 805.028,785.934 809.126,785.525 813.224,784.412 817.322,782.242 821.42,779.763 
  825.518,777.448 829.616,773.468 833.714,769.386 837.812,764.349 841.91,759.214 846.008,754.168 850.105,748.888 854.203,744.013 858.301,738.815 862.399,734.992 
  866.497,731.108 870.595,728.718 874.693,727.39 878.791,726.238 882.889,725.618 886.987,725.468 891.085,724.232 895.183,721.764 899.281,718.163 903.378,713.677 
  907.476,706.382 911.574,698.268 915.672,687.54 919.77,675.698 923.868,662.619 927.966,648.532 932.064,634.65 936.162,621.513 940.26,610.168 944.358,600.368 
  948.456,593.332 952.554,588.899 956.651,588.116 960.749,589.737 964.847,594.538 968.945,602.108 973.043,611.735 977.141,623.082 981.239,635.967 985.337,649.998 
  989.435,665.531 993.533,680.644 997.631,696.132 1001.73,711.211 1005.83,726.286 1009.92,740.239 1014.02,754.752 1018.12,769.022 1022.22,782.461 1026.32,795.163 
  1030.41,807.712 1034.51,820.403 1038.61,832.387 1042.71,843.055 1046.81,854.273 1050.9,864.097 1055,872.902 1059.1,881.917 1063.2,889.647 1067.3,896.579 
  1071.39,902.57 1075.49,907.516 1079.59,911.818 1083.69,914.98 1087.78,917.91 1091.88,919.421 1095.98,920.947 1100.08,921.245 1104.18,921.735 1108.27,921.318 
  1112.37,920.887 1116.47,919.36 1120.57,917.617 1124.67,914.879 1128.76,912.046 1132.86,908.408 1136.96,903.56 1141.06,899.443 1145.16,894.214 1149.25,888.792 
  1153.35,883.184 1157.45,878.22 1161.55,873.459 1165.65,869.321 1169.74,866.358 1173.84,864.108 1177.94,862.486 1182.04,861.852 1186.14,861.572 1190.23,860.294 
  1194.33,858.7 1198.43,856.431 1202.53,853.114 1206.62,847.574 1210.72,841.194 1214.82,831.818 1218.92,821.411 1223.02,808.932 1227.11,796.398 1231.21,781.917 
  1235.31,768.691 1239.41,755.554 1243.51,743.854 1247.6,735.085 1251.7,728.262 1255.8,724.351 1259.9,722.926 1264,725.748 1268.09,730.397 1272.19,737.872 
  1276.29,747.991 1280.39,759.551 1284.49,772.939 1288.58,787.4 1292.68,802.044 1296.78,817.506 1300.88,833.084 1304.97,848.504 1309.07,862.916 1313.17,877.502 
  1317.27,891.44 1321.37,905.867 1325.46,919.054 1329.56,931.896 1333.66,944.387 1337.76,957.082 1341.86,968.487 1345.95,979.342 1350.05,990.198 1354.15,1000.35 
  1358.25,1009.1 1362.35,1018.08 1366.44,1025.11 1370.54,1032.68 1374.64,1038.57 1378.74,1042.99 1382.84,1047.62 1386.93,1050.71 1391.03,1053.38 1395.13,1054.78 
  1399.23,1056.36 1403.33,1056.46 1407.42,1056.69 1411.52,1056.16 1415.62,1055.26 1419.72,1054.32 1423.81,1052.71 1427.91,1050.2 1432.01,1047.05 1436.11,1043.43 
  1440.21,1038.72 1444.3,1034.26 1448.4,1029.08 1452.5,1023.41 1456.6,1017.94 1460.7,1013.02 1464.79,1008.45 1468.89,1004.85 1472.99,1001.63 1477.09,998.956 
  1481.19,997.512 1485.28,996.967 1489.38,996.217 1493.48,995.468 1497.58,994.328 1501.68,991.584 1505.77,987.806 1509.87,982.559 1513.97,974.818 1518.07,966.367 
  1522.16,955.162 1526.26,943.258 1530.36,929.643 1534.46,915.642 1538.56,901.864 1542.65,889.944 1546.75,878.121 1550.85,869.326 1554.95,863.118 1559.05,859.498 
  1563.14,858.902 1567.24,861.159 1571.34,866.548 1575.44,874.681 1579.54,884.596 1583.63,896.812 1587.73,909.659 1591.83,923.997 1595.93,939.124 1600.03,954.173 
  1604.12,969.785 1608.22,985.077 1612.32,1000.23 1616.42,1014.3 1620.51,1028.47 1624.61,1042.11 1628.71,1055.44 1632.81,1068.55 1636.91,1080.97 1641,1093.48 
  1645.1,1105.11 1649.2,1116 1653.3,1126.48 1657.4,1136.56 1661.49,1145.6 1665.59,1154.22 1669.69,1161.34 1673.79,1167.7 1677.89,1173.99 1681.98,1179.34 
  1686.08,1182.86 1690.18,1186.24 1694.28,1188.4 1698.38,1190.22 1702.47,1190.99 1706.57,1191.89 1710.67,1191.67 1714.77,1191.32 1718.87,1190.96 1722.96,1189.6 
  1727.06,1187.56 1731.16,1185.13 1735.26,1181.87 1739.35,1177.68 1743.45,1173.67 1747.55,1168.63 1751.65,1163.44 1755.75,1158.47 1759.84,1152.36 1763.94,1148.01 
  1768.04,1142.99 1772.14,1139.23 1776.24,1136.69 1780.33,1134.48 1784.43,1132.78 1788.53,1132.23 1792.63,1131.42 1796.73,1130.43 1800.82,1129.66 1804.92,1126.85 
  1809.02,1122.42 1813.12,1117.24 1817.22,1109.35 1821.31,1100.41 1825.41,1089.5 1829.51,1076.93 1833.61,1063.81 1837.7,1049.41 1841.8,1035.93 1845.9,1023.13 
  1850,1012.68 1854.1,1003.48 1858.19,997.296 1862.29,994.227 1866.39,993.591 1870.49,996.948 1874.59,1002.22 1878.68,1010.75 1882.78,1020.45 1886.88,1033.05 
  1890.98,1046.56 1895.08,1061.02 1899.17,1076.01 1903.27,1091.15 1907.37,1106.64 1911.47,1121.61 1915.57,1136.45 1919.66,1151.05 1923.76,1165.63 1927.86,1178.92 
  1931.96,1192.08 1936.06,1204.94 1940.15,1218.2 1944.25,1229.55 1948.35,1241.44 1952.45,1252.74 1956.54,1263.09 1960.64,1272.67 1964.74,1282.09 1968.84,1289.71 
  1972.94,1297.67 1977.03,1304.33 1981.13,1310.15 1985.23,1314.48 1989.33,1318.88 1993.43,1321.66 1997.52,1323.82 2001.62,1326.3 2005.72,1326.84 2009.82,1327.12 
  2013.92,1327.14 2018.01,1326.71 2022.11,1325.98 2026.21,1324.63 2030.31,1322.5 2034.41,1319.73 2038.5,1316.45 2042.6,1312.99 2046.7,1308.15 2050.8,1303.48 
  2054.89,1298.61 2058.99,1292.82 2063.09,1287.33 2067.19,1282.07 2071.29,1277.89 2075.38,1274.54 2079.48,1271.46 2083.58,1269.28 2087.68,1268.02 2091.78,1266.8 
  2095.87,1266.25 2099.97,1265.15 2104.07,1264.41 2108.17,1261.45 2112.27,1256.88 2116.36,1251.27 2120.46,1243.92 2124.56,1233.89 2128.66,1223.19 2132.76,1211.15 
  2136.85,1197.18 2140.95,1183.25 2145.05,1170 2149.15,1157.21 2153.24,1146 2157.34,1138.32 2161.44,1132.43 2165.54,1129.16 2169.64,1129.51 2173.73,1132.63 
  2177.83,1138.42 2181.93,1146.86 2186.03,1157.55 2190.13,1169.71 2194.22,1184.02 2198.32,1197.89 2202.42,1213.01 2206.52,1228.34 2210.62,1243.14 2214.71,1258.76 
  2218.81,1273.43 2222.91,1287.86 2227.01,1301.81 2231.11,1315.89 2235.2,1329.15 2239.3,1341.8 2243.4,1353.86 2247.5,1366.52 2251.6,1378.19 2255.69,1388.91 
  2259.79,1399.2 
  &#34;/&gt;
&lt;/svg&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;kernel_prod &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Lin(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Periodic(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_prod &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GPE(kernel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; kernel_prod)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(gp_prod, xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(xs, samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6900&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6900)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6901&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6900)&#34; points=&#34;
189.504,1503.47 2321.26,1503.47 2321.26,47.2441 189.504,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6902&#34;&gt;
    &lt;rect x=&#34;189&#34; y=&#34;47&#34; width=&#34;2133&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  450.946,1503.47 450.946,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  853.164,1503.47 853.164,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1255.38,1503.47 1255.38,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1657.6,1503.47 1657.6,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2059.82,1503.47 2059.82,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1349.09 2321.26,1349.09 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1160.16 2321.26,1160.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,971.233 2321.26,971.233 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,782.304 2321.26,782.304 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,593.376 2321.26,593.376 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,404.447 2321.26,404.447 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,215.519 2321.26,215.519 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 189.504,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  450.946,1503.47 450.946,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  853.164,1503.47 853.164,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1255.38,1503.47 1255.38,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1657.6,1503.47 1657.6,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2059.82,1503.47 2059.82,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1349.09 221.48,1349.09 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1160.16 221.48,1160.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,971.233 221.48,971.233 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,782.304 221.48,782.304 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,593.376 221.48,593.376 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,404.447 221.48,404.447 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,215.519 221.48,215.519 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 450.946, 1557.47)&#34; x=&#34;450.946&#34; y=&#34;1557.47&#34;&gt;-20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 853.164, 1557.47)&#34; x=&#34;853.164&#34; y=&#34;1557.47&#34;&gt;-10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1255.38, 1557.47)&#34; x=&#34;1255.38&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1657.6, 1557.47)&#34; x=&#34;1657.6&#34; y=&#34;1557.47&#34;&gt;10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2059.82, 1557.47)&#34; x=&#34;2059.82&#34; y=&#34;1557.47&#34;&gt;20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1366.59)&#34; x=&#34;165.504&#34; y=&#34;1366.59&#34;&gt;-7.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1177.66)&#34; x=&#34;165.504&#34; y=&#34;1177.66&#34;&gt;-5.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 988.733)&#34; x=&#34;165.504&#34; y=&#34;988.733&#34;&gt;-2.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 799.804)&#34; x=&#34;165.504&#34; y=&#34;799.804&#34;&gt;0.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 610.876)&#34; x=&#34;165.504&#34; y=&#34;610.876&#34;&gt;2.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 421.947)&#34; x=&#34;165.504&#34; y=&#34;421.947&#34;&gt;5.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 233.019)&#34; x=&#34;165.504&#34; y=&#34;233.019&#34;&gt;7.5&lt;/text&gt;
&lt;/g&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#009af9; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,699.897 253.859,728.434 257.881,753.01 261.903,773.155 265.926,788.905 269.948,799.917 273.97,806.616 277.992,809.037 282.014,808.231 286.036,804.965 
  290.059,799.028 294.081,791.64 298.103,782.986 302.125,773.251 306.147,763.256 310.17,753.535 314.192,744.215 318.214,735.889 322.236,729.18 326.258,724.004 
  330.28,721.202 334.303,720.457 338.325,722.868 342.347,728.014 346.369,735.451 350.391,745.12 354.414,756.404 358.436,770.185 362.458,783.918 366.48,798.253 
  370.502,811.791 374.524,824.301 378.547,834.407 382.569,841.917 386.591,845.862 390.613,845.454 394.635,841.525 398.658,832.862 402.68,820.813 406.702,804.901 
  410.724,786.339 414.746,765.276 418.768,742.261 422.791,718.754 426.813,694.61 430.835,670.574 434.857,647.328 438.879,624.54 442.902,603.015 446.924,581.514 
  450.946,560.731 454.968,540.566 458.99,521.023 463.012,502.239 467.035,484.611 471.057,469.158 475.079,456.054 479.101,446.233 483.123,440.784 487.145,439.659 
  491.168,442.605 495.19,449.781 499.212,461.051 503.234,475.487 507.256,492.528 511.279,512.534 515.301,533.705 519.323,556.823 523.345,580.521 527.367,605.546 
  531.389,630.645 535.412,655.686 539.434,680.658 543.456,704.747 547.478,726.751 551.5,746.325 555.523,763.367 559.545,777.273 563.567,787.71 567.589,795.192 
  571.611,799.706 575.633,801.081 579.656,800.064 583.678,797.68 587.7,793.411 591.722,787.931 595.744,781.889 599.767,775.298 603.789,768.575 607.811,762.058 
  611.833,755.57 615.855,750.032 619.877,745.614 623.9,742.274 627.922,740.707 631.944,740.811 635.966,742.49 639.988,745.995 644.011,751.168 648.033,758.115 
  652.055,765.943 656.077,774.853 660.099,784.359 664.121,793.966 668.144,802.883 672.166,810.886 676.188,817.527 680.21,822.023 684.232,824.334 688.255,823.595 
  692.277,820.626 696.299,814.535 700.321,806.42 704.343,795.898 708.365,783.376 712.388,769.719 716.41,755.164 720.432,739.483 724.454,724.353 728.476,709.283 
  732.499,694.49 736.521,680.392 740.543,666.957 744.565,653.964 748.587,641.094 752.609,629.016 756.632,617.219 760.654,606.079 764.676,595.978 768.698,586.5 
  772.72,579.703 776.742,574.675 780.765,572.17 784.787,572.361 788.809,574.901 792.831,580.582 796.853,588.121 800.876,597.888 804.898,609.259 808.92,621.668 
  812.942,635.286 816.964,649.52 820.986,664.473 825.009,679.649 829.031,694.581 833.053,709.718 837.075,724.757 841.097,738.549 845.12,751.328 849.142,762.504 
  853.164,772.327 857.186,780.165 861.208,785.825 865.23,789.753 869.253,791.898 873.275,792.833 877.297,792.133 881.319,790.627 885.341,788.181 889.364,785.12 
  893.386,781.819 897.408,778.185 901.43,774.442 905.452,770.979 909.474,767.719 913.497,764.92 917.519,762.355 921.541,760.954 925.563,760.264 929.585,760.619 
  933.608,761.537 937.63,763.729 941.652,766.834 945.674,770.055 949.696,774.688 953.718,779.034 957.741,783.658 961.763,788.495 965.785,792.944 969.807,796.705 
  973.829,799.872 977.852,801.443 981.874,802.48 985.896,801.972 989.918,800.419 993.94,796.999 997.962,793.167 1001.98,787.826 1006.01,782.206 1010.03,776.029 
  1014.05,769.345 1018.07,763.048 1022.1,756.191 1026.12,749.736 1030.14,743.756 1034.16,738.272 1038.18,733.003 1042.21,728.127 1046.23,723.516 1050.25,719.097 
  1054.27,715.144 1058.3,711.505 1062.32,708.466 1066.34,705.912 1070.36,704.443 1074.38,703.357 1078.41,703.766 1082.43,704.875 1086.45,707.191 1090.47,710.332 
  1094.49,714.507 1098.52,718.9 1102.54,723.889 1106.56,729.334 1110.58,734.534 1114.61,740.096 1118.63,745.658 1122.65,751.327 1126.67,756.336 1130.69,761.449 
  1134.72,766.088 1138.74,770.469 1142.76,774.184 1146.78,777.002 1150.81,779.968 1154.83,781.732 1158.85,783.698 1162.87,784.333 1166.89,784.388 1170.92,784.717 
  1174.94,784.344 1178.96,784.023 1182.98,783.521 1187,782.817 1191.03,782.308 1195.05,781.339 1199.07,781.403 1203.09,780.542 1207.12,780.125 1211.14,780.03 
  1215.16,779.812 1219.18,779.876 1223.2,779.963 1227.23,780.206 1231.25,780.852 1235.27,780.867 1239.29,781.502 1243.32,781.745 1247.34,782.002 1251.36,782.453 
  1255.38,782.333 1259.4,782.208 1263.43,782.173 1267.45,781.694 1271.47,781.209 1275.49,780.934 1279.52,780.51 1283.54,780.57 1287.56,780.033 1291.58,780.237 
  1295.6,780.739 1299.63,781.685 1303.65,782.298 1307.67,783.997 1311.69,785.322 1315.71,787.516 1319.74,789.696 1323.76,792.286 1327.78,795.125 1331.8,797.715 
  1335.83,800.857 1339.85,804.195 1343.87,807.518 1347.89,810.999 1351.91,814.798 1355.94,818.803 1359.96,822.166 1363.98,826.049 1368,829.783 1372.03,833.329 
  1376.05,835.929 1380.07,837.991 1384.09,839.416 1388.11,840 1392.14,839.525 1396.16,838.691 1400.18,837.138 1404.2,835.106 1408.22,832.284 1412.25,828.699 
  1416.27,824.777 1420.29,820.39 1424.31,815.917 1428.34,810.59 1432.36,805.51 1436.38,800.432 1440.4,794.875 1444.42,790.215 1448.45,786.469 1452.47,782.634 
  1456.49,779.913 1460.51,778.077 1464.54,776.871 1468.56,776.514 1472.58,776.699 1476.6,777.895 1480.62,779.079 1484.65,780.615 1488.67,783.333 1492.69,785.49 
  1496.71,788.292 1500.73,790.856 1504.76,793.379 1508.78,795.705 1512.8,797.813 1516.82,799.135 1520.85,799.959 1524.87,800.237 1528.89,799.385 1532.91,798.071 
  1536.93,795.908 1540.96,792.591 1544.98,788.717 1549,784.538 1553.02,779.477 1557.05,774.651 1561.07,769.983 1565.09,765.852 1569.11,762.126 1573.13,759.841 
  1577.16,758.694 1581.18,758.973 1585.2,760.923 1589.22,764.37 1593.25,769.608 1597.27,776.602 1601.29,784.746 1605.31,793.307 1609.33,803.432 1613.36,814.284 
  1617.38,825.391 1621.4,836.695 1625.42,847.834 1629.44,859.107 1633.47,870.375 1637.49,881.968 1641.51,893.109 1645.53,904.784 1649.56,915.964 1653.58,927.475 
  1657.6,938.432 1661.62,948.24 1665.64,956.38 1669.67,963.701 1673.69,968.446 1677.71,970.965 1681.73,970.857 1685.76,968.597 1689.78,964.249 1693.8,957.272 
  1697.82,949.092 1701.84,938.995 1705.87,928.032 1709.89,915.483 1713.91,902.164 1717.93,887.873 1721.95,872.976 1725.98,857.701 1730,842.348 1734.02,828.236 
  1738.04,814.098 1742.07,801.695 1746.09,791.087 1750.11,782.344 1754.13,775.966 1758.15,771.198 1762.18,768.911 1766.2,768.231 1770.22,769.316 1774.24,771.816 
  1778.27,775.496 1782.29,780.046 1786.31,784.781 1790.33,790.137 1794.35,796.432 1798.38,801.878 1802.4,807.211 1806.42,812.139 1810.44,815.785 1814.47,818.638 
  1818.49,820.241 1822.51,820.006 1826.53,817.918 1830.55,814.44 1834.58,808.972 1838.6,802.423 1842.62,794.65 1846.64,785.589 1850.66,775.971 1854.69,766.444 
  1858.71,757.227 1862.73,749.206 1866.75,742.388 1870.78,738.173 1874.8,736.664 1878.82,737.901 1882.84,742.251 1886.86,749.497 1890.89,759.811 1894.91,772.621 
  1898.93,787.965 1902.95,805.36 1906.98,823.511 1911,842.518 1915.02,862.919 1919.04,882.583 1923.06,902.547 1927.09,922.069 1931.11,941.611 1935.13,961.221 
  1939.15,980.081 1943.17,999.819 1947.2,1018.87 1951.22,1037.71 1955.24,1055.29 1959.26,1070.68 1963.29,1084.24 1967.31,1094.6 1971.33,1100.85 1975.35,1103.18 
  1979.37,1101.93 1983.4,1096.21 1987.42,1087.27 1991.44,1074.26 1995.46,1059.24 1999.49,1041.3 2003.51,1021.21 2007.53,1000.1 2011.55,977.198 2015.57,952.902 
  2019.6,928 2023.62,902.916 2027.64,877.987 2031.66,853.453 2035.69,831.541 2039.71,811.861 2043.73,794.838 2047.75,781.156 2051.77,770.984 2055.8,764.269 
  2059.82,760.753 2063.84,760.202 2067.86,762.313 2071.88,766.321 2075.91,772.225 2079.93,779.279 2083.95,787.282 2087.97,795.974 2092,805.011 2096.02,813.475 
  2100.04,821.548 2104.06,828.958 2108.08,834.414 2112.11,838.554 2116.13,839.996 2120.15,839.027 2124.17,836.022 2128.2,830.213 2132.22,821.899 2136.24,811.213 
  2140.26,799.225 2144.28,785.819 2148.31,771.278 2152.33,756.944 2156.35,743.891 2160.37,731.916 2164.39,722.487 2168.42,716.704 2172.44,714.821 2176.46,716.937 
  2180.48,724.187 2184.51,735.108 2188.53,751.11 2192.55,770.305 2196.57,793.286 2200.59,818.343 2204.62,845.401 2208.64,873.219 2212.66,902.11 2216.68,931.004 
  2220.71,959.17 2224.73,987.293 2228.75,1014.95 2232.77,1042.4 2236.79,1069.54 2240.82,1096.59 2244.84,1123.62 2248.86,1149.33 2252.88,1173.47 2256.9,1194.71 
  2260.93,1212.68 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#e26f46; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,649.061 253.859,631.768 257.881,616.943 261.903,605.212 265.926,596.628 269.948,591.867 273.97,590.711 277.992,593.117 282.014,598.728 286.036,608.512 
  290.059,621.373 294.081,638.125 298.103,657.782 302.125,681.196 306.147,707.846 310.17,738.039 314.192,771.137 318.214,807.107 322.236,846.245 326.258,887.686 
  330.28,931.094 334.303,975.062 338.325,1019.72 342.347,1063.09 346.369,1103.85 350.391,1141 354.414,1172.98 358.436,1198.55 362.458,1216.59 366.48,1226.13 
  370.502,1228.35 374.524,1221.99 378.547,1208.23 382.569,1187.92 386.591,1162.12 390.613,1131.09 394.635,1096.77 398.658,1059.25 402.68,1018.86 406.702,976.808 
  410.724,932.835 414.746,886.729 418.768,839.587 422.791,791.387 426.813,743.121 430.835,695.328 434.857,650.365 438.879,608.32 442.902,571.175 446.924,540.003 
  450.946,515.872 454.968,499.825 458.99,491.17 463.012,491.316 467.035,499.229 471.057,514.515 475.079,535.851 479.101,562.622 483.123,592.336 487.145,624.516 
  491.168,656.09 495.19,685.685 499.212,712.626 503.234,735.212 507.256,751.84 511.279,763.041 515.301,768.177 519.323,767.928 523.345,763.06 527.367,754.481 
  531.389,742.7 535.412,728.977 539.434,715.079 543.456,700.611 547.478,687.133 551.5,675.407 555.523,665.352 559.545,657.389 563.567,652.102 567.589,648.891 
  571.611,648.77 575.633,650.871 579.656,655.509 583.678,662.643 587.7,672.049 591.722,684.202 595.744,697.988 599.767,714.698 603.789,733.386 607.811,754.383 
  611.833,777.318 615.855,802.299 619.877,828.853 623.9,857.034 627.922,886.445 631.944,916.117 635.966,945.847 639.988,974.516 644.011,1001.52 648.033,1025.57 
  652.055,1045.8 656.077,1061.95 660.099,1072.97 664.121,1078.57 668.144,1078.03 672.166,1072.95 676.188,1062.63 680.21,1048.26 684.232,1030.13 688.255,1008.71 
  692.277,985.42 696.299,960.259 700.321,933.589 704.343,905.513 708.365,876.73 712.388,846.46 716.41,815.77 720.432,784.797 724.454,753.725 728.476,723.252 
  732.499,695.175 736.521,668.858 740.543,646.173 744.565,627.514 748.587,613.009 752.609,603.637 756.632,599.706 760.654,600.923 764.676,606.802 768.698,617.384 
  772.72,631.49 776.742,648.802 780.765,667.686 784.787,687.745 788.809,707.251 792.831,725.333 796.853,741.78 800.876,755.199 804.898,765.086 808.92,771.395 
  812.942,774.323 816.964,773.736 820.986,770.409 825.009,765.305 829.031,758.322 833.053,749.941 837.075,741.894 841.097,733.939 845.12,726.234 849.142,719.999 
  853.164,714.507 857.186,710.356 861.208,707.865 865.23,706.724 869.253,706.891 873.275,708.495 877.297,711.782 881.319,716.323 885.341,721.728 889.364,728.868 
  893.386,736.683 897.408,746.394 901.43,756.511 905.452,768.254 909.474,781.005 913.497,794.511 917.519,808.837 921.541,823.586 925.563,838.591 929.585,853.981 
  933.608,869.301 937.63,883.264 941.652,896.453 945.674,907.815 949.696,916.71 953.718,923.968 957.741,928.108 961.763,929.657 965.785,928.275 969.807,924.313 
  973.829,917.868 977.852,909.81 981.874,899.863 985.896,888.761 989.918,876.555 993.94,864.16 997.962,850.913 1001.98,837.511 1006.01,823.903 1010.03,809.767 
  1014.05,795.927 1018.07,781.881 1022.1,768.315 1026.12,755.297 1030.14,743.173 1034.16,732.893 1038.18,723.457 1042.21,716.487 1046.23,711.865 1050.25,709.016 
  1054.27,708.499 1058.3,710.101 1062.32,713.573 1066.34,718.973 1070.36,725.256 1074.38,732.325 1078.41,740.326 1082.43,748.455 1086.45,755.916 1090.47,762.645 
  1094.49,768.675 1098.52,773.312 1102.54,776.619 1106.56,778.623 1110.58,779.554 1114.61,779.638 1118.63,778.293 1122.65,776.967 1126.67,775.015 1130.69,772.534 
  1134.72,770.4 1138.74,768.461 1142.76,766.811 1146.78,765.427 1150.81,764.474 1154.83,764.016 1158.85,763.992 1162.87,764.212 1166.89,765.083 1170.92,766.103 
  1174.94,767.147 1178.96,768.719 1182.98,770.58 1187,772.499 1191.03,774.268 1195.05,776.452 1199.07,778.446 1203.09,780.427 1207.12,782.263 1211.14,784.233 
  1215.16,785.489 1219.18,787.046 1223.2,788.47 1227.23,788.627 1231.25,789.123 1235.27,788.909 1239.29,788.179 1243.32,787.359 1247.34,786.032 1251.36,784.1 
  1255.38,782.28 1259.4,780.307 1263.43,778.071 1267.45,776.326 1271.47,774.415 1275.49,773.077 1279.52,772.295 1283.54,771.241 1287.56,771.031 1291.58,771.312 
  1295.6,771.901 1299.63,772.902 1303.65,774.491 1307.67,776.806 1311.69,779.355 1315.71,782.789 1319.74,786.694 1323.76,790.621 1327.78,795.349 1331.8,799.744 
  1335.83,804.266 1339.85,808.607 1343.87,812.387 1347.89,815.316 1351.91,817.869 1355.94,819.198 1359.96,819.443 1363.98,818.572 1368,816.675 1372.03,814.131 
  1376.05,810.525 1380.07,806.382 1384.09,802.1 1388.11,797.373 1392.14,793.716 1396.16,789.905 1400.18,787.775 1404.2,785.619 1408.22,784.811 1412.25,785.326 
  1416.27,787.343 1420.29,789.44 1424.31,792.677 1428.34,796.116 1432.36,800.056 1436.38,804.054 1440.4,808.189 1444.42,812.137 1448.45,815.56 1452.47,818.022 
  1456.49,820.773 1460.51,822.278 1464.54,822.918 1468.56,823.24 1472.58,822.41 1476.6,821.086 1480.62,818.152 1484.65,814.818 1488.67,810.369 1492.69,804.471 
  1496.71,797.816 1500.73,790.015 1504.76,781.107 1508.78,771.286 1512.8,759.808 1516.82,747.305 1520.85,733.863 1524.87,719.85 1528.89,705.722 1532.91,691.411 
  1536.93,677.117 1540.96,663.88 1544.98,652.668 1549,642.839 1553.02,635.336 1557.05,630.477 1561.07,628.292 1565.09,629.137 1569.11,632.266 1573.13,638.111 
  1577.16,646.311 1581.18,656.052 1585.2,667.733 1589.22,680.955 1593.25,695.364 1597.27,711.661 1601.29,728.878 1605.31,747.161 1609.33,767.149 1613.36,787.769 
  1617.38,808.754 1621.4,830.084 1625.42,850.545 1629.44,870.055 1633.47,887.52 1637.49,902.523 1641.51,914.403 1645.53,922.472 1649.56,926.989 1653.58,927.571 
  1657.6,923.805 1661.62,916.822 1665.64,906.334 1669.67,892.752 1673.69,877.824 1677.71,861.646 1681.73,845.666 1685.76,829.846 1689.78,816.427 1693.8,804.923 
  1697.82,796.987 1701.84,792.037 1705.87,790.51 1709.89,792.098 1713.91,796.55 1717.93,803.082 1721.95,811.797 1725.98,821.62 1730,831.276 1734.02,841.421 
  1738.04,850.769 1742.07,859.777 1746.09,867.202 1750.11,873.059 1754.13,877.522 1758.15,880.293 1762.18,880.91 1766.2,879.88 1770.22,877.148 1774.24,872.281 
  1778.27,865.046 1782.29,855.656 1786.31,844.862 1790.33,831.2 1794.35,815.522 1798.38,797.692 1802.4,777.745 1806.42,755.23 1810.44,730.578 1814.47,704.584 
  1818.49,676.831 1822.51,648.372 1826.53,619.266 1830.55,590.451 1834.58,563.385 1838.6,538.787 1842.62,517.17 1846.64,500.39 1850.66,487.657 1854.69,480.788 
  1858.71,478.949 1862.73,482.668 1866.75,491.548 1870.78,505.218 1874.8,522.769 1878.82,543.347 1882.84,567.323 1886.86,593.821 1890.89,622.61 1894.91,653.31 
  1898.93,686.381 1902.95,721.636 1906.98,758.159 1911,796.182 1915.02,834.607 1919.04,872.59 1923.06,909.221 1927.09,943.198 1931.11,973.105 1935.13,998.166 
  1939.15,1017.79 1943.17,1030.61 1947.2,1036.35 1951.22,1035.54 1955.24,1027.46 1959.26,1013.52 1963.29,993.707 1967.31,969.552 1971.33,942.733 1975.35,914.494 
  1979.37,886.699 1983.4,860.534 1987.42,837.325 1991.44,818.903 1995.46,805.812 1999.49,797.684 2003.51,795.885 2007.53,799.178 2011.55,806.664 2015.57,818.048 
  2019.6,831.742 2023.62,847.798 2027.64,863.881 2031.66,879.841 2035.69,894.778 2039.71,908.488 2043.73,919.619 2047.75,928.354 2051.77,934.942 2055.8,938.157 
  2059.82,938.957 2063.84,936.42 2067.86,930.855 2071.88,922.001 2075.91,910.56 2079.93,895.651 2083.95,877.476 2087.97,855.71 2092,831.063 2096.02,802.815 
  2100.04,771.406 2104.06,736.605 2108.08,699.151 2112.11,658.55 2116.13,616.689 2120.15,573.142 2124.17,529.91 2128.2,486.715 2132.22,447.169 2136.24,410.985 
  2140.26,379.968 2144.28,355.755 2148.31,339.097 2152.33,330.331 2156.35,330.007 2160.37,337.282 2164.39,352.325 2168.42,373.899 2172.44,401.315 2176.46,433.472 
  2180.48,469.709 2184.51,509.419 2188.53,552.429 2192.55,598.711 2196.57,647.603 2200.59,699.207 2204.62,753.11 2208.64,808.319 2212.66,864.224 2216.68,919.128 
  2220.71,971.21 2224.73,1019.61 2228.75,1061.63 2232.77,1096.34 2236.79,1122.63 2240.82,1139.21 2244.84,1146.13 2248.86,1142.69 2252.88,1129.82 2256.9,1107.9 
  2260.93,1078.99 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,711.463 253.859,736.723 257.881,762.486 261.903,788.35 265.926,813.736 269.948,837.473 273.97,860.067 277.992,880.874 282.014,900.039 286.036,916.746 
  290.059,931.482 294.081,944.252 298.103,954.345 302.125,961.944 306.147,967.664 310.17,971.338 314.192,972.661 318.214,972.159 322.236,969.276 326.258,965.244 
  330.28,958.94 334.303,951.143 338.325,941.592 342.347,931.174 346.369,919.372 350.391,907.88 354.414,896.84 358.436,887.774 362.458,881.402 366.48,878.286 
  370.502,878.359 374.524,882.139 378.547,888.35 382.569,897.266 386.591,907.085 390.613,917.519 394.635,927.772 398.658,937.096 402.68,945.249 406.702,951.818 
  410.724,957.609 414.746,961.9 418.768,964.673 422.791,966.717 426.813,967.859 430.835,967.291 434.857,964.1 438.879,958.157 442.902,949.868 446.924,937.491 
  450.946,921.286 454.968,901.437 458.99,878.338 463.012,852.77 467.035,825.569 471.057,797.865 475.079,771.403 479.101,745.842 483.123,723.135 487.145,703.923 
  491.168,687.508 495.19,674.761 499.212,665.008 503.234,658.074 507.256,653.945 511.279,651.868 515.301,652.06 519.323,654.929 523.345,659.593 527.367,666.802 
  531.389,676.202 535.412,687.628 539.434,701.687 543.456,717.388 547.478,734.509 551.5,752.362 555.523,770.191 559.545,788.559 563.567,806.055 567.589,822.737 
  571.611,838.131 575.633,852.335 579.656,865.181 583.678,876.69 587.7,886.504 591.722,894.93 595.744,901.515 599.767,906.872 603.789,910.044 607.811,911.975 
  611.833,912.458 615.855,911.679 619.877,909.601 623.9,906.37 627.922,901.986 631.944,896.033 635.966,888.983 639.988,881.609 644.011,873.622 648.033,865.807 
  652.055,858.368 656.077,852.317 660.099,848.086 664.121,846.066 668.144,846.225 672.166,848.659 676.188,853.218 680.21,858.96 684.232,865.179 688.255,871.83 
  692.277,878.285 696.299,883.985 700.321,889.005 704.343,893.041 708.365,895.945 712.388,898.54 716.41,900.041 720.432,901.1 724.454,901.017 728.476,900.111 
  732.499,897.422 736.521,893.814 740.543,887.974 744.565,879.302 748.587,868.695 752.609,855.575 756.632,840.762 760.654,824.359 764.676,807.165 768.698,789.885 
  772.72,773.536 776.742,758.117 780.765,744.618 784.787,733.056 788.809,723.556 792.831,715.886 796.853,710.499 800.876,706.718 804.898,704.666 808.92,703.724 
  812.942,704.708 816.964,706.743 820.986,709.997 825.009,714.442 829.031,720.372 833.053,727.574 837.075,736.023 841.097,745.435 845.12,755.579 849.142,766.168 
  853.164,776.533 857.186,786.863 861.208,797.045 865.23,806.336 869.253,814.812 873.275,822.721 877.297,829.42 881.319,835.285 885.341,840.583 889.364,845.07 
  893.386,848.258 897.408,850.752 901.43,851.922 905.452,852.8 909.474,852.283 913.497,851.379 917.519,849.743 921.541,847.592 925.563,844.802 929.585,841.495 
  933.608,837.477 937.63,833.299 941.652,828.538 945.674,824.398 949.696,820.632 953.718,817.427 957.741,815.117 961.763,813.93 965.785,814.154 969.807,815.025 
  973.829,816.896 977.852,819.508 981.874,822.351 985.896,825.165 989.918,827.997 993.94,830.003 997.962,832.293 1001.98,833.259 1006.01,834.185 1010.03,834.88 
  1014.05,835.535 1018.07,834.924 1022.1,834.628 1026.12,833.71 1030.14,831.753 1034.16,829.705 1038.18,826.575 1042.21,822.292 1046.23,817.372 1050.25,811.591 
  1054.27,805.221 1058.3,798.603 1062.32,791.391 1066.34,784.883 1070.36,778.226 1074.38,772.794 1078.41,767.482 1082.43,763.683 1086.45,760.7 1090.47,758.433 
  1094.49,756.749 1098.52,756.034 1102.54,755.937 1106.56,756.419 1110.58,757.034 1114.61,757.892 1118.63,759.444 1122.65,761.371 1126.67,763.892 1130.69,766.385 
  1134.72,769.481 1138.74,772.383 1142.76,775.509 1146.78,778.34 1150.81,780.867 1154.83,783.845 1158.85,786.127 1162.87,788.208 1166.89,790.073 1170.92,791.3 
  1174.94,792.47 1178.96,793.638 1182.98,793.887 1187,793.936 1191.03,793.719 1195.05,794.222 1199.07,793.463 1203.09,792.772 1207.12,792.062 1211.14,791.201 
  1215.16,790.392 1219.18,789.312 1223.2,788.312 1227.23,787.417 1231.25,786.531 1235.27,785.414 1239.29,784.524 1243.32,783.848 1247.34,783.284 1251.36,782.538 
  1255.38,782.552 1259.4,781.798 1263.43,781.591 1267.45,780.781 1271.47,780.463 1275.49,779.747 1279.52,778.649 1283.54,777.753 1287.56,776.645 1291.58,775.562 
  1295.6,774.282 1299.63,773.381 1303.65,772.425 1307.67,771.215 1311.69,770.326 1315.71,769.016 1319.74,767.892 1323.76,767.037 1327.78,766.575 1331.8,766.023 
  1335.83,765.916 1339.85,766.597 1343.87,767.518 1347.89,769.421 1351.91,771.69 1355.94,774.507 1359.96,777.709 1363.98,781.548 1368,785.235 1372.03,789.213 
  1376.05,792.555 1380.07,796.168 1384.09,799.139 1388.11,801.774 1392.14,804.124 1396.16,805.71 1400.18,807.443 1404.2,808.694 1408.22,809.116 1412.25,809.484 
  1416.27,808.782 1420.29,807.989 1424.31,806.104 1428.34,803.917 1432.36,801.113 1436.38,797.416 1440.4,793.343 1444.42,788.806 1448.45,784.03 1452.47,778.944 
  1456.49,773.74 1460.51,768.552 1464.54,763.571 1468.56,758.771 1472.58,754.227 1476.6,750.02 1480.62,746.099 1484.65,742.514 1488.67,738.927 1492.69,736.771 
  1496.71,734.711 1500.73,733.095 1504.76,731.537 1508.78,731.059 1512.8,730.77 1516.82,731.439 1520.85,732.42 1524.87,733.823 1528.89,736.049 1532.91,738.575 
  1536.93,741.258 1540.96,744.218 1544.98,747.04 1549,748.408 1553.02,749.594 1557.05,749.85 1561.07,748.414 1565.09,746.335 1569.11,743.03 1573.13,738.809 
  1577.16,734.16 1581.18,729.565 1585.2,724.856 1589.22,720.515 1593.25,716.412 1597.27,712.83 1601.29,709.447 1605.31,706.662 1609.33,704.446 1613.36,702.331 
  1617.38,701.253 1621.4,700.56 1625.42,700.951 1629.44,702.847 1633.47,706.6 1637.49,711.943 1641.51,719.21 1645.53,729.028 1649.56,740.037 1653.58,752.797 
  1657.6,766.332 1661.62,780.513 1665.64,794.028 1669.67,807.34 1673.69,819.691 1677.71,829.774 1681.73,838.803 1685.76,846.202 1689.78,851.656 1693.8,856.241 
  1697.82,859.209 1701.84,860.798 1705.87,861.251 1709.89,860.031 1713.91,857.662 1717.93,853.452 1721.95,847.937 1725.98,840.574 1730,831.495 1734.02,821.264 
  1738.04,809.908 1742.07,797.566 1746.09,785.159 1750.11,772.046 1754.13,759.551 1758.15,747.37 1762.18,736.202 1766.2,724.929 1770.22,714.786 1774.24,705.701 
  1778.27,697.444 1782.29,690.171 1786.31,684.155 1790.33,679.154 1794.35,675.299 1798.38,672.853 1802.4,671.431 1806.42,671.12 1810.44,672.154 1814.47,673.996 
  1818.49,677.056 1822.51,680.984 1826.53,686.504 1830.55,692.604 1834.58,698.961 1838.6,705.17 1842.62,710.938 1846.64,715.086 1850.66,717.318 1854.69,717.876 
  1858.71,715.439 1862.73,711.543 1866.75,704.906 1870.78,697.438 1874.8,689.061 1878.82,680.23 1882.84,672.198 1886.86,664.58 1890.89,657.891 1894.91,651.626 
  1898.93,646.792 1902.95,642.532 1906.98,638.641 1911,636.047 1915.02,634.332 1919.04,634.425 1923.06,636.409 1927.09,640.679 1931.11,647.685 1935.13,658.636 
  1939.15,672.602 1943.17,690.196 1947.2,710.675 1951.22,733.123 1955.24,757.232 1959.26,781.704 1963.29,805.273 1967.31,827.899 1971.33,847.733 1975.35,865.293 
  1979.37,879.357 1983.4,891.138 1987.42,899.931 1991.44,906.667 1995.46,910.901 1999.49,913.183 2003.51,913.189 2007.53,910.689 2011.55,905.828 2015.57,898.441 
  2019.6,888.331 2023.62,875.589 2027.64,860.362 2031.66,843.44 2035.69,824.513 2039.71,804.794 2043.73,784.44 2047.75,764.024 2051.77,744.428 2055.8,725.122 
  2059.82,707.126 2063.84,690.063 2067.86,674.385 2071.88,660.211 2075.91,647.838 2079.93,636.956 2083.95,628.382 2087.97,621.017 2092,616.113 2096.02,612.415 
  2100.04,611.063 2104.06,611.496 2108.08,612.923 2112.11,616.518 2116.13,621.932 2120.15,629.06 2124.17,637.438 2128.2,647.035 2132.22,656.882 2136.24,666.758 
  2140.26,675.465 2144.28,681.758 2148.31,685.206 2152.33,685.835 2156.35,682.113 2160.37,675.609 2164.39,666.269 2168.42,655.199 2172.44,642.902 2176.46,630.481 
  2180.48,618.578 2184.51,608.053 2188.53,598.268 2192.55,590.277 2196.57,583.243 2200.59,577.497 2204.62,572.608 2208.64,569.443 2212.66,567.878 2216.68,568.219 
  2220.71,571.649 2224.73,578.766 2228.75,590.146 2232.77,606.494 2236.79,627.382 2240.82,653.608 2244.84,683.177 2248.86,716.086 2252.88,750.508 2256.9,785.281 
  2260.93,818.807 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#c271d2; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,817.228 253.859,813.698 257.881,808.333 261.903,798.935 265.926,786.842 269.948,771.045 273.97,752.152 277.992,730.057 282.014,704.968 286.036,677.245 
  290.059,646.367 294.081,612.787 298.103,575.769 302.125,536.394 306.147,493.834 310.17,448.547 314.192,401.364 318.214,353.43 322.236,305.215 326.258,258.446 
  330.28,215.083 334.303,176.017 338.325,143.385 342.347,117.465 346.369,99.5399 350.391,90.0544 354.414,88.4582 358.436,95.1336 362.458,108.298 366.48,128.215 
  370.502,153.191 374.524,182.136 378.547,214.183 382.569,248.124 386.591,283.224 390.613,318.65 394.635,354.355 398.658,389.353 402.68,423.785 406.702,457.642 
  410.724,491.903 414.746,525.537 418.768,559.116 422.791,592.036 426.813,624.388 430.835,655.234 434.857,685.356 438.879,713.522 442.902,739.481 446.924,763.556 
  450.946,785.438 454.968,804.623 458.99,822.2 463.012,838.25 467.035,851.525 471.057,862.99 475.079,872.232 479.101,879.304 483.123,883.761 487.145,884.765 
  491.168,883.344 495.19,878.824 499.212,871.592 503.234,862.322 507.256,851.953 511.279,841.237 515.301,831.069 519.323,822.055 523.345,815.578 527.367,811.11 
  531.389,808.717 535.412,807.89 539.434,807.877 543.456,807.542 547.478,806.485 551.5,804.183 555.523,799.893 559.545,793.226 563.567,784.449 567.589,773.428 
  571.611,759.859 575.633,744.146 579.656,726.664 583.678,707.04 587.7,685.756 591.722,662.2 595.744,636.806 599.767,609.709 603.789,580.507 607.811,550.104 
  611.833,518.167 615.855,485.794 619.877,453.557 623.9,422.716 627.922,394.074 631.944,368.878 635.966,348.52 639.988,332.178 644.011,321.799 648.033,317.439 
  652.055,317.738 656.077,323.419 660.099,333.845 664.121,348.625 668.144,366.392 672.166,387.004 676.188,409.367 680.21,432.686 684.232,456.519 688.255,480.506 
  692.277,504.64 696.299,527.673 700.321,551.141 704.343,574.14 708.365,596.826 712.388,618.82 716.41,640.755 720.432,662.298 724.454,683.398 728.476,703.505 
  732.499,722.532 736.521,740.115 740.543,756.82 744.565,771.753 748.587,785.74 752.609,797.961 756.632,808.578 760.654,817.912 764.676,825.943 768.698,833.248 
  772.72,838.504 776.742,842.511 780.765,844.723 784.787,845.021 788.809,843.701 792.831,840.531 796.853,836.108 800.876,829.905 804.898,823.602 808.92,816.576 
  812.942,810.73 816.964,805.295 820.986,801.804 825.009,799.366 829.031,797.921 833.053,797.348 837.075,797.382 841.097,796.873 845.12,796.67 849.142,794.521 
  853.164,791.853 857.186,788.228 861.208,782.852 865.23,776.529 869.253,768.701 873.275,759.803 877.297,749.853 881.319,739.173 885.341,727.346 889.364,714.602 
  893.386,700.959 897.408,686.67 901.43,671.18 905.452,654.908 909.474,638.086 913.497,621.887 917.519,605.828 921.541,590.373 925.563,576.85 929.585,565.036 
  933.608,555.696 937.63,549.104 941.652,545.611 945.674,544.76 949.696,546.752 953.718,551.77 957.741,558.734 961.763,567.578 965.785,578.213 969.807,589.648 
  973.829,602.222 977.852,614.631 981.874,627.426 985.896,640.243 989.918,652.298 993.94,664.562 997.962,676.316 1001.98,687.698 1006.01,698.624 1010.03,709.481 
  1014.05,720.068 1018.07,729.938 1022.1,739.723 1026.12,748.873 1030.14,757.234 1034.16,765.301 1038.18,772.213 1042.21,778.527 1046.23,784.336 1050.25,789.248 
  1054.27,793.434 1058.3,797.068 1062.32,799.689 1066.34,802.348 1070.36,804.108 1074.38,805.207 1078.41,805.71 1082.43,805.334 1086.45,804.632 1090.47,802.905 
  1094.49,800.98 1098.52,798.415 1102.54,796.093 1106.56,793.43 1110.58,791.398 1114.61,789.552 1118.63,788.414 1122.65,787.291 1126.67,787.007 1130.69,786.767 
  1134.72,786.758 1138.74,786.408 1142.76,786.326 1146.78,785.523 1150.81,784.57 1154.83,783.435 1158.85,782.32 1162.87,780.684 1166.89,778.808 1170.92,777.156 
  1174.94,775.284 1178.96,773.413 1182.98,771.245 1187,769.366 1191.03,767.456 1195.05,766.008 1199.07,764.324 1203.09,763.035 1207.12,762.079 1211.14,761.171 
  1215.16,760.906 1219.18,761.335 1223.2,761.819 1227.23,763.587 1231.25,765.045 1235.27,767.344 1239.29,769.984 1243.32,772.973 1247.34,776.302 1251.36,779.224 
  1255.38,782.256 1259.4,785.101 1263.43,787.799 1267.45,790.27 1271.47,792.636 1275.49,794.052 1279.52,795.956 1283.54,796.991 1287.56,797.859 1291.58,798.336 
  1295.6,798.592 1299.63,798.7 1303.65,798.291 1307.67,797.467 1311.69,796.633 1315.71,795.39 1319.74,793.825 1323.76,792.174 1327.78,789.968 1331.8,788.096 
  1335.83,785.508 1339.85,783.419 1343.87,781.001 1347.89,779.022 1351.91,776.914 1355.94,775.162 1359.96,772.519 1363.98,770.67 1368,769.055 1372.03,767.342 
  1376.05,766.369 1380.07,765.63 1384.09,765.609 1388.11,765.836 1392.14,766.488 1396.16,767.906 1400.18,769.736 1404.2,771.338 1408.22,772.866 1412.25,774.199 
  1416.27,775.624 1420.29,775.719 1424.31,776.307 1428.34,776.25 1432.36,776.06 1436.38,775.799 1440.4,776.168 1444.42,776.843 1448.45,777.769 1452.47,779.949 
  1456.49,782.961 1460.51,786.331 1464.54,790.708 1468.56,795.902 1472.58,802.08 1476.6,809.169 1480.62,817.421 1484.65,826.547 1488.67,836.278 1492.69,848.228 
  1496.71,860.652 1500.73,874.529 1504.76,889.203 1508.78,904.014 1512.8,919.864 1516.82,935.747 1520.85,950.381 1524.87,964.46 1528.89,976.875 1532.91,987.597 
  1536.93,995.372 1540.96,1001.93 1544.98,1004.99 1549,1005.9 1553.02,1005.11 1557.05,1001.54 1561.07,995.7 1565.09,988.66 1569.11,980.8 1573.13,971.42 
  1577.16,961.928 1581.18,951.696 1585.2,940.733 1589.22,929.899 1593.25,918.774 1597.27,907.512 1601.29,895.537 1605.31,883.284 1609.33,870.868 1613.36,858.228 
  1617.38,845.536 1621.4,832.902 1625.42,820.382 1629.44,808.447 1633.47,797.423 1637.49,786.228 1641.51,776.714 1645.53,767.397 1649.56,758.901 1653.58,750.906 
  1657.6,744.211 1661.62,738.12 1665.64,733.056 1669.67,729.172 1673.69,726.81 1677.71,725.896 1681.73,726.419 1685.76,729.039 1689.78,733.086 1693.8,738.056 
  1697.82,743.975 1701.84,749.739 1705.87,755.09 1709.89,759.594 1713.91,762.969 1717.93,765.017 1721.95,765.576 1725.98,765.688 1730,765.138 1734.02,765.416 
  1738.04,766.497 1742.07,768.464 1746.09,771.887 1750.11,777.252 1754.13,784.386 1758.15,793.063 1762.18,803.702 1766.2,816.542 1770.22,831.082 1774.24,847.58 
  1778.27,865.996 1782.29,886.358 1786.31,908.644 1790.33,933.547 1794.35,960.607 1798.38,989.125 1802.4,1019.56 1806.42,1050.91 1810.44,1082.21 1814.47,1112.84 
  1818.49,1141.8 1822.51,1167.85 1826.53,1190.8 1830.55,1208.93 1834.58,1222.54 1838.6,1230.86 1842.62,1233.95 1846.64,1232.17 1850.66,1226.11 1854.69,1215.41 
  1858.71,1201.85 1862.73,1185.13 1866.75,1166.63 1870.78,1146.39 1874.8,1125.16 1878.82,1103.19 1882.84,1081.12 1886.86,1058.71 1890.89,1036.45 1894.91,1013.23 
  1898.93,990.108 1902.95,966.505 1906.98,942.625 1911,918.559 1915.02,894.795 1919.04,871.205 1923.06,848.656 1927.09,827.382 1931.11,807.193 1935.13,787.919 
  1939.15,770.352 1943.17,754.399 1947.2,739.627 1951.22,726.643 1955.24,714.814 1959.26,704.914 1963.29,696.853 1967.31,690.527 1971.33,686.851 1975.35,686.449 
  1979.37,688.187 1983.4,692.756 1987.42,700.089 1991.44,708.976 1995.46,719.31 1999.49,729.261 2003.51,738.047 2007.53,745.414 2011.55,750.484 2015.57,753.717 
  2019.6,755.011 2023.62,755.311 2027.64,754.963 2031.66,755.073 2035.69,756.638 2039.71,760.229 2043.73,765.977 2047.75,774.726 2051.77,786.416 2055.8,801.2 
  2059.82,818.626 2063.84,838.621 2067.86,861.998 2071.88,887.936 2075.91,916.509 2079.93,948.561 2083.95,983.589 2087.97,1022.01 2092,1063.25 2096.02,1107.17 
  2100.04,1153.48 2104.06,1200.85 2108.08,1248.05 2112.11,1293.59 2116.13,1336.17 2120.15,1374.17 2124.17,1406.38 2128.2,1431.56 2132.22,1449.49 2136.24,1460 
  2140.26,1462.26 2144.28,1457.56 2148.31,1445.96 2152.33,1428.28 2156.35,1405.92 2160.37,1379.33 2164.39,1349.91 2168.42,1319.13 2172.44,1286 2176.46,1252.84 
  2180.48,1219.12 2184.51,1185.39 2188.53,1151.34 2192.55,1117.08 2196.57,1081.91 2200.59,1047.18 2204.62,1011.74 2208.64,976.49 2212.66,941.604 2216.68,907.703 
  2220.71,874.662 2224.73,843.742 2228.75,814.735 2232.77,787.404 2236.79,762.754 2240.82,739.879 2244.84,719.375 2248.86,700.898 2252.88,684.569 2256.9,670.648 
  2260.93,659.773 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#ac8d18; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,376.474 253.859,387.291 257.881,397.869 261.903,406.96 265.926,414.738 269.948,421.01 273.97,425.475 277.992,427.903 282.014,428.055 286.036,425.622 
  290.059,421.384 294.081,415.068 298.103,406.774 302.125,397.408 306.147,387.863 310.17,377.944 314.192,369.193 318.214,361.591 322.236,355.692 326.258,352.136 
  330.28,350.679 334.303,352.027 338.325,355.983 342.347,363.289 346.369,373.214 350.391,386.382 354.414,402.663 358.436,421.579 362.458,443.09 366.48,467.277 
  370.502,491.925 374.524,518.134 378.547,543.91 382.569,568.83 386.591,591.949 390.613,612.585 394.635,630.863 398.658,645.795 402.68,657.708 406.702,666.882 
  410.724,672.651 414.746,675.781 418.768,675.842 422.791,672.875 426.813,667.053 430.835,658.481 434.857,646.315 438.879,631.371 442.902,614.2 446.924,594.482 
  450.946,573.274 454.968,551.011 458.99,528.671 463.012,507.024 467.035,487.301 471.057,469.088 475.079,453.323 479.101,440.409 483.123,429.795 487.145,421.961 
  491.168,416.369 495.19,413.085 499.212,411.449 503.234,411.748 507.256,414.282 511.279,418.364 515.301,424.112 519.323,431.409 523.345,439.935 527.367,449.277 
  531.389,458.773 535.412,468.631 539.434,478.632 543.456,488.091 547.478,497.007 551.5,505.689 555.523,513.177 559.545,519.792 563.567,525.886 567.589,530.548 
  571.611,534.106 575.633,535.849 579.656,535.816 583.678,534.773 587.7,532.089 591.722,528.067 595.744,522.857 599.767,516.713 603.789,510.52 607.811,504.8 
  611.833,499.026 615.855,494.791 619.877,491.444 623.9,489.68 627.922,489.198 631.944,491.298 635.966,494.736 639.988,500.444 644.011,507.87 648.033,517.28 
  652.055,529.041 656.077,542.482 660.099,557.693 664.121,574.161 668.144,591.482 672.166,608.892 676.188,626.472 680.21,643.015 684.232,658.505 688.255,672.149 
  692.277,684.146 696.299,693.942 700.321,701.966 704.343,707.988 708.365,711.534 712.388,713.493 716.41,713.705 720.432,711.845 724.454,707.841 728.476,702.167 
  732.499,694.751 736.521,685.188 740.543,674.228 744.565,662.317 748.587,648.907 752.609,635.366 756.632,621.86 760.654,609.222 764.676,597.059 768.698,586.731 
  772.72,577.937 776.742,570.361 780.765,564.916 784.787,561.196 788.809,558.461 792.831,557.174 796.853,557.376 800.876,558.576 804.898,560.973 808.92,564.309 
  812.942,568.76 816.964,573.73 820.986,579.521 825.009,585.897 829.031,592.5 833.053,599.21 837.075,605.095 841.097,611.715 845.12,617.444 849.142,623.326 
  853.164,627.925 857.186,632.713 861.208,636.466 865.23,639.543 869.253,641.948 873.275,643.78 877.297,644.616 881.319,644.377 885.341,643.338 889.364,641.681 
  893.386,639.363 897.408,637.03 901.43,634.427 905.452,632.126 909.474,629.833 913.497,628.002 917.519,627.432 921.541,627.274 925.563,628.511 929.585,630.325 
  933.608,633.244 937.63,636.806 941.652,641.978 945.674,647.686 949.696,654.974 953.718,662.374 957.741,670.916 961.763,679.739 965.785,689.22 969.807,698.142 
  973.829,707.573 977.852,715.851 981.874,723.889 985.896,730.538 989.918,736.8 993.94,741.381 997.962,745.442 1001.98,748.066 1006.01,750.283 1010.03,751.217 
  1014.05,751.369 1018.07,751.03 1022.1,749.295 1026.12,747.095 1030.14,744.105 1034.16,740.396 1038.18,735.881 1042.21,731.535 1046.23,726.398 1050.25,721.762 
  1054.27,716.897 1058.3,712.558 1062.32,708.793 1066.34,705.922 1070.36,703.571 1074.38,702.057 1078.41,700.734 1082.43,700.817 1086.45,700.781 1090.47,701.97 
  1094.49,703.339 1098.52,704.834 1102.54,707.295 1106.56,709.598 1110.58,712.415 1114.61,715.758 1118.63,718.329 1122.65,721.596 1126.67,725.181 1130.69,728.481 
  1134.72,731.247 1138.74,734.49 1142.76,737.02 1146.78,739.84 1150.81,742.211 1154.83,744.407 1158.85,746.225 1162.87,748.473 1166.89,750.216 1170.92,751.56 
  1174.94,752.841 1178.96,753.913 1182.98,754.828 1187,756.101 1191.03,756.589 1195.05,757.83 1199.07,758.701 1203.09,759.861 1207.12,761.192 1211.14,762.373 
  1215.16,763.717 1219.18,765.476 1223.2,767.227 1227.23,769.18 1231.25,771.053 1235.27,772.928 1239.29,775.13 1243.32,777.273 1247.34,778.919 1251.36,780.748 
  1255.38,782.531 1259.4,783.521 1263.43,784.991 1267.45,786.034 1271.47,786.377 1275.49,787.02 1279.52,787.389 1283.54,787.647 1287.56,787.52 1291.58,787.814 
  1295.6,787.825 1299.63,788.319 1303.65,788.165 1307.67,789.15 1311.69,789.591 1315.71,789.977 1319.74,791.507 1323.76,793.067 1327.78,794.745 1331.8,796.958 
  1335.83,799.797 1339.85,802.904 1343.87,806.132 1347.89,810.06 1351.91,813.883 1355.94,818.07 1359.96,822.26 1363.98,826.534 1368,830.591 1372.03,834.421 
  1376.05,837.693 1380.07,841.15 1384.09,844.075 1388.11,847.045 1392.14,849.617 1396.16,851.715 1400.18,853.189 1404.2,854.793 1408.22,855.871 1412.25,856.86 
  1416.27,857.217 1420.29,857.135 1424.31,857.022 1428.34,856.805 1432.36,856.634 1436.38,856.625 1440.4,856.33 1444.42,856.279 1448.45,855.918 1452.47,856.011 
  1456.49,856.718 1460.51,857.154 1464.54,857.82 1468.56,859.848 1472.58,861.674 1476.6,864.151 1480.62,867.316 1484.65,870.768 1488.67,875.079 1492.69,879.564 
  1496.71,883.731 1500.73,888.754 1504.76,893.022 1508.78,896.878 1512.8,900.974 1516.82,903.577 1520.85,906.343 1524.87,907.932 1528.89,908.743 1532.91,908.829 
  1536.93,907.63 1540.96,905.671 1544.98,902.251 1549,897.597 1553.02,891.979 1557.05,885.689 1561.07,878.734 1565.09,871.617 1569.11,863.893 1573.13,856.635 
  1577.16,849.42 1581.18,843.054 1585.2,837.886 1589.22,833.661 1593.25,829.93 1597.27,827.873 1601.29,826.462 1605.31,826.679 1609.33,828.039 1613.36,830.249 
  1617.38,834.356 1621.4,839.805 1625.42,846.399 1629.44,854.875 1633.47,864.854 1637.49,875.518 1641.51,887.467 1645.53,900.206 1649.56,913.073 1653.58,925.623 
  1657.6,937.432 1661.62,948.507 1665.64,958.996 1669.67,967.786 1673.69,975.573 1677.71,982.453 1681.73,988.11 1685.76,992.353 1689.78,995.937 1693.8,998.057 
  1697.82,999.717 1701.84,999.722 1705.87,998.984 1709.89,997.211 1713.91,995.122 1717.93,991.771 1721.95,988.514 1725.98,984.784 1730,981.453 1734.02,977.963 
  1738.04,974.583 1742.07,972.014 1746.09,969.281 1750.11,967.929 1754.13,966.032 1758.15,965.828 1762.18,966.232 1766.2,967.66 1770.22,970.498 1774.24,974.989 
  1778.27,980.214 1782.29,986.364 1786.31,993.971 1790.33,1001.73 1794.35,1009.99 1798.38,1017.96 1802.4,1025.46 1806.42,1032.12 1810.44,1037.95 1814.47,1042.25 
  1818.49,1045.21 1822.51,1046.62 1826.53,1045.94 1830.55,1043.68 1834.58,1039.22 1838.6,1032.64 1842.62,1023.86 1846.64,1012.96 1850.66,1000.61 1854.69,986.107 
  1858.71,971.093 1862.73,955.097 1866.75,939.551 1870.78,924.257 1874.8,910.203 1878.82,897.309 1882.84,886.612 1886.86,878.18 1890.89,870.948 1894.91,866.989 
  1898.93,864.496 1902.95,864.33 1906.98,866.421 1911,870.834 1915.02,877.996 1919.04,887.512 1923.06,899.676 1927.09,914.202 1931.11,931.379 1935.13,950.538 
  1939.15,970.837 1943.17,992.037 1947.2,1013.56 1951.22,1034.42 1955.24,1054.3 1959.26,1072.17 1963.29,1088.49 1967.31,1102.73 1971.33,1114.18 1975.35,1123.73 
  1979.37,1132.33 1983.4,1138.39 1987.42,1142.06 1991.44,1144.78 1995.46,1145.61 1999.49,1144.31 2003.51,1141.65 2007.53,1137.07 2011.55,1131.75 2015.57,1125.78 
  2019.6,1118.92 2023.62,1112.16 2027.64,1105.1 2031.66,1098.67 2035.69,1092.49 2039.71,1086.8 2043.73,1082.34 2047.75,1078.24 2051.77,1075.44 2055.8,1073.89 
  2059.82,1074.17 2063.84,1075.66 2067.86,1079.81 2071.88,1085.65 2075.91,1093.35 2079.93,1102.72 2083.95,1113.46 2087.97,1124.89 2092,1136.59 2096.02,1148.14 
  2100.04,1158.83 2104.06,1168.12 2108.08,1176.06 2112.11,1181.22 2116.13,1184.7 2120.15,1185.16 2124.17,1183.33 2128.2,1178.16 2132.22,1169.99 2136.24,1158.75 
  2140.26,1144.52 2144.28,1126.83 2148.31,1106.76 2152.33,1084.83 2156.35,1061.34 2160.37,1036.86 2164.39,1013.08 2168.42,990.292 2172.44,969.221 2176.46,950.501 
  2180.48,934.95 2184.51,921.6 2188.53,911.851 2192.55,905.657 2196.57,902.145 2200.59,902.206 2204.62,905.303 2208.64,911.911 2212.66,922.345 2216.68,936.466 
  2220.71,953.878 2224.73,975.367 2228.75,999.575 2232.77,1027.07 2236.79,1056.15 2240.82,1086.11 2244.84,1116.12 2248.86,1145.3 2252.88,1172.4 2256.9,1197.35 
  2260.93,1219.03 
  &#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;これまた簡単。&lt;/p&gt;
&lt;p&gt;「やってみた」系の記事になってしまったが、今日はここまで。
まだ少し触っただけではあるが、手軽にガウス過程が使えて便利。
次は何か具体例を用いて &lt;code&gt;GP&lt;/code&gt;, &lt;code&gt;GPE&lt;/code&gt; のフィッティングを行いたい。&lt;/p&gt;
&lt;p&gt;上の内容のjupyter notebook:&lt;br&gt;
&lt;a href=&#34;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&#34;&gt;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;p&gt;FAIRBROTHER, Jamie, et al. GaussianProcesses. jl: A Nonparametric Bayes package for the Julia Language. arXiv preprint &lt;a href=&#34;https://arxiv.org/abs/1812.09064&#34;&gt;arXiv:1812.09064&lt;/a&gt;, 2018.&lt;/p&gt;
&lt;p&gt;GitHubレポジトリ: &lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl&#34;&gt;STOR-i/GaussianProcesses.jl&lt;/a&gt;,
&lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl/tree/master/notebooks&#34;&gt;サンプルノートブック&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ドキュメント: &lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/&#34;&gt;http://stor-i.github.io/GaussianProcesses.jl/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;持橋大地, 大羽成征. ガウス過程と機械学習, 講談社 機械学習プロフェッショナルシリーズ, 2019&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sweet Trip - velocity:design:comfort. (2003)</title>
      <link>https://matsueushi.github.io/posts/sweettrip-velocity-design-comfort/</link>
      <pubDate>Tue, 16 Jul 2019 21:00:12 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/sweettrip-velocity-design-comfort/</guid>
      <description>&lt;iframe style=&#34;border: 0; width: 350px; height: 470px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=3134024535/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://sweettrip.bandcamp.com/album/velocity-design-comfort&#34;&gt;Velocity:Design:Comfort. by Sweet Trip&lt;/a&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&#34;https://rateyourmusic.com&#34;&gt;RateYourMusic&lt;/a&gt; を巡回していたら&lt;a href=&#34;https://rateyourmusic.com/charts/top/album/2003&#34;&gt;2003年の年間ランキング4位&lt;/a&gt;に挙げられていたこのアルバム。近未来感のある色とりどりのジャケットとvelocity:design:comfort.という抽象的なタイトルに妙に心惹かれたので聞いてみたところかなりハマってしまい、いつの間にかBandcampの購入ボタンをクリックしていた。
日本語で調べてもあまりこのアルバムについて書かれた情報は見つからなかったのが残念。&lt;/p&gt;
&lt;p&gt;サンフランシスコのSweet Tripと言うバンドの2枚目で、2009年の3rd以降新作は出ていないようである。
2013年にはSoundcloudに曲が&lt;a href=&#34;https://soundcloud.com/wotf/things-to-ponder-while-falling&#34;&gt;アップロード&lt;/a&gt;されていて、Probably &lt;em&gt;not&lt;/em&gt; the last Sweet Trip song ever. とあるので解散はしていないみたいだ。&lt;/p&gt;
&lt;p&gt;シューゲイザーとIDM、グリッチが美しく溶け合ったようなサウンドは、他に似たような曲を聞いたことがないからなのか、
それともジャケットを見た先入観なのか、15年以上前のアルバムなのになぜか未来を感じずにいられない。&lt;/p&gt;
&lt;p&gt;1曲目のTekkaだけはやや2曲目以降とは趣が異なる曲で、どこかAuthchreを連想するような攻撃的なドリルンベース。聞いているうちに現実の世界から離脱し、アルバムのジャケットの中の世界にどんどん没入していくような意図があったのだろうか？&lt;/p&gt;
&lt;p&gt;普通のシューゲイザーだと聞いている間にうたた寝から夢の世界に入り込んでしまうような気分にしばしば陥るが、このアルバムだと徐々に夢の世界といっても電脳空間、仮想空間に誘われていくような気がする。&lt;/p&gt;
&lt;p&gt;CDとダウンロードのみのリリースのようだが、レコードでリイシューされてほしい。&lt;/p&gt;
&lt;p&gt;(2020/6/29 &lt;a href=&#34;https://darla.com/products/sweet-trip-velocity-design-comfort&#34;&gt;https://darla.com/products/sweet-trip-velocity-design-comfort&lt;/a&gt; リイシューされていました)&lt;/p&gt;
&lt;p&gt;リーダーのRoberto BurgosのSoundCrowd:
&lt;a href=&#34;https://soundcloud.com/wotf&#34;&gt;https://soundcloud.com/wotf&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;好きな曲: Dsco, International, Dedicated, To All The Dancers Of The World&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程の補助変数法をJuliaで実装、回帰結果を比較</title>
      <link>https://matsueushi.github.io/posts/ivm/</link>
      <pubDate>Thu, 04 Jul 2019 10:10:28 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/ivm/</guid>
      <description>&lt;p&gt;7/5 追記 タイトルが「変数補助法」になっていたのを「補助変数法」に修正&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前回書いた 「&lt;a href=&#34;../sparse-approximate-gp/&#34;&gt;ガウス過程の補助変数法 (Inducing variable method) を理解する&lt;/a&gt; 」の続き。
Julia (v1.0) を使って、前回調べた SoD, SoR, DTC, FITC による回帰の近似結果を実際に確認する。&lt;/p&gt;
&lt;p&gt;簡単のため、&lt;code&gt;gp.jl&lt;/code&gt; により、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ガウスカーネルのクラス &lt;code&gt;GaussianKernel&lt;/code&gt; が定義されていて、&lt;/li&gt;
&lt;li&gt;カーネル &lt;code&gt;k&lt;/code&gt; に対してカーネル関数 \( k(x, y) \) と相互共分散 \( (k(x_i, y_j))_{i,j}\) がそれぞれ &lt;code&gt;ker(k, x, y)&lt;/code&gt; と &lt;code&gt;cov(k, xs, ys)&lt;/code&gt; で計算できる&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;と仮定する。ということで、まずはライブラリの読み込み。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;include(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gp.jl&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データは、MLPシリーズ 「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」の pp.157, 図5.3 補助入力点の配置 と同じサンプルを使う。上記のページに掲載されている、「補助変数法の例 (1次元の場合).」のデータの生成方法を参考にして次のようにデータを100個作成した。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# サンプルデータの作成&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vcat(rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;),rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sort!(xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(xs&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fx &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; rand(Normal(), Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(fx)) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(ts, sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(ts&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-sample-data.png&#34; alt=&#34;サンプルデータ&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( y = \sin (2x) \) にノイズを加えたもので、\( [0,1] \) の間はデータの密度が高くなっている。&lt;code&gt;ts&lt;/code&gt; は、あとで使う分布を予測したい点である。&lt;/p&gt;
&lt;p&gt;今回予測するのは、観測値 \( y \) ではなく、出力値 \( f \)とする。
(最初にやっていた時は観測値を予測していて、本の図と同じにならなくて混乱していた)&lt;/p&gt;
&lt;p&gt;考えるカーネルは、ガウスカーネル \( k(x, x^\prime) = \exp(-|x- x^\prime|^2) \) である。
観測誤差は \( \sigma^2 = 1.0 \) としておく。コードの中ではこれを &lt;code&gt;eta&lt;/code&gt; で表す。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianKernel()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gp&#34;&gt;GP&lt;/h3&gt;
&lt;p&gt;まずは、通常のガウス回帰モデルの場合の予測を確認。予測分布は、&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{f}_* | \mathbf{y}) = \mathcal{N}(\mathbf{K}_{*, \mathbf{f}} (\mathbf{K}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{K}_{*, \mathbf{f}} (\mathbf{K}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{K}_{\mathbf{f}, *})
$$&lt;/p&gt;
&lt;p&gt;であった。今回は、複数点の同時予測分布からサンプルを発生させることは行わず、各点ごとに予測分布を求めて平均と2.5%, 97.5%点を計算する。&lt;/p&gt;
&lt;p&gt;1点の予測分布を計算する関数を実装しよう。自分の実装では、&lt;code&gt;cov&lt;/code&gt; は行列を返すため、1x1の行列を &lt;code&gt;first&lt;/code&gt; を使ってスカラーにしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, xs, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(Kff &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 1点の予測分布&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; gp(t)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, xs, [t])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ktf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kft&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gp_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gp_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kft
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Normal(first(gp_mu), sqrt(first(gp_cov)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下のコードで表示すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [gp(t) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ts]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(gp_dists)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat([quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(s, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; gp_dists]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; gp_plot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot(ts, gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot!(ts, sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(ts&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y=sin(2x)&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot!(ts, gp_mean, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GP&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_plot()
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-gp.png&#34; alt=&#34;GP&#34;&gt;&lt;/p&gt;
&lt;p&gt;(なぜか &lt;code&gt;savefig&lt;/code&gt; でpng形式で保存すると &lt;code&gt;fillrange&lt;/code&gt; した最小値の部分に線が出てしまった。)&lt;/p&gt;
&lt;p&gt;早速それぞれの補助変数法でどれくらい近似できているかを見ていこう。補助入力点が、2点、5点、10点ある場合を考え、点は等間隔に配置されているとする。(SoD を除く)&lt;/p&gt;
&lt;p&gt;本質的な部分とは関係ないが、先にプロット用の関数を定義しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plot_result(gp_mean, gp_qt, mn, qt, ind_xs, label)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot(ts, gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GP&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot!(ts, qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; label, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot!(ts, gp_mean, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot!(ts, mn, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    scatter!(ind_xs, fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(ind_xs)), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    markershape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:x&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;the-subset-of-data-sod&#34;&gt;The Subset of Data (SoD)&lt;/h3&gt;
&lt;p&gt;SoD は他の SoR, DTC, FITC とは違い、任意に補助入力点を選べる訳ではなく元の入力点の部分集合として選ばなくてはいけない。
ここでは、サンプルの左からの順番が等間隔になるように選んだ。(例えば5点選ぶ場合、左から1, 21, 41, 61, 81番目)。&lt;/p&gt;
&lt;p&gt;ランダムに選択したり、なるべく等間隔になるように選んだりすればもっとデータがよく代表されるようになり精度が向上するかもしれない。
実装に関しては、GPの入力点を減らしただけである。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sod_plot(sod_xs, sod_ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, sod_xs, sod_xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(sod_xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(Kff &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# 各点の分布を計算して信用区間を計算する&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sod(t)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Kft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, sod_xs, [t])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Ktf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kft&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gp_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; sod_ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        gp_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kft
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Normal(first(gp_mu), sqrt(first(gp_cov)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sod_dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [sod(t) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ts]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sod_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(sod_dists)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sod_qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(s, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; sod_dists]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot_result(gp_mean, gp_qt, sod_mean, sod_qt, sod_xs, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoD&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [gp_plot()]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; where_xs &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sod_xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xs[where_xs]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sod_ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ys[where_xs]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(plts, sod_plot(sod_xs, sod_ys))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(plts&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-sod.png&#34; alt=&#34;SoD&#34;&gt;&lt;/p&gt;
&lt;p&gt;左上がGPで、補助入力点のx座標はグラフの下部に示している。データの左から順番で等間隔になるように補助入力点を選ぶと、データがスパースなところの情報が大きく切り捨てられてかなり近似が悪くなるということだろう。&lt;/p&gt;
&lt;h3 id=&#34;the-subset-of-regressors-sor&#34;&gt;The Subset of Regressors (SoR)&lt;/h3&gt;
&lt;p&gt;前回考えた、予測分布 \( q_{\text{SoR}}(\mathbf{f}_* | \mathbf{y}) \) が
$$
\begin{aligned}
\Sigma = (\sigma^{-2} \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1}
\end{aligned}
$$
を用いて
$$
\begin{aligned}
\mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y}, \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$
と表されることを思い出すと、SoRは次のように実装できる。&lt;code&gt;us&lt;/code&gt; の取り方が SoD と違っていることに注意。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sor_plot(us)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kuu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, us)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kfu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kuf&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kfu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Kuu)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sor(t)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Kut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, [t])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Ktu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kut&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sor_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sor_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        Normal(first(sor_mu), sqrt(first(sor_cov)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [sor(t) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ts]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(sor_dists)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        [quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(s, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; sor_dists]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    plot_result(gp_mean, gp_qt, sor_mean, sor_qt, us, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoR&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [gp_plot()]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; du &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    us &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, stop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; du, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; du))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(plts, sor_plot(us))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(plts&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-sor.png&#34; alt=&#34;SoR&#34;&gt;&lt;/p&gt;
&lt;p&gt;式を見て結構大胆な近似だと思っていたが、この例だと、5点の段階でも入力データが存在している範囲での予測はそう悪くない。&lt;/p&gt;
&lt;h3 id=&#34;the-deterministic-training-conditional-dtc&#34;&gt;The Deterministic Training Conditional (DTC)&lt;/h3&gt;
&lt;p&gt;DTC, FITCに関しては、SoRの共分散の計算がちょっと変わるだけ。
$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}_* | \mathbf{y})
= \mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;だったから、SoRの最初の計算部分を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kuu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, us)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kfu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kuf&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kfu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Kuu)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; dtc(t)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, [t])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ktu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kut&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Qtt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Kuu) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Qtt &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Normal(first(sor_mu), sqrt(first(sor_cov)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に変えるだけでいい。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-dtc.png&#34; alt=&#34;DTC&#34;&gt;&lt;/p&gt;
&lt;p&gt;5点の場合のデータがない部分の分散の情報がかなり改善されているし、10点ではほとんど平均、分散共にぴったり近似できている。
そうなるとFITCを使うまでもないということにもなりかねないが……&lt;/p&gt;
&lt;h3 id=&#34;the-fully-independent-training-conditional-fitc&#34;&gt;The Fully Independent Training Conditional (FITC)&lt;/h3&gt;
&lt;p&gt;最後にFITC。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\Sigma = (\mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1}, \Lambda = \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})
\end{aligned}
$$
を使って
$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}_* | \mathbf{y})
= \mathcal{N} (\mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} ),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;だったから同様に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kuu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, us)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Kfu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kuf&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Diagonal([ker(gk, xs[i], xs[i]) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Kfu[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Kuu) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eta 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Λ) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kfu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Kuu)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fitc(t)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Kut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, [t])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ktu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kut&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Qtt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Kuu) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Λ) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sor_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Qtt &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Normal(first(sor_mu), sqrt(first(sor_cov)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-fitc.png&#34; alt=&#34;FITC&#34;&gt;&lt;/p&gt;
&lt;p&gt;あまりDTCと変わらない感じになってしまった。この場合だと追加で計算した分散の対角線部分があまり効いてこなかったのだろう。&lt;/p&gt;
&lt;h3 id=&#34;手法の比較&#34;&gt;手法の比較&lt;/h3&gt;
&lt;p&gt;最後に、点の数を揃えて比較してみる。図示方法を変えるだけなので、コードは省略。&lt;/p&gt;
&lt;h4 id=&#34;2点&#34;&gt;2点&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-2pts.png&#34; alt=&#34;2点&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;5点&#34;&gt;5点&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-5pts.png&#34; alt=&#34;5点&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;10点&#34;&gt;10点&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-10pts.png&#34; alt=&#34;10点&#34;&gt;&lt;/p&gt;
&lt;p&gt;DTCの段階で十分良く近似できていて、\( \mathbf{f} | \mathbf{u} \) の分散の対角部分を考えるメリットがあまり感じられないような結果となってしまった。
どのような場合にFITCの近似ががDTCの場合より劇的に向上するのか考えてみたい。&lt;/p&gt;
&lt;p&gt;Jupyter Notebook: &lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/master/ivm.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/master/ivm.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;レポジトリ: &lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp&#34;&gt;https://github.com/matsueushi/gp_and_mlp&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程の補助変数法 (Inducing variable method) を理解する</title>
      <link>https://matsueushi.github.io/posts/sparse-approximate-gp/</link>
      <pubDate>Thu, 27 Jun 2019 00:55:38 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/sparse-approximate-gp/</guid>
      <description>&lt;p&gt;6/27 追記:  typo, \( p(\mathbf{y} | \mathbf{f}) \) の誤字を修正, \( q_{\text{FITC}}(\mathbf{f}_* | \mathbf{y}) \) の二番目の等号を修正 (\( \sigma^{-2} \) を削除)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」を読んでいるが、5.2補助変数法のところで、どの部分で近似が行われているのかよく分からなくなってしまった。&lt;/p&gt;
&lt;p&gt;そのため、今回は原論文であるQuinonero Candela, J. and Rasmussen, CE.の &lt;a href=&#34;http://www.jmlr.org/papers/volume6/quinonero-candela05a/quinonero-candela05a.pdf&#34;&gt;&amp;ldquo;A Unifying View of Sparse Approximate Gaussian Process Regression&amp;rdquo;&lt;/a&gt; を読んでスパース近似についてまとめて見ようと思う。ゴールは、The Fully Independent Training Conditional (FITC) の理解である。&lt;/p&gt;
&lt;p&gt;\( \mathbf{X}=(\mathbf{x}_1, \ldots, \mathbf{x}_N) \) を学習データ、
\( \mathbf{y}=(y_1, \ldots, y_N)^\top \) を観測値とする。学習データと観測値の関係は、ガウス過程から生成される関数 \( f \) と誤差 \( \epsilon_n \) を用いて&lt;/p&gt;
&lt;p&gt;$$ y_n = f(\mathbf{x_n}) + \epsilon_n,$$
$$\epsilon_n \sim \mathcal{N}(0, \sigma^2)$$&lt;/p&gt;
&lt;p&gt;と結びつく観測モデルを考える。\( \mathbf{f}=(f_1, \ldots, f_N)^\top, f_n=f(\mathbf{x}_n) \) は学習データの出力値である。
上の観測モデルは、
$$
p(\mathbf{y} | \mathbf{f}) = \mathcal{N}(\mathbf{f}, \sigma^2\mathbf{I})
$$
と書き直せる。&lt;/p&gt;
&lt;p&gt;取り組みたい問題は、ガウス過程回帰に基づいた回帰モデル。&lt;/p&gt;
&lt;p&gt;予測したい点を \( \mathbf{X}_*=(\mathbf{x}_{*1}, \ldots, \mathbf{x}_{*M} ) \) ,
出力値を \( \mathbf{f}_* \) , 観測値を \( \mathbf{y}_* \) とする。&lt;/p&gt;
&lt;p&gt;\( \mathbf{f}, \mathbf{f}_* \) の条件付き同時確率分布はベイズルールから&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}, \mathbf{f}_* | \mathbf{y}) = \frac{p(\mathbf{f}, \mathbf{f}_*)p(\mathbf{f} | \mathbf{y})}{p(\mathbf{y})},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;同時事前確率は、ガウス過程の定義より、カーネル関数が定める共分散行列 \( \mathbf{K}=(k(\mathbf{x}_i, \mathbf{x}_j))_{i, j} \) を用いて&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{K}_{\mathbf{f}, \mathbf{f}} &amp;amp; \mathbf{K}_{*, \mathbf{f}} \\
\mathbf{K}_{\mathbf{f}, *} &amp;amp; \mathbf{K}_{*, *}
\end{matrix}
\right)
\right),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;となる。学習データ \( \mathbf{X} \) が大きくなると \( \mathbf{K}_{\mathbf{f}, \mathbf{f}} \) の計算量が大きくなるので、この部分の計算量を減らすような近似を行いたいわけである。&lt;/p&gt;
&lt;p&gt;ガウス過程の予測分布 \( p(\mathbf{f}_* | \mathbf{y} ) \) は、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}_* | \mathbf{y}) &amp;amp;= \int p (\mathbf{f}, \mathbf{f}_* | \mathbf{y}) d\mathbf{f} \\
&amp;amp;= \frac{1}{p(\mathbf{y})} \int p(\mathbf{y} | \mathbf{f}) p(\mathbf{f}, \mathbf{f}_*)d\mathbf{f} \\
&amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{f}} \widetilde{\mathbf{K}}_{\mathbf{f}, \mathbf{f}}^{-1}\mathbf{y},
\mathbf{K}_{*, *} - \mathbf{K}_{*, \mathbf{f}}\widetilde{\mathbf{K}}_{\mathbf{f}, \mathbf{f}}^{-1} \mathbf{K}_{\mathbf{f}, *}),
\end{aligned}
$$
ここで \( \widetilde{\mathbf{K}}_{\mathbf{f}, \mathbf{f}} = \mathbf{K}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I} \) である。
この式は「ガウス過程と機械学習」の公式3.8に対応し、こちらではノイズ項目 \( \sigma^2 \mathbf{I} \) もカーネルに含めているので、notationが少し違っている。&lt;/p&gt;
&lt;p&gt;いくつかスパース近似にはバリエーションがあるが、補助入力点 \( \mathbf{u}=(\mathbf{u}_1, \ldots, \mathbf{u}_m)^\top \) を使って \( p(\mathbf{f}_* | \mathbf{f}) \)を近似するという方法は共通している。まずは近似ではなく正確に成り立っている式を確認する。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}_*, \mathbf{f}) &amp;amp;= \int p(\mathbf{f}_*, \mathbf{f}, \mathbf{u})d\mathbf{u} \\
&amp;amp;= \int p(\mathbf{f}_*, \mathbf{f} | \mathbf{u})p(\mathbf{u})d\mathbf{u},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{u}) = \mathcal{N}(\mathbf{0}, \mathbf{K}_{\mathbf{u}, \mathbf{u}}),
$$&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{f} | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}),
$$&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{f}_* | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *})
$$&lt;/p&gt;
&lt;p&gt;と表される。ここで、 \( \mathbf{Q}_{\mathbf{a}, \mathbf{b}} := \mathbf{K}_{\mathbf{a}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{b}} \) である。&lt;/p&gt;
&lt;p&gt;補助入力点 \( \mathbf{u} \) を使った条件付き確率 \( q(\mathbf{f}_* | \mathbf{u}), q(\mathbf{f} | \mathbf{u})\) を使って、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}_*, \mathbf{f}) &amp;amp;\simeq q(\mathbf{f}_*, \mathbf{f}) \\
&amp;amp;= \int q(\mathbf{f}_* | \mathbf{u}) q(\mathbf{f} | \mathbf{u}) p(\mathbf{u}) d\mathbf{u}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;という近似を行う。この時の \( q \) の作り方が近似の手法によって異なることになる。&lt;/p&gt;
&lt;h3 id=&#34;the-subset-of-data-sod-approximation&#34;&gt;The Subset of Data (SoD) Approximation&lt;/h3&gt;
&lt;p&gt;部分データ法は元々の入力点の中から代表となる点を抜き出し、抜き出した点を新たな入力点としてガウス回帰を行うやり方。細かい説明は省略。&lt;/p&gt;
&lt;h3 id=&#34;the-subset-of-regressors-sor-approximation&#34;&gt;The Subset of Regressors (SoR) Approximation&lt;/h3&gt;
&lt;p&gt;The Subset of Regressors Approximation (部分回帰法?, 以下SoR) は \( \mathbf{f}, \mathbf{f}_* \)の同時分布を&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{Q}_{\mathbf{f}, \mathbf{f}} &amp;amp; \mathbf{Q}_{*, \mathbf{f}} \\
\mathbf{Q}_{\mathbf{f}, *} &amp;amp; \mathbf{Q}_{*, *}
\end{matrix}
\right)
\right)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と近似するもので、後に出てくるDTC, FITCの基礎となる考え方である。
心持ちとしては、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f} | \mathbf{u})
&amp;amp;= \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{0}) \\
&amp;amp;\simeq \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}) \\
&amp;amp;= p(\mathbf{f} | \mathbf{u}),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f}_* | \mathbf{u}) &amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{0}) \\
&amp;amp;\simeq \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *}) \\
&amp;amp;= p(\mathbf{f}_* | \mathbf{u})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と、\( p(\mathbf{f} | \mathbf{u}), p(\mathbf{f}_* | \mathbf{u}) \) の分散を \( 0 \) と近似して、\( \mathbf{f}, \mathbf{f}_* \) と \( \mathbf{u} \) の関係がdeterministicと仮定するものである。(deterministicの場合はもはや \( \mathbf{f} | \mathbf{u}\) は正規分布ではないので、この書き方は微妙な感じかもしれないが、論文のnotationに従った)&lt;/p&gt;
&lt;p&gt;仮定から \( q_{\text{SoR}}(\mathbf{f}, \mathbf{f}_* ) \) の導出は、 同時分布が正規分布になることと、多変数正規分布の線形変換の性質から、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\mathbf{f} &amp;amp;= \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u} \\
&amp;amp; \sim \mathcal{N}(\mathbf{0}, (\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1}) \mathbf{K}_{\mathbf{u}, \mathbf{u}} (\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1})^\top) \\
&amp;amp; \sim \mathcal{N}(\mathbf{0}, \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}}) \\
&amp;amp; \sim \mathcal{N}(\mathbf{0}, \mathbf{Q}_{\mathbf{f}, \mathbf{f}}),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;であり、同様に \( \mathbf{f}_* \sim \mathcal{N}(\mathbf{0}, \mathbf{Q}_{*, *}) \) を得られることと、&lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-covariance_matrix&#34;&gt;相互共分散行列&lt;/a&gt;の線型性から、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\text{cov}(\mathbf{f}, \mathbf{f}_*) &amp;amp;= \text{cov}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u} ) \\
&amp;amp; = \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \text{cov}(\mathbf{u}, \mathbf{u}) (\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1})^\top \\
&amp;amp; = \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, *} \\
&amp;amp; = \mathbf{Q}_{\mathbf{f}, *},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;\( \text{cov}(\mathbf{f}_*, \mathbf{f}) = \mathbf{Q}_{*, \mathbf{f}} \) であることから従う。&lt;/p&gt;
&lt;p&gt;予測分布は、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f}_* | \mathbf{y})
&amp;amp; = \mathcal{N}(\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{y},
\mathbf{Q}_{*, *} - \mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{Q}_{\mathbf{f}, *})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;で与えられる。これが \( \Sigma = (\sigma^{-2} \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1} \) を用いて \( \mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y}, \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} ) \) と等しくなることを示そう。 初見でなぜこうなるか不明だった……&lt;/p&gt;
&lt;p&gt;まず、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\sigma^2 \Sigma^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}}
&amp;amp; = (\mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \sigma^2 \mathbf{K}_{\mathbf{u}, \mathbf{u}}) \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}} \\
&amp;amp; = \mathbf{K}_{\mathbf{u}, \mathbf{f}} (\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}} + \sigma^2 \mathbf{I}) \\
&amp;amp; = \mathbf{K}_{\mathbf{u}, \mathbf{f}} (\mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;であるから、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1}
&amp;amp; = \sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma
(\sigma^2 \Sigma^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}})
(\mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \\
&amp;amp; = \sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;を得る。分散の方の等号も、この式を使えば最終的に \( \Sigma (\mathbf{K}_{\mathbf{u}, \mathbf{u}} + \sigma^{-2}\mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}}) = \mathbf{I} \) に帰着させて示すことができる。&lt;/p&gt;
&lt;h3 id=&#34;the-deterministic-training-conditional-dtc-approximation&#34;&gt;The Deterministic Training Conditional (DTC) Approximation&lt;/h3&gt;
&lt;p&gt;DTCはSoRと似ていて、&lt;/p&gt;
&lt;p&gt;$$
q_{\text{DTC}}(\mathbf{f} | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{0})
$$&lt;/p&gt;
&lt;p&gt;と \( \mathbf{f} \) が deterministic に \( \mathbf{u} \) によって定まると仮定する。一方、出力値の方は&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}_* | \mathbf{u}) &amp;amp;= p(\mathbf{f}_* | \mathbf{u}) \\
&amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と近似を行わない。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\text{cov}(\mathbf{f}, \mathbf{f}_*) &amp;amp;= \mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \text{cov}(\mathbf{u}, \mathbf{f}_*) \\
&amp;amp;= \mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, *} \\
&amp;amp;= \mathbf{Q}_{\mathbf{f}, *}
\end{aligned}
$$
などから、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{Q}_{\mathbf{f}, \mathbf{f}} &amp;amp; \mathbf{Q}_{*, \mathbf{f}} \\
\mathbf{Q}_{\mathbf{f}, *} &amp;amp; \mathbf{K}_{*, *}
\end{matrix}
\right)
\right)
\end{aligned}
$$
となる。SoRの時とほとんど同じ。入力値の近似で計算量が十分削減できる場合は、出力値のカーネルの部分で正確な値を使いたいということだろう。&lt;/p&gt;
&lt;p&gt;予測分布は、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}_* | \mathbf{y})
&amp;amp; = \mathcal{N}(\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{Q}_{\mathbf{f}, *}) \\
&amp;amp; = \mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;となる。これはSoRの時の結果からすぐに従う。&lt;/p&gt;
&lt;h3 id=&#34;the-fully-independent-training-conditional-fitc-approximation&#34;&gt;The Fully Independent Training Conditional (FITC) Approximation&lt;/h3&gt;
&lt;p&gt;いよいよ、当初の目的だったFITCまでたどり着いた。FITCは、DTCとほぼ同じだが、
DTCでは切り捨てていた \( q(\mathbf{f} | \mathbf{u}) \) の分散を考慮する。&lt;/p&gt;
&lt;p&gt;ただ、分散共分散行列をフルで計算したくない (フルで計算すると近似を行わない通常のガウス回帰である) ので、
出力値の間の相関を無視して、対角線の部分だけを計算する。つまり、&lt;/p&gt;
&lt;p&gt;$$
q_{\text{FITC}}(\mathbf{f} | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}))
$$&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}_* | \mathbf{u}) &amp;amp;= p(\mathbf{f}_* | \mathbf{u}) \\
&amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;となる。今までと同じように計算して、同時分布&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}) &amp;amp; \mathbf{Q}_{*, \mathbf{f}} \\
\mathbf{Q}_{\mathbf{f}, *} &amp;amp; \mathbf{K}_{*, *}
\end{matrix}
\right)
\right)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と予測分布&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}_* | \mathbf{y})
&amp;amp; = \mathcal{N}(\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \Lambda)^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \Lambda)^{-1} \mathbf{Q}_{\mathbf{f}, *}) \\
&amp;amp; = \mathcal{N} (\mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;を得る。ここで、 \( \Sigma = (\mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1}, \Lambda = \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I}) \) である。&lt;/p&gt;
&lt;h3 id=&#34;最後に&#34;&gt;最後に&lt;/h3&gt;
&lt;p&gt;統一的な枠組みで SoD, SoR, DTC, FITC と順に読んでいくことで補助変数法を一望することができて面白かった。&lt;/p&gt;
&lt;p&gt;本文では、一部の相関を無視しないで考える The Partially Independent Training Conditional (PITC) や Inducing Variables の選び方についても触れられているようだ。&lt;/p&gt;
&lt;p&gt;時間があれば、各補助変数法を実際に実装してみて、回帰結果がどの程度変わるのか確認してみたい。&lt;/p&gt;
&lt;p&gt;-&amp;gt; やりました&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../ivm/&#34;&gt;ガウス過程の補助変数法をJuliaで実装、回帰結果を比較&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Softman - 500ms (2018)</title>
      <link>https://matsueushi.github.io/posts/softman-500ms/</link>
      <pubDate>Sun, 16 Jun 2019 16:20:34 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/softman-500ms/</guid>
      <description>&lt;iframe style=&#34;border: 0; width: 350px; height: 820px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=2191479424/size=large/bgcol=ffffff/linkcol=0687f5/package=2476498345/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://softman.bandcamp.com/album/500ms&#34;&gt;500ms by Softman&lt;/a&gt;&lt;/iframe&gt;  
&lt;p&gt;たまたまbandcampを徘徊していたら出会ったGlitch。&lt;/p&gt;
&lt;p&gt;言葉で表現するのが難しいのだが、パソコンとか家電の起動音とか動作音とかの一番綺麗な部分が切り取られて、ノイズと共に閉じ込められて音楽になったような感じだろうか……&lt;/p&gt;
&lt;p&gt;シンガポールのアンビエントレーベルEvening Chantsというところからリリースされていて、フィジカルはカセットテープのみ。&lt;/p&gt;
&lt;iframe src=&#34;https://www.facebook.com/plugins/post.php?href=https%3A%2F%2Fwww.facebook.com%2Feveningchants%2Fposts%2F1927477237367335&amp;width=500&#34; width=&#34;500&#34; height=&#34;554&#34; style=&#34;border:none;overflow:hidden&#34; scrolling=&#34;no&#34; frameborder=&#34;0&#34; allowTransparency=&#34;true&#34; allow=&#34;encrypted-media&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;レーベルは2018年の9月に立ち上がったばかりで、他のリリースも配信とカセットテープなので何かこだわりがあるのかと思ったが、
&lt;a href=&#34;https://themassage.jp/dirt-on-tape-vol-05/&#34;&gt;このような記事&lt;/a&gt;もあったので、アンビエント界隈ではカセットテープリリースというのがよくあることなのかもしれない。&lt;/p&gt;
&lt;p&gt;ロンドンベースのミュージシャンということ以外Softmanの素性は不明(bandcampに写真は載っている)で、
Twitterやウェブサイトでの言及もほとんど見つからず、謎が多い。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;“The track listings avoids implying anything or to artificially making you feel something - just face value. It’s not meant to be about anything,”&lt;br&gt;
&lt;a href=&#34;https://softman.bandcamp.com/album/500ms&#34;&gt;https://softman.bandcamp.com/album/500ms&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;と書かれているので、細かいことは追求せず純粋にノイズの美しい揺らめきに耳を傾けよう。&lt;/p&gt;
&lt;p&gt;好きな曲: 500ms_07, 500ms_12, 500ms_22&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaでガウス過程を実装&amp;パラメーター推定</title>
      <link>https://matsueushi.github.io/posts/gp-parameter-estimation/</link>
      <pubDate>Sat, 08 Jun 2019 20:08:12 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-parameter-estimation/</guid>
      <description>&lt;p&gt;「ガウス過程と機械学習」を3章まで読み終えたので、復習を兼ねてJulia(1.1.0)でガウス過程を実装し、
カーネルのハイパーパラメーターをOptim.jlで推定するところまでをまとめる。数学的に細かい内容は本を読んで欲しい。
図3.23の陸上男子100mの世界記録の回帰モデルを作成することを今回の目標とする。&lt;/p&gt;
&lt;p&gt;ガウスカーネルによる回帰:
&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_gaussian.png&#34; alt=&#34;ガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;ガウスカーネル＋線形カーネルによる回帰:
&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_linear_gaussian.png&#34; alt=&#34;ガウスカーネル＋線形カーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;任意の有限の入力
\( x_1, \ldots , x_n \)
を与えたときに、出力
\( (f(x_1), \ldots , f(x_n)) \)
が平均
\( (\mu(x_1), \ldots , \mu(x_n)) \)
分散
\( (k(x_n, x_{nm} )) \)
のガウス分布に従う時、
\( f \)
をガウス過程と呼び、
\( f \sim \text{GP} (\mu(x), k(x, x^\prime)) \)
と書く。そして
\( \mu \)
を平均関数、
\( k \)
をカーネル関数と呼んでいるのであった。&lt;/p&gt;
&lt;p&gt;今回は本と同様、簡単のために平均関数が恒等的に0となるものだけを考える。&lt;/p&gt;
&lt;h2 id=&#34;ガウスカーネルの定義&#34;&gt;ガウスカーネルの定義&lt;/h2&gt;
&lt;p&gt;もっとも基本的なカーネルであるガウスカーネルを定義して、ガウス過程を構成する。ガウスカーネルのカーネル関数は次のものとする。
$$ k(x, x^\prime ) = \exp \left( -\frac{|x-x^\prime|^2}{\theta}\right) $$
本文では
$$ k(x, x^\prime ) = \theta_1 \exp \left( -\frac{|x-x^\prime|^2}{\theta_2}\right) $$
この形で紹介されていたが、後々カーネルの線型結合を考えるのでここでは
\( \exp \)
の前に係数を付けない前者を採用する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;abstract type&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; cov(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;, xs1, xs2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# covariance matrix&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs1, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs2, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(n1, n2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            c[i, j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ker(k, xs1[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], xs2[j, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    c
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cov(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;, xs) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(k, xs, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Gaussian Kernel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianKernel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     theta&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianKernel&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    exp(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; sum((x1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x2)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;theta)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分散共分散行列を計算する &lt;code&gt;cov&lt;/code&gt; 関数とガウスカーネルを定義した。
&lt;code&gt;mutable&lt;/code&gt; にしたのは、後々パラメーター推定をするときにパラメーターの更新をするため。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gk_dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MvNormal(zeros(Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)), cov(gk, xs))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(gk_dist, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;\( \theta=1 \)のガウスカーネルから生成されるガウス過程から、入力を-4から4まで0.5ごとに選んだ点とし、サンプルをいくつか取ってみる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_1.png&#34; alt=&#34;ガウス過程からのサンプル&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ガウス過程の定義&#34;&gt;ガウス過程の定義&lt;/h2&gt;
&lt;p&gt;上でガウスカーネルを定義した方法には一つ問題があり、例えば点を0.1毎に取ると上手く動かない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gk_dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MvNormal(zeros(Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)), cov(gk, xs))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(gk_dist, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PosDefException: matrix is not positive definite; Cholesky factorization failed.

Stacktrace:
 [1] checkpositivedefinite at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/factorization.jl:11 [inlined]
 [2] #cholesky!#96(::Bool, ::Function, ::LinearAlgebra.Hermitian{Float64,Array{Float64,2}}, ::Val{false}) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:153
 [3] #cholesky! at ./none:0 [inlined]
 [4] #cholesky!#97(::Bool, ::Function, ::Array{Float64,2}, ::Val{false}) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:185
 [5] #cholesky#101 at ./none:0 [inlined]
 [6] cholesky at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:275 [inlined] (repeats 2 times)
 [7] Type at /Users/apple/.julia/packages/PDMats/AObTs/src/pdmat.jl:19 [inlined]
 [8] MvNormal(::Array{Float64,1}, ::Array{Float64,2}) at /Users/apple/.julia/packages/Distributions/wY4bz/src/multivariate/mvnormal.jl:196
 [9] top-level scope at In[18]:6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;問題が発生した原因は、 &lt;code&gt;cov&lt;/code&gt; 関数により生成される分散共分散行列が正定値にならないことである。対策としては、分散共分散行列の対角成分に小さい数を加えて行列が正定値になるようにすれば良い。（1.4のリッジ回帰の説明を参照)&lt;/p&gt;
&lt;p&gt;各成分ごとにカーネル関数を計算した結果得られる分散共分散行列に、単位行列の定数倍を加えて最終的に使う分散共分散行列を作るというのは、観測ノイズを考慮した観測モデルを考えるときも同じなので、今回はガウス回帰モデルを次のように定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Gaussian Process
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    eta&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# regularization parameter&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    GaussianProcess(kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt;}(kernel, &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-6&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    GaussianProcess(kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt;, eta&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;new&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;K&lt;/span&gt;}(kernel, &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(eta))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# regularlize&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xs) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; dist(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MvNormal(zeros(l), k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここでは、 &lt;code&gt;eta&lt;/code&gt; が観測ノイズの項目に相当し、観測値にノイズがないものとして考える場合は分散共分散行列の正則化のため対角成分に1e-6を加えることにする。&lt;code&gt;xs&lt;/code&gt; の刻みを細かくしてサンプリングできることを確認しよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_2.png&#34; alt=&#34;ガウス過程からのサンプリング&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_3.png&#34; alt=&#34;ガウス過程からのサンプリング&#34;&gt;)&lt;/p&gt;
&lt;p&gt;ノイズ項を入れるとこんな感じ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_noise.png&#34; alt=&#34;ガウス過程からのサンプリング(ノイズ項)&#34;&gt;&lt;/p&gt;
&lt;p&gt;同様に定数カーネル、線形カーネルも定義しておこう。(その他のカーネルにも本文には出てくるが、ここでは省略)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Constant kernel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ConstantKernel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ConstantKernel&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linear kernel
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;LinearKernel&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LinearKernel&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; dot(x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;LinearKernelのカーネルの実装では、定数項を考慮するために1を加えている。サンプルをプロットするとそれぞれ下のようになる（コードは略）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_constant.png&#34; alt=&#34;定数カーネル&#34;&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_linear.png&#34; alt=&#34;線形カーネル&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;カーネルの定数倍和&#34;&gt;カーネルの定数倍、和&lt;/h2&gt;
&lt;p&gt;本文3.3.2にあるように、カーネルは組み合わせて使うことができ、カーネルの和・積もまたカーネル関数になる。&lt;/p&gt;
&lt;p&gt;今回、ガウスカーネル、ガウスカーネル＋線形カーネルを考えるにあたっては、カーネルの定数倍、カーネルの和が定義されていれば十分なので、その二つを定義しておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Scalar product
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KernelScalarProd&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    coef&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelScalarProd&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Sum
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;KernelSum&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kernel1&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    kernel2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelSum&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1, x1, x2) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(coef&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;, k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KernelScalarProd(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(coef), k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(k1&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;, k2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KernelSum(k1, k2)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こんな風にカーネルの線型結合からガウス過程が定義できるようになった。下は、線形カーネルとガウスカーネルの線型結合を考えた例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; LinearKernel() 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_sum.png&#34; alt=&#34;線型結合&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;回帰&#34;&gt;回帰&lt;/h2&gt;
&lt;p&gt;サンプリングができたので、次に回帰を行う。&lt;/p&gt;
&lt;p&gt;回帰を行おう。本文の後半には、ガウス過程回帰の計算方法を少なくする方法が書いてあるが、まだそこまで読んでいないのでここは素直な方法(本の公式3.8)でガウス過程回帰を定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; predict(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, xtest, xtrain, ytrain)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_star &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xtrain, xtest)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xtest)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(cov(gp, xtrain))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ytrain
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_star
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    MvNormal(mu, sig)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まず、パラメーターは既知のものとして、予測分布からのサンプリングと、誤差範囲を示してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.596&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;6.560&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.082&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xtest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(range(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, stop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;, length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; predict(gp, xtest, xs, ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mapslices(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]), rand(pred, &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;), dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xtest, qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(xtest, mean(pred), label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mean&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Posterior distribution&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;実は、これだとうまくいかない&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;PosDefException: matrix is not Hermitian; Cholesky factorization failed.

Stacktrace:
 [1] checkpositivedefinite(::Int64) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/factorization.jl:11
 [2] #cholesky!#97(::Bool, ::Function, ::Array{Float64,2}, ::Val{false}) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:182
 [3] #cholesky#101 at ./none:0 [inlined]
 [4] cholesky at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:275 [inlined] (repeats 2 times)
 [5] Type at /Users/apple/.julia/packages/PDMats/AObTs/src/pdmat.jl:19 [inlined]
 [6] Type at /Users/apple/.julia/packages/Distributions/wY4bz/src/multivariate/mvnormal.jl:196 [inlined]
 [7] predict(::GaussianProcess{KernelScalarProd}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./In[24]:10
 [8] top-level scope at In[25]:7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因は、 &lt;code&gt;predict&lt;/code&gt; の &lt;code&gt;sig&lt;/code&gt; が計算誤差によりSymmetricになっていないのが原因なので、&lt;code&gt;predict&lt;/code&gt; を次のように修正する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; predict(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, xtest, xtrain, ytrain)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   k_star &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xtrain, xtest)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xtest)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(cov(gp, xtrain))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ytrain
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   sig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Symmetric(s &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_star)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   MvNormal(mu, sig)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;すると、次のような結果が得られる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_regression_1.png&#34; alt=&#34;回帰結果&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;微分を定義する&#34;&gt;微分を定義する&lt;/h2&gt;
&lt;p&gt;学習データを \( \mathcal{D}=(\mathbf{X}, \mathbf{y}) \), ハイパーパラメーターを \( \boldsymbol{\theta} \), ハイパーパラメータから計算されるカーネル行列を \( \mathbf{K}_\boldsymbol{\theta} \) とした時に、対数尤度関数&lt;/p&gt;
&lt;p&gt;$$ L := -\log | \mathbf{K}_\boldsymbol{\theta} | - \mathbf{y}^T \mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y} $$&lt;/p&gt;
&lt;p&gt;を最大化するハイパーパラメーターを勾配法で求めよう。\( L \) の偏微分は、&lt;/p&gt;
&lt;p&gt;$$ \frac{\partial L}{\partial \theta} = \text{tr} \left( \mathbf{K}_\boldsymbol{{\theta}}^{-1} \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \theta} \right) + (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})^T \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \theta} (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})$$&lt;/p&gt;
&lt;p&gt;だった。パラメータ \( \theta \in \boldsymbol{\theta} \) は \( \theta &amp;gt; 0 \) でなくてはならないので、\( \tau = \log \theta \) と変換して \( \tau \) を最適化する。つまり、実際に勾配法で使う偏微分は
$$ \frac{\partial L}{\partial \tau} = \frac{\partial L}{\partial \theta} \frac{\partial \theta}{\partial \tau} = \theta \frac{\partial L}{\partial \theta}$$
である。同様に \( \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \tau} = \theta \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \theta} \)
だから、\( \theta \) の代わりに \( \tau \) を考えて&lt;/p&gt;
&lt;p&gt;$$ \frac{\partial L}{\partial \tau} = \text{tr} \left( \mathbf{K}_\boldsymbol{{\theta}}^{-1} \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \tau} \right) + (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})^T \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \tau} (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})$$&lt;/p&gt;
&lt;p&gt;を計算する。まずは &lt;code&gt;GaussianKernel&lt;/code&gt;, &lt;code&gt;ConstantKernel&lt;/code&gt;, &lt;code&gt;LinearKernel&lt;/code&gt; の微分を定義する。パラメーターごとの偏微分したもののリストを返すことにする
&lt;code&gt;ConstantKernel&lt;/code&gt;, &lt;code&gt;LinearKernel&lt;/code&gt; はパラメーターを持たないので、空のリストを返しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianKernel&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [ker(k, x1, x2) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;theta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; sum((x1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x2)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ConstantKernel&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LinearKernel&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;カーネルの定数倍、和に対して、元のカーネルの微分を利用して微分を定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelScalarProd&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, x1, x2), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, x1, x2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelSum&lt;/span&gt;, x1, x2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    [logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1, x1, x2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2, x1, x2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;optimjlによる最適化&#34;&gt;Optim.jlによる最適化&lt;/h2&gt;
&lt;p&gt;微分を定義したので、&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/&#34;&gt;Optim.jl&lt;/a&gt; で最適化しよう。&lt;/p&gt;
&lt;p&gt;まず、カーネルのパラメーターを更新する &lt;code&gt;update!&lt;/code&gt; を定義。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianKernel&lt;/span&gt;, theta)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;theta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(theta)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ConstantKernel&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;LinearKernel&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, params&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, params[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params[&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gp
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを和と定数倍の場合にも延長する。和のカーネルを更新する時に、ぞれぞれのカーネルのパラメーターの数を知る必要がある。&lt;code&gt;Base.length&lt;/code&gt; をカーネル、ガウス過程に対して拡張しよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Kernel&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(fieldnames(typeof(k)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelScalarProd&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelSum&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでようやく和と定数倍の場合の &lt;code&gt;update&lt;/code&gt; が定義できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelScalarProd&lt;/span&gt;, params&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, params[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;KernelSum&lt;/span&gt;, params&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1, params[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;l]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2, params[l&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;対数尤度関数と微分では共通する計算があるので、&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Avoid repeating computations&lt;br&gt;
&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/#user/tipsandtricks/#avoid-repeating-computations&#34;&gt;https://julianlsolvers.github.io/Optim.jl/stable/#user/tipsandtricks/#avoid-repeating-computations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;を参考にして &lt;code&gt;fg!&lt;/code&gt; を定義。Optim.jlは関数の最小化を行うため、&lt;code&gt;fg!&lt;/code&gt; では \( -L \) の値と微分を計算している。(ついでに対数尤度も定義しておく)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logp(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, xs, ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;log(det(k)) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; ys&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fg!(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianProcess&lt;/span&gt;, xs, ys, F, G, params)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# -logp and gradient&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(params)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(gp, y&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xs)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(k)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    k_inv_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; deriv(d_mat&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tr(k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; d_mat) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k_inv_y&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; d_mat &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv_y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# gradient&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; G &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d_tensor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(n, n, Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(gp))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logderiv(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xs[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], xs[j, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                d_tensor[i, j, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#75715e&#34;&gt;# eta&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        d_tensor[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y[&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        G &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; mapslices(deriv, d_tensor, dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# log likelihoood&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; F &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;log(det(k)) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; ys&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずは図3.16のデータでハイパーパラメーターを推定しよう。推定したいハイパーパラメータの形は
$$ k(\mathbf{x}, \mathbf{x}^\prime \mid \boldsymbol{\theta}) = \theta_1 \exp \left( - \frac{|\mathbf{x} - \mathbf{x}^\prime |^2}{\theta_2} \right) + \theta_3 \delta (\mathbf{x}, \mathbf{x}^\prime) $$
だから、パラメーターを仮置きして下のようにガウス過程を定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Optim.jlの&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/#algo/gradientdescent/&#34;&gt;&lt;code&gt;GradientDescent&lt;/code&gt;&lt;/a&gt; を使ってパラメーターを推定する。実際のハイパーパラメーターに戻すために、最後に &lt;code&gt;exp&lt;/code&gt; を取っている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Optim
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lower &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;upper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp, xs, ys, F, G, x)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lower, upper, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Fminbox(GradientDescent()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with Gradient Descent
 * Starting Point: [0.0,0.0,0.0]
 * Minimizer: [0.4677728528438338,1.8810363129622452, ...]
 * Minimum: 1.738770e+00
 * Iterations: 3
 * Convergence: true
   * |x - x&amp;#39;| ≤ 0.0e+00: false 
     |x - x&amp;#39;| = 6.21e-08 
   * |f(x) - f(x&amp;#39;)| ≤ 0.0e+00 |f(x)|: false
     |f(x) - f(x&amp;#39;)| = 9.45e-15 |f(x)|
   * |g(x)| ≤ 1.0e-08: true 
     |g(x)| = 9.23e-09 
   * Stopped by an increasing objective: false
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 353
 * Gradient Calls: 353
[theta1, theta2, theta3] = [1.59643, 6.5603, 0.0819847]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;男子100m走の世界記録のデータを使ったハイパーパラメーター推定&#34;&gt;男子100m走の世界記録のデータを使ったハイパーパラメーター推定&lt;/h2&gt;
&lt;p&gt;長くなったが、最後に、本と同様、男子100m走の世界記録のデータを使ってハイパーパラメーターを推定してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; CSV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Dates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; DataFrames
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CSV&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#66d9ef&#34;&gt;IOBuffer&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Date,Time
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1964/10/15,10.06
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1968/6/20,10.03
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1968/10/13,10.02
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1968/10/14,9.95
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1983/7/3,9.93
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1987/8/30,9.93
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1988/8/17,9.93
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1988/9/24,9.92
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1991/7/14,9.9
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1991/8/25,9.86
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1994/7/6,9.85
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1996/7/27,9.84
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1999/6/16,9.79
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2002/9/14,9.78
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2005/6/14,9.77
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2006/5/12,9.77
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2006/6/11,9.77
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2006/8/18,9.77
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2007/9/9,9.74
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2008/5/31,9.72
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2008/8/16,9.69
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2009/8/16,9.58&amp;#34;&lt;/span&gt;); dateformat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yyyy/mm/dd&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;disallowmissing!(df)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Date, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Time, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_data.png&#34; alt=&#34;男子100mの世界記録&#34;&gt;&lt;/p&gt;
&lt;p&gt;値を平均0, 分散1となるように正規化する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Dates
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs_raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dates&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Date &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; Date(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs_mean, xs_std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(xs_raw), std(xs_raw)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys_raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Time
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys_mean, ys_std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(ys_raw), std(ys_raw)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (xs_raw &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; xs_mean) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; xs_std
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (ys_raw &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; ys_mean) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; ys_std
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter(xs, ys, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_data_2.png&#34; alt=&#34;正規化した男子100mの世界記録&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/#algo/lbfgs/&#34;&gt;&lt;code&gt;LBFGS&lt;/code&gt;&lt;/a&gt; でハイパーパラメーターを推定する。&lt;code&gt;[0, 0, 0]&lt;/code&gt; からスタートすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plot_gp_100m(gp, pars)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(gp, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(range(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, stop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; predict(gp, x_test, xs, ys)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mapslices(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]), rand(pred, &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;), dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# convert&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x_test &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; xs_std &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; xs_mean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; ys_std &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; ys_mean
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(x_test, qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(x_test, mean(pred) &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; ys_std &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; ys_mean, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    scatter!(xs_raw, ys_raw, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp, xs, ys, F, G, x)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Fminbox(LBFGS()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logp:&amp;#34;&lt;/span&gt;, logp(gp, xs, ys))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot_gp_100m(gp, pars)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with L-BFGS
 * Starting Point: [0.0,0.0,0.0]
 * Minimizer: [1.4404906589345008,2.6294999978819886, ...]
 * Minimum: -1.486413e+01
 * Iterations: 20
 * Convergence: true
   * |x - x&amp;#39;| ≤ 0.0e+00: true 
     |x - x&amp;#39;| = 0.00e+00 
   * |f(x) - f(x&amp;#39;)| ≤ 0.0e+00 |f(x)|: true
     |f(x) - f(x&amp;#39;)| = 0.00e+00 |f(x)|
   * |g(x)| ≤ 1.0e-08: false 
     |g(x)| = 5.07e-08 
   * Stopped by an increasing objective: true
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 7536
 * Gradient Calls: 7536
[theta1, theta2, theta3] = [4.22277, 13.8668, 0.102625]
logp:14.864131619224107
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_1.png&#34; alt=&#34;[0,0,0]からスタートしたガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;となって本に載っているのとは別の局所解に収束してしまう。&lt;code&gt;[0, 0, -3]&lt;/code&gt; からスタートすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp, xs, ys, F, G, x)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Fminbox(LBFGS()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logp:&amp;#34;&lt;/span&gt;, logp(gp, xs, ys))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot_gp_100m(gp, pars)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with L-BFGS
 * Starting Point: [0.0,0.0,-3.0]
 * Minimizer: [0.4403584574143354,-1.4741097963164387, ...]
 * Minimum: -1.407396e+01
 * Iterations: 5
 * Convergence: true
   * |x - x&amp;#39;| ≤ 0.0e+00: true 
     |x - x&amp;#39;| = 0.00e+00 
   * |f(x) - f(x&amp;#39;)| ≤ 0.0e+00 |f(x)|: true
     |f(x) - f(x&amp;#39;)| = 0.00e+00 |f(x)|
   * |g(x)| ≤ 1.0e-08: false 
     |g(x)| = 1.45e-08 
   * Stopped by an increasing objective: true
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 331
 * Gradient Calls: 331
[theta1, theta2, theta3] = [1.55326, 0.228982, 0.0429989]
logp:14.073964533876048
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_gaussian.png&#34; alt=&#34;[0,0,-3]からスタートしたガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;と、本と同様の回帰結果が得られる。(パラメーターの値は本と違ってしまっているが&amp;hellip;)&lt;/p&gt;
&lt;p&gt;最後に、ガウスカーネル + 線形カーネルによる回帰を行ってみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gp_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ConstantKernel() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; LinearKernel() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp_2, xs, ys, F, G, x)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;], 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Fminbox(LBFGS()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3, theta4, theta5] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logp:&amp;#34;&lt;/span&gt;, logp(gp_2, xs, ys))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot_gp_100m(gp_2, pars)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with L-BFGS
 * Starting Point: [0.0,0.0,0.0,0.0,-3.0]
 * Minimizer: [-3.591175043240611,-0.6634886622587809, ...]
 * Minimum: -1.970913e+01
 * Iterations: 12
 * Convergence: true
   * |x - x&amp;#39;| ≤ 0.0e+00: true 
     |x - x&amp;#39;| = 0.00e+00 
   * |f(x) - f(x&amp;#39;)| ≤ 0.0e+00 |f(x)|: true
     |f(x) - f(x&amp;#39;)| = 0.00e+00 |f(x)|
   * |g(x)| ≤ 1.0e-08: false 
     |g(x)| = 6.18e+00 
   * Stopped by an increasing objective: true
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 4960
 * Gradient Calls: 4960
[theta1, theta2, theta3, theta4, theta5] = [0.0275659, 0.515051, 0.110337, 0.0252142, 0.0470559]
logp:19.709131389510937
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_linear_gaussian.png&#34; alt=&#34;線形+ガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;内容をまとめたJupyter Notebook -&amp;gt;&lt;br&gt;
&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/notebook_blog/blob/master/gp_blog.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/notebook_blog/blob/master/gp_blog.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;カーネル部分をjlファイルに分離し、指数カーネルや周期カーネルも定義したレポジトリはこちら -&amp;gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp&#34;&gt;https://github.com/matsueushi/gp_and_mlp&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GitHub Pagesに引っ越した</title>
      <link>https://matsueushi.github.io/posts/hugo/</link>
      <pubDate>Thu, 06 Jun 2019 22:48:39 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/hugo/</guid>
      <description>&lt;p&gt;過去のポストをこっちのGitHub Pagesに移行させた。疲れた。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>KaTeXで複数行の数式を入力</title>
      <link>https://matsueushi.github.io/posts/katex-multiline/</link>
      <pubDate>Wed, 05 Jun 2019 22:19:14 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/katex-multiline/</guid>
      <description>&lt;p&gt;結構手間取った。&lt;br&gt;
バックスラッシュを4つ重ねた後スペースを置く &lt;code&gt;\\\\&lt;/code&gt; と改行できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-tex&#34; data-lang=&#34;tex&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;\\&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;\begin&lt;/span&gt;{aligned} 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x &amp;amp;= 1+1 &lt;span style=&#34;color:#66d9ef&#34;&gt;\\\\&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &amp;amp;= 2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;\end&lt;/span&gt;{aligned}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;\\&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果:&lt;/p&gt;
&lt;p&gt;\(
\begin{aligned}
x &amp;amp;= 1+1 \\
&amp;amp;= 2
\end{aligned}
\)&lt;/p&gt;
&lt;p&gt;参考 :&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Cannot achieve line break in multiline equation (LaTeX/Mathjax)&lt;br&gt;
&lt;a href=&#34;https://github.com/gcushen/hugo-academic/wiki/FAQ&#34;&gt;https://github.com/gcushen/hugo-academic/wiki/FAQ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>KaTeX Test</title>
      <link>https://matsueushi.github.io/posts/katex-test/</link>
      <pubDate>Sat, 01 Jun 2019 21:05:25 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/katex-test/</guid>
      <description>&lt;p&gt;KaTeX Test&lt;/p&gt;
&lt;p&gt;\( \lim \sum \int  \)&lt;/p&gt;
&lt;p&gt;Katexでは \( \varprojlim \) はサポートされていない&lt;/p&gt;
&lt;p&gt;_ではなく\_を使うと \( x_{mn} \)などの添字が出せる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程と機械学習: 3.5まで</title>
      <link>https://matsueushi.github.io/posts/gp-nlp-2/</link>
      <pubDate>Sun, 19 May 2019 22:37:52 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-nlp-2/</guid>
      <description>&lt;p&gt;引き続き「ガウス過程と機械学習(第二刷)」を読み進めJuliaで実装している。&lt;/p&gt;
&lt;p&gt;ハイパーパラメーターの最適化(勾配を使わず、Optim.jlの &lt;code&gt;optimize&lt;/code&gt; を使ってしまった)のところまで読み進めた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.4.2のガウス過程回帰の計算を行う際、予測分布の分散共分散行列が計算誤差の影響で対称行列にならずエラーが発生することがあったので、場合によっては対称化が必要。&lt;/li&gt;
&lt;li&gt;図3.16のガウスカーネル&lt;br&gt;
\(
\begin{aligned}
k(x, x^\prime) = \theta_1 \exp \left( - \frac{|x-x^\prime|^2}{\theta_2} \right)
\end{aligned}
\)
のパラメーター推定で、\( (\theta_1, \theta_2, \theta_3)=(1, 0.4, 0.1) \) とすると下のようになり本と違ってしまった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_posterior_1.png&#34; alt=&#34;(1, 0.4, 0.1) の事後分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( (\theta_1, \theta_2, \theta_3)=(1, 0.4, 0.01) \) とすると近い図になる(全く同じには見えない)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_posterior_2.png&#34; alt=&#34;(1, 0.4, 0.01) の事後分布&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尤度の計算が合わなかった。尤度を図示した図3.16で-5未満を切り捨てるとうまくいかなかった。20以下を切り捨てると近い図になった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_logp.png&#34; alt=&#34;尤度(2次元)&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_logp_3d.png&#34; alt=&#34;尤度(3次元)&#34;&gt;&lt;/p&gt;
&lt;p&gt;本文の局所解(ii)に該当する点の尤度は-2.0299となり本文の-1.934とは違ってしまった。&lt;/p&gt;
&lt;p&gt;図3.20のパラメーター推定は正しくできたが、こちらも対数尤度が違ってしまった((a):本文-1.788、実装-1.738, (b):本文-2.174, 実装-2.5029)
詳細は下のレポジトリ、ノートブックを見て下さい。更新は下のMedium用のブランチではなく、masterの方に行う予定です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp/tree/blog-2019-05-19&#34;&gt;https://github.com/matsueushi/gp_and_mlp/tree/blog-2019-05-19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-19/gp.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-19/gp.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「ガウス過程と機械学習」を読み始めた</title>
      <link>https://matsueushi.github.io/posts/gp-nlp-1/</link>
      <pubDate>Fri, 10 May 2019 22:30:45 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-nlp-1/</guid>
      <description>&lt;p&gt;持橋・大羽の「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」を読み始めた。Juliaでコードを書きながら内容を確かめている。&lt;/p&gt;
&lt;p&gt;本を読むまで定義も理解していなかったレベルだったが、無限次元のガウス分布を考えるというモチベーションから「有限次元に制限すれば(通常の)ガウス分布になるもの」としてガウス過程の定義が出てくるのは非常に自然だと思った。&lt;/p&gt;
&lt;p&gt;分散共分散行列の成分を作る時に使われるカーネル \( k(x,x^\prime) \) は \( x \) と \(x^\prime \) の「近さ」を表す関数とでも考えれば良いのだろうか。&lt;/p&gt;
&lt;p&gt;なんでそういうことを考えるのかという気持ちの部分が丁寧に説明されているので意図がわからずに数式の中に闇雲に迷い込むことなく今の所楽しく読み進められている。&lt;/p&gt;
&lt;p&gt;エラッタ:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/errata.html&#34;&gt;http://chasen.org/~daiti-m/gpbook/errata.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://scrapbox.io/GPandML2019/support&#34;&gt;https://scrapbox.io/GPandML2019/support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.3の「ガウス過程とカーネル」のところまで読んだ。&lt;/p&gt;
&lt;p&gt;自分が躓いた点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“3.2.4 ガウス過程からのサンプル”で図3.9のようなサンプルを実装するときは正則化項を入れないと計算がうまくいかないことがある(1.4 リッジ回帰の部分で触れられている)。著者のサンプルコードでは非常に正則化項として1e-6を導入していた。共分散行列の計算の際に対角成分に正規化項を加えればよい。&lt;/li&gt;
&lt;li&gt;“3.3.1 ガウス過程のRBFカーネル”で、線形モデルの基底関数のグリッドを無限に細かくするとRBFカーネルになると書かれている部分は、本文中の基底関数を使うと \( H \rightarrow \infty \) とした時にカーネル関数がRBF関数に収束しない。基底関数に \( 1 / \sqrt{H} \) を掛けたものを考えればOK&lt;/li&gt;
&lt;li&gt;“3.3.2 さまざまなカーネル”で線形カーネルを実装するときに、カーネル関数は &lt;code&gt;dot(x1, x2)&lt;/code&gt; ではなく、必ず1となる入力の最初の次元も考慮して &lt;code&gt;1 + dot(x1, x2)&lt;/code&gt; とする。他のカーネルの場合は &lt;code&gt;x1 — x2&lt;/code&gt; の計算の段階で消えるので考慮する必要はない&lt;/li&gt;
&lt;li&gt;また、Matérnカーネルを定義する際に、Juliaでは第二種のベッセル関数は &lt;code&gt;SpecialFunctions&lt;/code&gt; の &lt;code&gt;besselk&lt;/code&gt; を使えば良い。ベッセル関数は \( x=0 \) で特異性を持つので、カーネル関数 &lt;code&gt;k(x1, x2)&lt;/code&gt; を定義するときは &lt;code&gt;x1 = x2&lt;/code&gt; の時に条件分岐で1を返すようにすればいい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;カーネルとガウシアン過程を定義したjlファイル:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.jl&#34;&gt;https://github.com/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.3章までのノートブック:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;引き続き3.4章の回帰モデルから読む予定。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Distribution.jlで分布をシフト・スケールさせる</title>
      <link>https://matsueushi.github.io/posts/shift-scale-distribution/</link>
      <pubDate>Tue, 30 Apr 2019 21:58:27 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/shift-scale-distribution/</guid>
      <description>&lt;p&gt;公式ドキュメントでは記述が見つけられなかったが、 LocationScale を使えば良いっぽい。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Distributions.jl/src/univariate/continuous/locationscale.jl
&lt;a href=&#34;https://github.com/JuliaStats/Distributions.jl/blob/master/src/univariate/continuous/locationscale.jl&#34;&gt;https://github.com/JuliaStats/Distributions.jl/blob/master/src/univariate/continuous/locationscale.jl&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;例えば、PyMC3の &lt;code&gt;StudentT&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;StudentT(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;x&amp;#39;&lt;/span&gt;, nu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;nu, mu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mu, lam&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;lam)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に対応する分布をDistribution.jlで使いたいとき、Distribution.jlでの &lt;code&gt;TDist&lt;/code&gt; のパラメトライズは &lt;code&gt;nu&lt;/code&gt; だけで &lt;code&gt;mu&lt;/code&gt; や &lt;code&gt;lam&lt;/code&gt; は指定できないが、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;LocationScale(mu, lam, TDist(nu))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすればOK。PyMCの &lt;code&gt;StudentT&lt;/code&gt; に出ている &lt;code&gt;pdf&lt;/code&gt; と同じグラフを書いて確認しよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Printf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# StudentT分布のシフト&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;lam &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(LocationScale(mu[i], lam[i], TDist(nu[i])), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(x, y, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;mu = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%.1f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, lam = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%.1f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;, nu = &lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%.1f&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            mu[i], lam[i], nu[i]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/shift-scale-distribution.png&#34; alt=&#34;シフトした分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;良さそうだ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(7) - The Price Is Right</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-7/</link>
      <pubDate>Wed, 17 Apr 2019 21:44:20 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-7/</guid>
      <description>&lt;p&gt;引き続き「Pythonで体験するベイズ推論」のJulia+Mambaによる実装に挑戦している。わざわざ特別Mediumに書くような題材は無いな、と思っていたのだが、第5章の「例題 : テレビ番組 “The Price Is Right”の最適化」のモデリング( &lt;code&gt;pm.potential&lt;/code&gt; が出てくるところ)でちょっと詰まったので、Mambaでの実装について記しておく。&lt;/p&gt;
&lt;p&gt;問題を単純化すると、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;二つの賞品A, Bの合計価格(これを真の価格と今後呼ぶ)を予想したい&lt;/li&gt;
&lt;li&gt;真の価格は正規分布 \( \text{Normal}(35000, 7500^2) \) に従うと仮定する&lt;/li&gt;
&lt;li&gt;賞品A, Bの価格の事前分布はそれぞれ正規分布 \( \text{Normal}(12000, 3000^2) \) , \( \text{Normal}(3000,500^2) \) に従うと仮定する
このような条件のモデリングである。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;実際にモデリングをやってみて、賞品A, Bの事前分布と、その和をモデリングするところまでは下のようにすればいいので簡単であるのだが、( &lt;code&gt;using&lt;/code&gt; 等は略した)真の価格の分布とサンプリングした賞品A, Bの価格の分布の和を結びつける段階で、はて？？？となった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:data_mu&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;3e3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;12e3&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:data_std&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;5e2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3e3&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:mu_prior&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35e3&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:std_prior&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;75e2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, (data_mu, data_std) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; MvNormal(data_mu, data_std)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    price_estimate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(prize &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; sum(prize)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;モデルを下のようにしてしまうと、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    true_price &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic((mu_prior, std_prior) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal(mu_prior, std_prior)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, (data_mu, data_std) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; MvNormal(data_mu, data_std)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    price_estimate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(prize &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; sum(prize)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;price_estimate&lt;/code&gt; と &lt;code&gt;true_price&lt;/code&gt; が結びつかないのである。&lt;/p&gt;
&lt;p&gt;本文のコードを見てみると、 &lt;code&gt;@pm.potential&lt;/code&gt; というデコレーターが付いた関数が使われている。(PyMC3では &lt;code&gt;pm.Potential&lt;/code&gt; )&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@pm&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;potential
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;def error(true_price&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true_price, price_estimate&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;price_estimate)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;normal_like(true_price, price_estimate, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;3e3&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;**&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;要は毎回真の価格の分布からサンプリングされている観測値 &lt;code&gt;true_price&lt;/code&gt; を \( \text{Normal}( \) &lt;code&gt;price_estimate&lt;/code&gt; \(, 3000^2) \) という分布に当てはめた時の尤度を制約条件として加えるということである。&lt;/p&gt;
&lt;p&gt;参考にした &lt;code&gt;pm.potential&lt;/code&gt; についてのStackExchangeの質問:&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;What is pm.Potential in PyMC3?
&lt;a href=&#34;https://stats.stackexchange.com/questions/251280/what-is-pm-potential-in-pymc3&#34;&gt;https://stats.stackexchange.com/questions/251280/what-is-pm-potential-in-pymc3&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;pm.Potential() much needed explanation for newbie
&lt;a href=&#34;https://discourse.pymc.io/t/pm-potential-much-needed-explanation-for-newbie/2341&#34;&gt;https://discourse.pymc.io/t/pm-potential-much-needed-explanation-for-newbie/2341&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Mambaに &lt;code&gt;pm.potential&lt;/code&gt; に該当する機能が見つからなかったので、ユーザー定義の分布を定義することで制約条件を実装した。&lt;/p&gt;
&lt;p&gt;&lt;code&gt;true_price&lt;/code&gt; に対して計算される尤度が通常の \( \text{Normal}(\mu, \sigma^2) \) に対応する尤度と今回考えたい制約に対応する  \( \text{Normal}( \) &lt;code&gt;price_estimate&lt;/code&gt; \(, 3000^2) \) の尤度の話になるような分布にすれば良いので、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; extensions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;quote&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; Distributions&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; minimum, maximum, logpdf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;TruePriceDist&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ContinuousUnivariateDistribution&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        mu&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sig&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        price_estimate&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    minimum(d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TruePriceDist&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;Inf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    maximum(d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TruePriceDist&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Inf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logpdf(d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;TruePriceDist&lt;/span&gt;, x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       logpdf(Normal(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mu, d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sig), x) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; logpdf(Normal(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;price_estimate, &lt;span style=&#34;color:#ae81ff&#34;&gt;3000&lt;/span&gt;), x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; eval(extensions)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と新しく分布を定義する。こうすると &lt;code&gt;logpdf&lt;/code&gt; が正規化されていないものになる(pdfを積分して1にならない)がMambaで使う分布としては問題は起こらない。&lt;/p&gt;
&lt;p&gt;モデルはこの &lt;code&gt;TruePriceDist&lt;/code&gt; を使って、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    true_price &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (mu_prior, std_prior, price_estimate) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        TruePriceDist(mu_prior, std_prior, price_estimate)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    prize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, (data_mu, data_std) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; MvNormal(data_mu, data_std)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    price_estimate &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(prize &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; sum(prize)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とすれば良い。&lt;/p&gt;
&lt;p&gt;事後分布を確認すると、本と同様の結果がきちんと得られていた。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-7.png&#34; alt=&#34;事後分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;サンプリングの詳細、期待損失の計算や最小化に関しては下のipynb参照。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter5_thepriceisright.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter5_thepriceisright.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(6) -スペースシャトル「チャレンジャー号」の悲劇</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-6/</link>
      <pubDate>Wed, 10 Apr 2019 00:24:53 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-6/</guid>
      <description>&lt;p&gt;最近はGaussianRandomWalkを使った時系列ベイズモデルの推定に挑戦していたが、あまりうまくいかなかったので一旦「Pythonで体験するベイズ推論」に戻ろうと思う。&lt;/p&gt;
&lt;p&gt;今回は「Pythonで体験するベイズ推論」の「2.2.27 例題 カンニングした学生の割合」をJuliaで実装した内容を紹介する。&lt;/p&gt;
&lt;p&gt;まずはライブラリのインポート&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addprocs(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; CSV
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; DataFrames
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; HTTP
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LaTeXStrings
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Mamba
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データの加工はこのような形で行った。&lt;code&gt;DataFrame&lt;/code&gt; で &lt;code&gt;Int64&lt;/code&gt; にパースしたい行にMissing valueやNaNがあるとき、&lt;code&gt;convert&lt;/code&gt;ではエラーになるので、
パースできない場合は &lt;code&gt;missing&lt;/code&gt; になる &lt;code&gt;tryparse&lt;/code&gt; を使って、その後 &lt;code&gt;nothing&lt;/code&gt; になる行を削除して、&lt;code&gt;Union{Nothing, Int64}&lt;/code&gt; から &lt;code&gt;Int64&lt;/code&gt; にもう一度変換している。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; HTTP&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;request(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://git.io/vXknD&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;challengers_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CSV&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#66d9ef&#34;&gt;IOBuffer&lt;/span&gt;(r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;names!(challengers_data, [&lt;span style=&#34;color:#e6db74&#34;&gt;:date&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:temperature&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# incidentのパース&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; tryparse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;, challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# NaNを削除&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;challengers_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; challengers_data[challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;.!=&lt;/span&gt; nothing, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convert&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;, challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;disallowmissing!(challengers_data)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データの図示をする。&lt;code&gt;weighted_color_mean&lt;/code&gt; を使って、マーカーの色を青から赤にグラデーションさせた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;temperature &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:temperature&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;color_weight &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (temperature &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; minimum(temperature)) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; (maximum(temperature) &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; minimum(temperature))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;wcolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; weighted_color_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(color_weight, &lt;span style=&#34;color:#e6db74&#34;&gt;colorant&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;colorant&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter(challengers_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;temperature, challengers_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;incident, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        markercolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; wcolor, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Temprature (F)&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;O-ring failure&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-6_data.png&#34; alt=&#34;Oリングと破損の関係&#34;&gt;&lt;/p&gt;
&lt;p&gt;破損発生の有無を表す確率変数 \( D_i \) は、ベルヌーイ分布とロジスティック関数を用いて&lt;/p&gt;
&lt;p&gt;\(
\begin{aligned}
D_i &amp;amp;\sim \text{Bernoulli}(p(t_i)), \\
p(t) &amp;amp;= \frac{1}{1 +\exp(\beta t + \alpha)},
\end{aligned}
\)&lt;/p&gt;
&lt;p&gt;\( t \) : 温度
とモデリングされる。今回は、あとでサンプルされた &lt;code&gt;p&lt;/code&gt; の値を使ってデータのシミュレーションを行うために、下のように &lt;code&gt;p&lt;/code&gt; に &lt;code&gt;Logical&lt;/code&gt; ノードを割り当てたが、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    observed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        p &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; UnivariateDistribution[Bernoulli(x) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; p],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (alpha, beta, temperature) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; exp(beta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; temperature &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; alpha)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;))),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    beta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;))),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;observedのモデリングだけであればpを経由せずに直接モデリングすることもできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    observed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (alpha, beta, temperature) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            UnivariateDistribution[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Bernoulli(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; exp(beta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; alpha)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; x &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; temperature],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;))),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    beta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;))),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;モデルパラメータ &lt;code&gt;alpha&lt;/code&gt;, &lt;code&gt;beta&lt;/code&gt; の事後分布は次のようになった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:observed&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:temperature&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:temperature&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:observed&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; challengers_data[&lt;span style=&#34;color:#e6db74&#34;&gt;:incident&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:beta&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [AMWG([&lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:beta&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model, scheme)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model, data, inits, &lt;span style=&#34;color:#ae81ff&#34;&gt;200000&lt;/span&gt;, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:beta&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-6_density.png&#34; alt=&#34;Value, Density&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:beta&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], [&lt;span style=&#34;color:#e6db74&#34;&gt;:autocor&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:mean&lt;/span&gt;], legend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-6_mean.png&#34; alt=&#34;Autocorrelation, Mean&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;code&gt;alpha&lt;/code&gt; に対して &lt;code&gt;beta&lt;/code&gt; をプロットすると、次のような原点を通る直線上のグラフになる。\( p(t) = 0.5 \) となるのが \( t = -\alpha / \beta \) となるので、故障するかしないか半々となる温度はシミュレーションで大きく変化しないことがわかる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;alpha_samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sim[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;beta_samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sim[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:beta&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter(alpha_samples, beta_samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, markersize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-6_ab.png&#34; alt=&#34;Relation between alpha and beta&#34;&gt;&lt;/p&gt;
&lt;p&gt;破損確率の事後期待値と、サンプルから選んでプロットする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logistic(x, alpha, beta)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(beta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; alpha))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect((minimum(temperature) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;(maximum(temperature) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logistic(transpose(xs), alpha_samples, beta_samples)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, vec(mean(p_t, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)), linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Average posterior probability&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(xs, p_t[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Realization from posterior&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(xs, p_t[&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Realization from posterior&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter!(challengers_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;temperature, challengers_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;incident, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        markercolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; weighted_color_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(color_weight, &lt;span style=&#34;color:#e6db74&#34;&gt;colorant&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;colorant&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Temprature (F)&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;O-ring failure&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-6_realization.png&#34; alt=&#34;Realization&#34;&gt;&lt;/p&gt;
&lt;p&gt;破損確率の事後期待値と、95%信頼区間をプロットする&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_t_ci &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mapslices(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]), p_t, dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, p_t_ci[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; p_t_ci[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;95% Confidence interval&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(xs, vec(mean(p_t, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)), linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Average posterior probability&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scatter!(challengers_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;temperature, challengers_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;incident, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        markercolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; weighted_color_mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(color_weight, &lt;span style=&#34;color:#e6db74&#34;&gt;colorant&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;blue&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;colorant&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;red&amp;#34;&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Temprature (F)&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;O-ring failure&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-6_ci.png&#34; alt=&#34;Confidence interval&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでRollingWindow</title>
      <link>https://matsueushi.github.io/posts/rollingwindow/</link>
      <pubDate>Sun, 07 Apr 2019 00:29:01 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/rollingwindow/</guid>
      <description>&lt;p&gt;Pandasの &lt;a href=&#34;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rolling.html&#34;&gt;&lt;code&gt;pd.rolling &lt;/code&gt;&lt;/a&gt; のようなことをJuliaで行うためのメモ&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rolling.html&#34;&gt;https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.rolling.html&lt;/a&gt;&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/matsueushi/658921bbeb21c47ebb6ed028041e7e41.js&#34;&gt;&lt;/script&gt;
&lt;p&gt;複雑なことがやりたければこれを使えば良さそうだ。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;JeffreySarnoff/RollingFunctions.jl&lt;br&gt;
&lt;a href=&#34;https://github.com/JeffreySarnoff/RollingFunctions.jl&#34;&gt;https://github.com/JeffreySarnoff/RollingFunctions.jl&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Juliaの2次元のArrayを1次元にする / Juliaの3次元のArrayを2次元にする</title>
      <link>https://matsueushi.github.io/posts/julia-array-dim/</link>
      <pubDate>Fri, 05 Apr 2019 00:20:33 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-array-dim/</guid>
      <description>&lt;p&gt;やり方がよくわからなくなるので自分用メモを兼ねて。JuliaのVersion は1.1.0 (2019–01–21)。&lt;/p&gt;
&lt;h2 id=&#34;2次元&#34;&gt;2次元&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;縦方向に拾っていきたいときは簡単で、 &lt;code&gt;vec&lt;/code&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; vec(x)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;横方向に拾いたい場合は &lt;code&gt;permutedims&lt;/code&gt; を噛ませる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; vec(permutedims(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;code&gt;transpose&lt;/code&gt; と &lt;code&gt;collect&lt;/code&gt; を使う&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; vec(collect(transpose(x)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;だと場合によっては問題があり、 &lt;code&gt;Transpose&lt;/code&gt; は &lt;code&gt;LinearAlgebra&lt;/code&gt; の操作なので、例えば &lt;code&gt;Array{Char, 2}&lt;/code&gt; に対しては定義されていないので実行できない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;  &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; transpose([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt; LinearAlgebra&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Transpose&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{},&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Error showing value of type LinearAlgebra&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Transpose&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Union&lt;/span&gt;{},&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ERROR&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;MethodError&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; no method matching transpose(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;code&gt;permutedims&lt;/code&gt; を使えばこの場合もOK.&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; vec(permutedims([&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;]))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;a&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;b&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;c&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;d&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;hr&gt;
&lt;h2 id=&#34;3次元&#34;&gt;3次元&lt;/h2&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape([(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;横方向(?)に連結する&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; reshape(x, size(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;縦方向(?)に連結する&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; permutedims(reshape(permutedims(x, (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)), size(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;   &lt;span style=&#34;color:#ae81ff&#34;&gt;9&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;11&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;8&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;13&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;15&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;17&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;16&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;19&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;21&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;22&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;24&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;もっと良い方法はないものか……&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mamba.jlでGaussianRandomWalkを作って使う</title>
      <link>https://matsueushi.github.io/posts/mamba-gaussianrandomwalk/</link>
      <pubDate>Wed, 03 Apr 2019 21:52:38 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/mamba-gaussianrandomwalk/</guid>
      <description>&lt;p&gt;PyMC3にはTimeseriesとして &lt;code&gt;GaussianRandomWalk&lt;/code&gt; などの時系列モデルが実装されている。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.pymc.io/api/distributions/timeseries.html#pymc3.distributions.timeseries.GaussianRandomWalk&#34;&gt;https://docs.pymc.io/api/distributions/timeseries.html#pymc3.distributions.timeseries.GaussianRandomWalk&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;だが残念なことに私が使っているMamba.jl(0.12.1)には時系列モデルがない。下のように &lt;code&gt;cumsum&lt;/code&gt; を使ってモデルを作成することは可能ではあるが、面倒だし次元が大きくなってきたりモデルが複雑になってくると遅い。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;local_level_model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (N, T, sigma_I) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; MvNormal(T, sigma_I),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    T &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (T_0, disturbance) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; T_0 &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; vcat([&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;], cumsum(disturbance)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    disturbance &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (N, sigma_T) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; MvNormal(N &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, sigma_T),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sigma_I &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; InverseGamma()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sigma_T &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; InverseGamma()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    T_0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(T_init &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal(T_init, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;だからと言ってそのためにわざわざPython+PyMC3に移るのも癪だし、練習を兼ねてJulia+Mamba用の確率分布を試しに作ってみようと思ったのが今回の内容である。幸いなことに、Mamba.jlには作り方のガイドラインが書いてあるので、&lt;a href=&#34;https://mambajl.readthedocs.io/en/latest/mcmc/distributions.html#user-defined-multivariate-distributions&#34;&gt;多変量分布用のガイドライン&lt;/a&gt;を参考にして作ることができた。&lt;/p&gt;
&lt;p&gt;今回は、&lt;code&gt;GaussianRandomWalk&lt;/code&gt; は、初期値の分布 \( D \) とドリフト \( \mu_i \) , 分散 \( \sigma \) とした時に、&lt;/p&gt;
&lt;p&gt;\(
\begin{aligned}
Y_0 &amp;amp;= D,  \\
Y_{i+1} &amp;amp;= Y_i + \mu_i + \epsilon_i, \\
\epsilon_i &amp;amp;\sim \text{Normal}(0, \sigma)
\end{aligned}
\)&lt;/p&gt;
&lt;p&gt;というモデルに従っているとする。&lt;/p&gt;
&lt;p&gt;Mamba.jlでUser-Definedの多変量分布を使うためには, Distributionの全ての関数を定義する必要はなく、
次元 &lt;code&gt;length&lt;/code&gt;, 分布のサポート &lt;code&gt;insupport&lt;/code&gt;, 確率密度関数の対数 &lt;code&gt;_logpdf&lt;/code&gt; だけ定義すればサンプリングができる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; extensions &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;quote&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; Distributions&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; length, insupport, _logpdf
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;mutable struct&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianRandomWalk&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;ContinuousMultivariateDistribution&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        mu&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        sig&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        init&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ContinuousUnivariateDistribution&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    length(d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianRandomWalk&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; length(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mu) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; insupport(d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianRandomWalk&lt;/span&gt;, x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractVector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        length(d) &lt;span style=&#34;color:#f92672&#34;&gt;==&lt;/span&gt; length(x) &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; all(isfinite&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; _logpdf(d&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;GaussianRandomWalk&lt;/span&gt;, x&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractVector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;}) &lt;span style=&#34;color:#66d9ef&#34;&gt;where&lt;/span&gt; {&lt;span style=&#34;color:#66d9ef&#34;&gt;T&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;}
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        randomwalk_like &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logpdf&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Normal&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;mu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; x[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sig), x[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        logpdf(d&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;init, x[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; sum(randomwalk_like)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;length&lt;/code&gt; を定義するときは、ドリフト項の数が次元より一つ小さくなることに注意。&lt;/p&gt;
&lt;p&gt;\( D \) の確率密度関数を \( f_D \), \( \text{Normal}(\mu, \sigma) \)の確率密度関数を \( f_{\mu, \sigma} \) とすると、
多変量分布 \( (Y_0, …, Y_n) \) の確率密度関数 \( f \) が&lt;/p&gt;
&lt;p&gt;\(
f(x_0, \ldots, x_n) = f_D(x_0)\cdot f_{x_0+\mu_0, \sigma}(x_1)\cdots f_{x_{n-1}+\mu_{n-1}, \sigma}(x_n)
\)&lt;/p&gt;
&lt;p&gt;となるので &lt;code&gt;_logpdf&lt;/code&gt; は上のような定義になっている。(本当はここの理由もちゃんと詰めて書いた方が良い気がする)&lt;/p&gt;
&lt;p&gt; &lt;code&gt;quote&lt;/code&gt; の意味が最初わからなかったが、これで &lt;code&gt;quote&lt;/code&gt; から &lt;code&gt;end&lt;/code&gt; までのコード全体をオブジェクトとして &lt;code&gt;extensions&lt;/code&gt; に代入して、下のように空のモジュールを作成して、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;module&lt;/span&gt; Testing &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;下を実行すると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Core&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eval(Testing, extensions)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;code&gt;Testing&lt;/code&gt; モジュール内で &lt;code&gt;quote&lt;/code&gt; した &lt;code&gt;extension&lt;/code&gt; の内容が読み込まれるということのようだ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.julialang.org/en/v1/manual/metaprogramming/index.html#Metaprogramming-1&#34;&gt;https://docs.julialang.org/en/v1/manual/metaprogramming/index.html#Metaprogramming-1&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;新しく作成した分布を用いてMambaのモデルを作成し、サンプリングをしてみよう。
簡単のためにドリフトは無視して、分散 \( \sqrt{100} \) の正規分布の列からなる100次元の &lt;code&gt;GaussianRandomWalk&lt;/code&gt; のサンプルを作成し、モデルを作成して分散を推定してみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Mamba
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; eval(extensions)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sig &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; GaussianRandomWalk(zeros(&lt;span style=&#34;color:#ae81ff&#34;&gt;99&lt;/span&gt;), sqrt(sig), Normal(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, sqrt(sig))),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    sig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        () &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; InverseGamma(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.001&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.001&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [AMWG(&lt;span style=&#34;color:#e6db74&#34;&gt;:sig&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model, scheme)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:y&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; cumsum(rand(MvNormal(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:y&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; data[&lt;span style=&#34;color:#e6db74&#34;&gt;:y&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:sig&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model, data, inits, &lt;span style=&#34;color:#ae81ff&#34;&gt;21000&lt;/span&gt;, burnin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, thin&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, chains&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;describe(sim)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Actual variance: &amp;#34;&lt;/span&gt;, var(diff(data[&lt;span style=&#34;color:#e6db74&#34;&gt;:y&lt;/span&gt;])))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim, legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;結果-&amp;gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MCMC Simulation of &lt;span style=&#34;color:#ae81ff&#34;&gt;21000&lt;/span&gt; Iterations x &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; Chains...
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:   0% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1:17:22 of 1:17:24 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  10% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:24 of 0:00:27 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  20% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:11 of 0:00:14 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  30% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:07 of 0:00:09 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  40% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:04 of 0:00:07 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  50% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:03 of 0:00:06 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  60% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:02 of 0:00:05 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  70% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:05 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  80% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:04 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1:  90% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:04 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 1: 100% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:04 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:   0% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  10% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  20% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  30% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  40% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  50% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  60% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  70% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  80% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2:  90% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 2: 100% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:   0% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  10% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  20% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  30% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  40% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  50% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:01 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  60% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  70% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  80% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3:  90% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chain 3: 100% &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0:00:00 of 0:00:01 remaining&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Iterations &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1004:21000
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Thinning interval &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 1,2,3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Samples per chain &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Empirical Posterior Estimates:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;      Mean       SD      Naive SE     MCSE       ESS  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sig 91.87928 13.629016 0.111280453 0.21081987 4179.323
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Quantiles:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;       2.5%     25.0%     50.0%    75.0%     97.5%  
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sig 69.039156 82.188388 90.31312 100.2171 122.073783
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Actual variance: 92.0192593899444
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/mamba-gaussianrandomwalk.png&#34; alt=&#34;事後分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;標本分散が92だから正しく推定できているのではないだろうか。&lt;/p&gt;
&lt;p&gt;次は、確認を兼ねて、作った &lt;code&gt;GaussianRandomWalk&lt;/code&gt; を使って時系列モデルの構築に挑戦したい。&lt;/p&gt;
&lt;p&gt;全部のコード:&lt;/p&gt;
&lt;script src=&#34;https://gist.github.com/matsueushi/58d78e222db8189594825aa294e390f5.js&#34;&gt;&lt;/script&gt;</description>
    </item>
    
    <item>
      <title>Mamba.jl v0.12.0のStackOverflowError:</title>
      <link>https://matsueushi.github.io/posts/mamba-v-0-12-0/</link>
      <pubDate>Sun, 31 Mar 2019 21:47:30 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/mamba-v-0-12-0/</guid>
      <description>&lt;p&gt;GCPに環境を作っていて気づいたのだが、Distibution.jlのv0.17.0と関数が干渉していて &lt;code&gt;using Mamba&lt;/code&gt; すると下のようなワーニングが出て、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARNING: Method definition &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;::Type&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Distributions.DiscreteNonParametric&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Int64, P, Base.OneTo&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Int64&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;, Ps&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where Ps where P&lt;span style=&#34;color:#f92672&#34;&gt;})(&lt;/span&gt;AbstractArray&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&amp;lt;:Real, 1&lt;span style=&#34;color:#f92672&#34;&gt;})&lt;/span&gt; where &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; in module Distributions at /Users/apple/.julia/packages/Distributions/fMt8c/src/univariate/discrete/categorical.jl:40 overwritten in module Mamba at /Users/apple/.julia/packages/Mamba/qNBKz/src/distributions/constructors.jl:7.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARNING: Method definition &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;::Type&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Distributions.MvNormal&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T, Cov, Mean&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where Mean&amp;lt;:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AbstractArray&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T, 1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where T&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; where Cov&amp;lt;:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PDMats.AbstractPDMat&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where T&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; where T&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;})(&lt;/span&gt;AbstractArray&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&amp;lt;:Real, 1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;, Real&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; where &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; in module Distributions at /Users/apple/.julia/packages/Distributions/fMt8c/src/multivariate/mvnormal.jl:200 overwritten in module Mamba at /Users/apple/.julia/packages/Mamba/qNBKz/src/distributions/constructors.jl:35.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;WARNING: Method definition &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;::Type&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Distributions.MvNormalCanon&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T, P, V&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where V&amp;lt;:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;AbstractArray&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T, 1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where T&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; where P&amp;lt;:&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;PDMats.AbstractPDMat&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; where T&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; where T&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;})(&lt;/span&gt;AbstractArray&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&amp;lt;:Real, 1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;, U&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; where &lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;T&amp;lt;:Real, U&amp;lt;:Real&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; in module Distributions at /Users/apple/.julia/packages/Distributions/fMt8c/src/multivariate/mvnormalcanon.jl:116 overwritten in module Mamba at /Users/apple/.julia/packages/Mamba/qNBKz/src/distributions/constructors.jl:53.
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以前動いていた次のようなコードが動かない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MvNormal(zeros(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;StackOverflowError&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Stacktrace&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] MvNormal(&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}, &lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;) at &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Users&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;apple&lt;span style=&#34;color:#f92672&#34;&gt;/.&lt;/span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;packages&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;qNBKz&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;src&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;distributions&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;constructors&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;jl&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt; (repeats &lt;span style=&#34;color:#ae81ff&#34;&gt;80000&lt;/span&gt; times)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;masterブランチでは修正されているみたいなので、次のリリースでは治るはず&amp;hellip;。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Remove unneeded MvNormal constructor · brian-j-smith/Mamba.jl@dcaf1cc&lt;br&gt;
&lt;a href=&#34;https://github.com/brian-j-smith/Mamba.jl/commit/dcaf1ccac1c468d20d49a21acbaeb0cb6adcb4cf&#34;&gt;https://github.com/brian-j-smith/Mamba.jl/commit/dcaf1ccac1c468d20d49a21acbaeb0cb6adcb4cf&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;応急処置として代わりに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MvNormal(zeros(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;にしておけば動くのでこっちを使っておくか。&lt;/p&gt;
&lt;p&gt;追記:&lt;/p&gt;
&lt;p&gt;平均が0だったら&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;MvNormal(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4.0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これで良さそう。&lt;/p&gt;
&lt;p&gt;追記:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brian-j-smith/Mamba.jl/releases/tag/v0.12.1&#34;&gt;Mamba 0.12.1&lt;/a&gt;で直っていた！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GCPでJuliaのノートブックを実行</title>
      <link>https://matsueushi.github.io/posts/gcp-julia/</link>
      <pubDate>Sat, 30 Mar 2019 21:37:57 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gcp-julia/</guid>
      <description>&lt;p&gt;自分用メモ&lt;/p&gt;
&lt;p&gt;ローカルの公開鍵をGCPのインスタンスに登録&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;[秘密鍵/公開鍵]GCPにSSHで接続する方法&lt;br&gt;
&lt;a href=&#34;https://sleepless-se.net/2018/09/15/gcp-ssh/&#34;&gt;https://sleepless-se.net/2018/09/15/gcp-ssh/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Juliaのバイナリをダウンロード&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;curl -OL https://julialang-s3.julialang.org/bin/linux/x64/1.1/julia-1.1.0-linux-x86_64.tar.gz
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;解凍&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo mkdir /bin/julia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo tar xvzf julia-1.1.0-linux-x86_64.tar.gz -C /bin/julia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ /bin/julia/julia-1.1.0/bin/julia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _       _ _&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;_     |  Documentation: https://docs.julialang.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _ _   _| |_  __ _   |  Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Pkg help.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | | | | | |/ _&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; |  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | |_| | | | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_| |  |  Version 1.1.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2019-01-21&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; _/ |&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_|_|_|\__&amp;#39;&lt;/span&gt;_|  |  Official https://julialang.org/ release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|__/                   |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;シンボリックリンクを作成&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo ln -s /bin/julia/julia-1.1.0/bin/julia /usr/local/bin/julia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ julia
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;               _
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _       _ _&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;_     |  Documentation: https://docs.julialang.org
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;     | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;    |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   _ _   _| |_  __ _   |  Type &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; help, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;]?&amp;#34;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Pkg help.
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | | | | | |/ _&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt; |  |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  | | |_| | | | &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;_| |  |  Version 1.1.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;2019-01-21&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; _/ |&lt;span style=&#34;color:#ae81ff&#34;&gt;\_&lt;/span&gt;_&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;_|_|_|\__&amp;#39;&lt;/span&gt;_|  |  Official https://julialang.org/ release
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;|__/                   |
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;IJuliaのインストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(“IJulia”)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Anacondaもインストールしておく。bzip2が入っていなかったのでインストールして、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ sudo apt-get install bzip2
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Anacondaをインストール&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ curl -OL https://repo.anaconda.com/archive/Anaconda3-2018.12-Linux-x86_64.sh
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ bash Anaconda3-2018.12-Linux-x86_64.sh
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを参考にしてJupyter Notebookの設定に入る&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Running Jupyter Notebook on Google Cloud Platform in 15 min&lt;br&gt;
&lt;a href=&#34;https://towardsdatascience.com/running-jupyter-notebook-in-google-cloud-platform-in-15-min-61e16da34d52&#34;&gt;https://towardsdatascience.com/running-jupyter-notebook-in-google-cloud-platform-in-15-min-61e16da34d52&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jupyter notebook --generate-config
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;vim /home/matsueushi/.jupyter/jupyter_notebook_config.py
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を開いて&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; get_config()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NotebookApp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ip &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;0.0.0.0&amp;#39;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NotebookApp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;open_browser &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;False&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NotebookApp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Port Number&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を追加する&lt;/p&gt;
&lt;p&gt;GCPのVMインスタンス設定画面でFirewallsの「Allow HTTPS traffic」をチェック&lt;/p&gt;
&lt;p&gt;「NETWORKING -&amp;gt; VPC Network -&amp;gt; Firewall rules -&amp;gt; Create a firewall」で&lt;/p&gt;
&lt;p&gt;「Target tags」を「https-server」、&lt;/p&gt;
&lt;p&gt;「Source IP range」を「0.0.0.0/0」、&lt;/p&gt;
&lt;p&gt;「Protocols and ports」の「Specified protocols and ports-&amp;gt;tcp」をチェックしてポート番号に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;NotebookApp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;port &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;&lt;/span&gt;Port Number&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のポート番号を追加。&lt;/p&gt;
&lt;p&gt;http://&lt;External IP&gt;:8888/&lt;/p&gt;
&lt;p&gt;にアクセスして、&lt;/p&gt;
&lt;p&gt;http://(julia or 127.0.0.1):8888/?token= のあとのtokenを入れる&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Plots.jlでx軸、y軸のスケールを揃える</title>
      <link>https://matsueushi.github.io/posts/plotly-scale/</link>
      <pubDate>Sun, 24 Mar 2019 21:43:34 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/plotly-scale/</guid>
      <description>&lt;p&gt; &lt;code&gt;aspece_ratio=1&lt;/code&gt; とすれば良いだけだった。簡単だった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exp_x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Exponential(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;exp_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Exponential(&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;z &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Surface((s, t) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; pdf(exp_x, s) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; pdf(exp_y, t), x, y)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap(x, y, z)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/plotly-scale_default.png&#34; alt=&#34;デフォルト&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;heatmap(x, y, z, aspect_ratio &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/plotly-scale_aspect.png&#34; alt=&#34;変更後&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Arrayを横に並べてMatrixにする</title>
      <link>https://matsueushi.github.io/posts/julia-array-matrix/</link>
      <pubDate>Sat, 23 Mar 2019 21:36:07 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-array-matrix/</guid>
      <description>&lt;p&gt;自分用メモ。Juliaで &lt;code&gt;Array&lt;/code&gt; を横に並べて &lt;code&gt;Matrix&lt;/code&gt; にする方法は、&lt;code&gt;repeat&lt;/code&gt; で第1引数を1にして、第2引数を並べたい個数にすればいい。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; repeat([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;×&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;  &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(5) -嘘に対抗するアルゴリズム</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-5/</link>
      <pubDate>Fri, 22 Mar 2019 21:22:17 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-5/</guid>
      <description>&lt;p&gt;「Pythonで体験するベイズ推論」の「2.2.7 例題 カンニングした学生の割合」をやってみよう。&lt;/p&gt;
&lt;p&gt;学生が試験中にカンニングする頻度を求めたい。観測データは個人がカンニングしたかどうかは特定できない、以下のアルゴリズムを用いる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;コイントスを(こっそり)行い、表が出たら正直に答える&lt;/li&gt;
&lt;li&gt;裏が出た場合、もう一枚コインを(こっそり)投げ、表が出たら「カンニングした」と答え、裏が出たら「カンニングしなかった」と答える。&lt;/li&gt;
&lt;li&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まずはライブラリをインポート。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addprocs(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Mamba
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;学生の数が100人、「カンニングした」という回答が35人とする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;X &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;35&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mambaのモデルは次のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (proportion, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Binomial(N, proportion),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    proportion &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (true_answers, first_coin_flips, second_coin_flips) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (observed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt;(first_coin_flips &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; true_answers &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; first_coin_flips) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; second_coin_flips);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            mean(observed)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    true_answers &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, p &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Bernoulli(p), false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    first_coin_flips &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, () &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Bernoulli(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;), false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    second_coin_flips &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, () &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Bernoulli(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;), false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt; &lt;code&gt;proportion&lt;/code&gt;を計算するときの&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;observed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt;(first_coin_flips &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; true_answers &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; first_coin_flips) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; second_coin_flips)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は@マクロを使った書き方で、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;observed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; first_coin_flips &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; true_answers &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; first_coin_flips) &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; second_coin_flips)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と同じである。 &lt;code&gt;true_answers&lt;/code&gt; , &lt;code&gt;first_coin_flips&lt;/code&gt; , &lt;code&gt;second_coin_flips&lt;/code&gt; は長さNの &lt;code&gt;Stochastic&lt;/code&gt; ベクターだが、Nをモデルに与えなくても、&lt;code&gt;Stochastic&lt;/code&gt; コンストラクタの第1引数を1(1次元)にして、初期値に長さNのベクターを与えれば大丈夫。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; X,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:N&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; N,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; X,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:proportion&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:true_answers&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; rand(Bernoulli(), N),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:first_coin_flips&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; rand(Bernoulli(), N),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:second_coin_flips&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; rand(Bernoulli(), N),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; rand(Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;code&gt;true_answers&lt;/code&gt; , &lt;code&gt;first_coin_flips&lt;/code&gt; , &lt;code&gt;second_coin_flips&lt;/code&gt; は \( \{0, 1\} \) からのサンプリングなので、Sampling Functionsを見ると &lt;code&gt;BHMC&lt;/code&gt;, &lt;code&gt;BIA&lt;/code&gt;, &lt;code&gt;BMC3&lt;/code&gt;, &lt;code&gt;BMG&lt;/code&gt;のどれかを使えば良いようである。&lt;code&gt;BIA&lt;/code&gt;, &lt;code&gt;BMC3&lt;/code&gt;, &lt;code&gt;BMG&lt;/code&gt;を使って比較してみた。&lt;/p&gt;
&lt;p&gt; &lt;code&gt;BIA&lt;/code&gt;のサンプリング設定は下の通り。&lt;code&gt;BMC3&lt;/code&gt;, &lt;code&gt;BMG&lt;/code&gt; も &lt;code&gt;scheme&lt;/code&gt; だけ変えればよく同様である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;samplings &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;burning &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme_bia &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NUTS(&lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt;), BIA([&lt;span style=&#34;color:#e6db74&#34;&gt;:true_answers&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:first_coin_flips&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:second_coin_flips&lt;/span&gt;])]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model, scheme_bia)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim_bia &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model, data, inits, samplings, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; burning, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_bia &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape(Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim_bia, [&lt;span style=&#34;color:#e6db74&#34;&gt;:trace&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:density&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:autocor&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:mean&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true), (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p_bia, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;bia&#34;&gt;BIA&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-5_bia.png&#34; alt=&#34;BIA&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;bmc3&#34;&gt;BMC3&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-5_bmc3.png&#34; alt=&#34;BMC3&#34;&gt;&lt;/p&gt;
&lt;h3 id=&#34;bmg&#34;&gt;BMG&lt;/h3&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-5_bmg.png&#34; alt=&#34;BMG&#34;&gt;&lt;/p&gt;
&lt;p&gt;自己相関や確率密度を見ると &lt;code&gt;BIA&lt;/code&gt;, &lt;code&gt;BMC3&lt;/code&gt; が良さそう。&lt;/p&gt;
&lt;h3 id=&#34;もう一つのモデル&#34;&gt;もう一つのモデル&lt;/h3&gt;
&lt;p&gt;「カンニングしました」と答える確率は p/2 + 1/4 なので、&lt;code&gt;proportion&lt;/code&gt; を計算する代わりにこれを直接使ってモデリングすることもできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;another_model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (p, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (p_skewed &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; p &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            Binomial(N, p_skewed)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;another_scheme &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NUTS(&lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(another_model, another_scheme)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;another_sim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(another_model, data, inits, samplings, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; burning, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;another_p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape(Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(another_sim, [&lt;span style=&#34;color:#e6db74&#34;&gt;:trace&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:density&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:autocor&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:mean&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true), (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(another_p, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-5_another.png&#34; alt=&#34;もう一つのモデル&#34;&gt;&lt;/p&gt;
&lt;p&gt; &lt;code&gt;true_answers&lt;/code&gt;, &lt;code&gt;first_coin_flips&lt;/code&gt;, &lt;code&gt;second_coin_flips&lt;/code&gt; をモデリングした場合に比べて、収束が大きく向上している。&lt;/p&gt;
&lt;p&gt;コード -&amp;gt;
&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter2_cheat.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter2_cheat.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(4) -ベイズ的 A/B</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-4/</link>
      <pubDate>Thu, 21 Mar 2019 21:05:35 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-4/</guid>
      <description>&lt;p&gt;今回はMambaを使って、「Pythonで体験するベイズ推論」の「例題 : ベイズ的 A/B」 をモデリングする。&lt;/p&gt;
&lt;h2 id=&#34;例題--ベイズ的-ab-テスト&#34;&gt;例題 : ベイズ的 A/B テスト&lt;/h2&gt;
&lt;p&gt;A/Bテストの例題を解いてみよう。&lt;/p&gt;
&lt;p&gt;サイトAを見せられたユーザーが最終的にコンバージョンにつながる確率を \( p_A \)と仮定し、\( N \) 人がサイトAを見せられて、そのうち \( n \) 人がコンバージョンにつながったとする。&lt;/p&gt;
&lt;p&gt;まずはベルヌーイ分布を使って、\( N \) 回の試行をシミュレートする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# 定数をセット&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p_true &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;occurrences &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Bernoulli(p_true), N)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mamba.jlで推論アルゴリズムを作成すると、次のようになる。\( p \) の事前分布は \( [0, 1] \) の一様分布に従うとしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (p, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;         UnivariateDistribution[Bernoulli(p) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N], false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;モデルは、等価な次の形で書いた方が単純になってわかりやすいかもしれない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, p &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Bernoulli(p), false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;観測データと初期値を作ってサンプリングし、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; occurrences,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:N&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; N,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; occurrences,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; rand(Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NUTS(&lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model0, scheme0)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model0, data0, inits0, &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;事後分布のヒストグラムをプロットすると次のようになった。\( N \) の数が小さいのか、真の値と分布のピークは多少ずれている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;histogram(vec(sim0[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value), bins &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, normalize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:pdf&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;L&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\mbox{Value of }p_A&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Density&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot!([p_true], seriestype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:vline&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;L&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\mbox{true }p_A&amp;#34;&lt;/span&gt;, legendfontsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-4_hist_1.png&#34; alt=&#34;ヒストグラム1&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;-n--の数を増やしてみる&#34;&gt;\( N \) の数を増やしてみる&lt;/h2&gt;
&lt;p&gt;観測データ数を増やして変化を確認してみよう。\( N=1500, 5000, 15000 \) の3種類を試す。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ab_sim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Ns &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1500&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;15000&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; n &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; Ns
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ab_occur &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Bernoulli(p_true), n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ab_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; ab_occur,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:N&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; n,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ab_inits &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; ab_occur,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; rand(Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(ab_sim, mcmc(model0, ab_data, ab_inits, &lt;span style=&#34;color:#ae81ff&#34;&gt;20000&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                        burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; (i, sim) &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; enumerate(ab_sim)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    histogram!(vec(sim[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:p&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value), normalize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:pdf&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@sprintf&lt;/span&gt;(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;N=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;%d&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;, Ns[i]), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;L&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\mbox{Value of }p_A&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Density&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!([p_true], seriestype &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:vline&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:dash&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:red&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;L&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;\mbox{true }p_A&amp;#34;&lt;/span&gt;, legendfontsize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;12&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-4_hist_2.png&#34; alt=&#34;ヒストグラム2&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( N \) を大きくすると分布の裾野が狭くなり、分布の中心が真の値 \( p_A \) に近づいている。&lt;/p&gt;
&lt;h2 id=&#34;aとbを一緒に&#34;&gt;AとBを一緒に&lt;/h2&gt;
&lt;p&gt;サイトA, Bに対し、未知数である真のコンバージョン率 &lt;code&gt;true_p_A&lt;/code&gt;, &lt;code&gt;true_p_B&lt;/code&gt; はそれぞれ0.05と0.04とし、観測データ数 &lt;code&gt;N_A&lt;/code&gt;, &lt;code&gt;N_B&lt;/code&gt; は1500, 500として観測データを作成する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true_p_A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.05&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;true_p_B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.04&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N_A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1500&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N_B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;750&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;observation_A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Bernoulli(true_p_A), N_A)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;observation_B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Bernoulli(true_p_B), N_B)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;同時に推論するモデルは以下のようになる。新しく \( p_A \) と \( p_B \) の差を表す &lt;code&gt;Logical&lt;/code&gt; ノード &lt;code&gt;delta&lt;/code&gt; が増えた以外は一つだけ推論する場合をコピーペーストして二つにしただけ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs_A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, p_A &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Bernoulli(p_A), false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs_B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, p_B &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Bernoulli(p_B), false),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    delta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical((p_A, p_B) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; p_A &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; p_B),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p_A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    p_B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;与える観測データと初期値は下のようにした。\( p_A \) と \( p_B \) の初期値は \( [0,1] \) からランダムで取った。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:obs_A&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; observation_A,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:obs_B&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; observation_B,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;begin&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        p_A &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Uniform())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        p_B &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Uniform())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:obs_A&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; observation_A,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:obs_B&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; observation_B,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:p_A&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; p_A,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:p_B&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; p_B,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#e6db74&#34;&gt;:delta&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; p_A &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; p_B,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [NUTS([&lt;span style=&#34;color:#e6db74&#34;&gt;:p_A&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:p_B&lt;/span&gt;])]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model1, scheme1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model1, data1, inits1, &lt;span style=&#34;color:#ae81ff&#34;&gt;25000&lt;/span&gt;, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim1[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:p_A&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:p_B&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:delta&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p1, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-4_posterior.png&#34; alt=&#34;事後分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( p_A \) と \( p_B \) の事後分布と一つの図にプロットして分布の裾の広さを比較する。Bの方がサンプル数が少ないので裾が広い。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;histogram(vec(sim1[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:p_A&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value), normalize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:pdf&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p_A&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;histogram!(vec(sim1[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:p_B&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value), normalize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:pdf&lt;/span&gt;, bins&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30&lt;/span&gt;, fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt;, linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;p_B&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-4_hist_3.png&#34; alt=&#34;p_Aとp_Bのヒストグラム&#34;&gt;&lt;/p&gt;
&lt;p&gt;サイトA, サイトBのデータを2倍にした時の &lt;code&gt;delta&lt;/code&gt; の分布の変化を見ると、このようになった。もともとの &lt;code&gt;delta&lt;/code&gt; の分布が真のデルタの値から近い値を中心に当たっていたため改善されている感じがわかりづらいが、データを2倍にすると裾が狭くなっている。&lt;/p&gt;
&lt;p&gt;同様の改善効果があるのなら、&lt;code&gt;N_B&lt;/code&gt; を増やす方が良い(&lt;code&gt;N_B&lt;/code&gt; を2倍にするとデータサイズが750増加するが、&lt;code&gt;N_A&lt;/code&gt; を2倍にするとデータサイズが1500増加するため)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-4_hist_4.png&#34; alt=&#34;データを増やした場合のヒストグラム&#34;&gt;&lt;/p&gt;
&lt;p&gt;真の \(p_A, p_B \) を動かして &lt;code&gt;delta&lt;/code&gt; の分布を見ると次のようになる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-4_hist_5.png&#34; alt=&#34;p_A, p_Bを動かした場合のヒストグラム&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(3) -新しいデータセットの生成</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-3/</link>
      <pubDate>Wed, 20 Mar 2019 20:58:08 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-3/</guid>
      <description>&lt;p&gt;引き続き「Pythonで体験するベイズ推論」の第2章の新しいデータセットの作成をJuliaでやってみる。&lt;/p&gt;
&lt;h2 id=&#34;新しいデータセットの生成&#34;&gt;新しいデータセットの生成&lt;/h2&gt;
&lt;p&gt;PyMCについての説明はスキップして、シミュレーションによるメッセージ数のデータ生成から行う。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/brian-j-smith/Mamba.jl&#34;&gt;Mamba.jl&lt;/a&gt;は分布の作成に&lt;a href=&#34;https://github.com/JuliaStats/Distributions.jl&#34;&gt;Distributions.jl&lt;/a&gt;を使っているので、シミュレーションだけ行いたかったらDistributionsを &lt;code&gt;using&lt;/code&gt; すれば十分。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データセットの作成とプロットは下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plot_artificial_sms_dataset()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tau &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(DiscreteUniform(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    theta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda_1, lambda_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(Exponential(theta), &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda_ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cat(fill(lambda_1, tau), fill(lambda_2, &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; tau), dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#a6e22e&#34;&gt;@.&lt;/span&gt;rand(Poisson(lambda_))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    barc &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    barc[tau] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    bar(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, data, linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;, fillcolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; barc,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Time (days)&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count of messages&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; []
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    push!(plts, plot_artificial_sms_dataset())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(plts&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-3_messages.png&#34; alt=&#34;メッセージ数&#34;&gt;&lt;/p&gt;
&lt;p&gt;Plots.jlでPythonのMatplotlibと同様に複数のSubplotsを表示するには、一旦list (e.g. &lt;code&gt;plt&lt;/code&gt; )にプロット結果を受けておいて、最後に一気に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(plts…, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;として表示すればできる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot(plts, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;だと &lt;code&gt;MethodError: no method matching MethodError(::String)&lt;/code&gt; が出てダメだった。&lt;/p&gt;
&lt;p&gt;モデルシミュレーションのコード -&amp;gt;
&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter2_simulate_model.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter2_simulate_model.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(2) -メッセージ数に変化はあるか？</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-2/</link>
      <pubDate>Wed, 20 Mar 2019 20:45:02 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;bayesian-method-julia-2.md&#34;&gt;前回&lt;/a&gt;に引き続き、「Pythonで体験するベイズ推論」をJuliaでやってみる。本に従い、前回作成した「メッセージ数に変化はあるか？」を二つの変化点の場合に拡張する。&lt;/p&gt;
&lt;p&gt;変化点が二つの場合を考えてみる。モデルは変化点が一つの場合とほぼ同じで、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (lambda, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            UnivariateDistribution[Poisson(lambda[i]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (lambda1, lambda2, lambda3, tau1, tau2, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(lambda1, N);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;(tau1&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# Juliaは1-indexingのため&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;(tau2&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            out[i1&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end] &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; lambda2;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            out[i2&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end] &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; lambda3;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            out),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            false,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(theta &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Exponential(theta)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(theta &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Exponential(theta)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(theta &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Exponential(theta)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tau1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(N &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; DiscreteUniform(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, N&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tau2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic((tau1, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; DiscreteUniform(tau1, N)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;初期値とサンプリングスキームを同様に与えてサンプリングすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; theta,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; theta,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; theta,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:tau1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:tau2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; N,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [AMWG([&lt;span style=&#34;color:#e6db74&#34;&gt;:lambda1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda3&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), DGS([&lt;span style=&#34;color:#e6db74&#34;&gt;:tau1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:tau2&lt;/span&gt;])]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model2, scheme2) sim2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model2, data0, inits2, &lt;span style=&#34;color:#ae81ff&#34;&gt;40000&lt;/span&gt;, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;事後分布は以下のようになる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim2[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:tau1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:tau2&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p2, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-2_posterior_1.png&#34; alt=&#34;事後分布1&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim2[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:lambda1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda2&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda3&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p2, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-2_posterior_2.png&#34; alt=&#34;事後分布2&#34;&gt;&lt;/p&gt;
&lt;p&gt;本で言及されていた、変化点の個数についても事前分布を作ってモデリングしてみたがうまくいかなかった。&lt;/p&gt;
&lt;p&gt;コード -&amp;gt;
&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter1_message.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter1_message.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでArray of Arrayを1次元Vectorにする方法</title>
      <link>https://matsueushi.github.io/posts/julia-array-of-array/</link>
      <pubDate>Wed, 20 Mar 2019 00:33:19 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-array-of-array/</guid>
      <description>&lt;p&gt;よく忘れるのでメモ。&lt;/p&gt;
&lt;p&gt;結論から言うと &lt;code&gt;Base.Iterators.flatten&lt;/code&gt; を適用して &lt;code&gt;collect&lt;/code&gt; すれば良い。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Iterators&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; flatten
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;], [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;},&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; collect(flatten(xs))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;追記(2019/4/7):&lt;/p&gt;
&lt;p&gt; &lt;code&gt;vcat&lt;/code&gt; を使った方が簡潔だった。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; vcat(xs&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;element &lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;,&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;}&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;6&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Juliaで体験するベイズ推論(1) -メッセージ数に変化はあるか？</title>
      <link>https://matsueushi.github.io/posts/bayesian-methods-julia-1/</link>
      <pubDate>Tue, 19 Mar 2019 23:30:41 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bayesian-methods-julia-1/</guid>
      <description>&lt;p&gt;久保拓弥「データ解析のための統計モデリング入門」を読み終えたので、次はCameron Davidson-Pilon著、玉木徹訳の「Pythonで体験するベイズ推論」(&lt;a href=&#34;https://github.com/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers&#34;&gt;GitHubリポジトリ&lt;/a&gt;) をJuliaとMamba.jlでモデリングしていきたいと思う。&lt;/p&gt;
&lt;p&gt;まず例題1.4.1の「メッセージ数に変化はあるか？」をやってみる。&lt;/p&gt;
&lt;p&gt;元のノートブックは&lt;a href=&#34;https://nbviewer.jupyter.org/github/CamDavidsonPilon/Probabilistic-Programming-and-Bayesian-Methods-for-Hackers/blob/master/Chapter1_Introduction/Ch1_Introduction_PyMC2.ipynb&#34;&gt;これ&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;JuliaでCSVファイルをhttps上から取るには、パッケージ &lt;code&gt;HTTP&lt;/code&gt; , &lt;code&gt;CSV&lt;/code&gt; をインポートして&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;r &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; HTTP&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;request(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GET&amp;#34;&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://git.io/vXTVC&amp;#34;&lt;/span&gt;);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;count_data &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CSV&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#66d9ef&#34;&gt;IOBuffer&lt;/span&gt;(r&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;body), header&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;messages&amp;#34;&lt;/span&gt;])
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;とすれば良い。
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Plotsでプロットすると下のような感じ。Juliaはインデックスが1から始まるので、x軸を &lt;code&gt;0:N-1&lt;/code&gt; にしておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; length(count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bar(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Time (days)&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count of messages&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-1_1.png&#34; alt=&#34;Count of messages&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( i \) 日目のメッセージ数 \( C_i \) がポアソン分布 \( \text{Poisson}(\lambda) \) に従い、\( \lambda \) の値が突然ある日 \( \lambda \) で変わる日があるとする。\( \tau &amp;lt; \lambda \) のとき \( \lambda = \lambda_1, \tau \ge \lambda \) の時 \( \lambda=\lambda_2 \)とする。&lt;/p&gt;
&lt;p&gt;この \( \tau, \lambda_1, \lambda_2 \) 推定する。\( \lambda_1, \lambda_2 \) の事前分布は指数分布 \( \text{Exp}(\alpha) \) とする。ここでαは計数データの平均の逆数である。\( \tau \) の事前分布は一様分布とする。&lt;/p&gt;
&lt;p&gt;Mambaでモデリングするときに注意しないといけないのは、PyMCと分布のパラメトライズが一部異なるところである。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;class pymc3.distributions.continuous.Exponential(lam, *args, **kwargs)&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.pymc.io/api/distributions/continuous.html#pymc3.distributions.continuous.Exponential&#34;&gt;https://docs.pymc.io/api/distributions/continuous.html#pymc3.distributions.continuous.Exponential&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Distributions.Exponential — Type.&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://juliastats.github.io/Distributions.jl/stable/univariate/#Distributions.Exponential&#34;&gt;https://juliastats.github.io/Distributions.jl/stable/univariate/#Distributions.Exponential&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Exponentialのパラメトライズが違うことに気づかずにモデリングを行っていたのだが、Mambaで使っているDistiribution.jlの &lt;code&gt;Exponential(θ)&lt;/code&gt; をPyMCの &lt;code&gt;pm.Exponential(lam)&lt;/code&gt; と 同じ分布となるためには &lt;code&gt;θ=1/lam&lt;/code&gt; とする必要がある。これを間違えていたため下のように事前分布が全く異なってしまい収束しなくなってしまっていた。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-1_exponential.png&#34; alt=&#34;Exponential&#34;&gt;&lt;/p&gt;
&lt;p&gt;Mambaでモデルを作成すると次のようになる。パラメトライズの方法が違うので、変数は &lt;code&gt;α&lt;/code&gt; の代わりに &lt;code&gt;θ&lt;/code&gt; を使った。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;model1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    obs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (lambda, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            UnivariateDistribution[
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                Poisson(lambda[i]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (lambda1, lambda2, tau, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            (out &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(lambda1, N);
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            i &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Int64&lt;/span&gt;(tau&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; &lt;span style=&#34;color:#75715e&#34;&gt;# Juliaは1-indexingのため&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            out[i&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;end, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; lambda2;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            out),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(theta &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Exponential(theta)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    lambda2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(theta &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Exponential(theta)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tau &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(N &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; DiscreteUniform(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, N)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;観察されるデータと &lt;code&gt;θ &lt;/code&gt;を準備する。&lt;code&gt;θ&lt;/code&gt; はメッセージ数の平均の逆数 &lt;code&gt;α&lt;/code&gt; の逆数なので、メッセージ数の平均。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;theta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;data0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:theta&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; theta,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#e6db74&#34;&gt;:N&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; length(count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;初期値は下のようにする。今回はサンプリングのパスを3つとするので初期値も3つ用意する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;inits1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;Dict&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Symbol&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;Any&lt;/span&gt;}(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:obs&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; theta,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda2&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; theta,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        &lt;span style=&#34;color:#e6db74&#34;&gt;:tau&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; _ &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;サンプリングの設定では、 \( \tau \) は離散値なので &lt;code&gt;DGS&lt;/code&gt; を使う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;scheme1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [AMWG([&lt;span style=&#34;color:#e6db74&#34;&gt;:lambda1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda2&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), DGS(&lt;span style=&#34;color:#e6db74&#34;&gt;:tau&lt;/span&gt;)]
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;サンプリングを行うと、本文と同様、44, 45日後にユーザーが振る舞いを変えたというところの確率密度が高くなっている。離散値になっていないので、何か設定が間違っているのかもしれない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(model1, scheme1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;sim1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(model1, data0, inits1, &lt;span style=&#34;color:#ae81ff&#34;&gt;40000&lt;/span&gt;, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(sim1[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, [&lt;span style=&#34;color:#e6db74&#34;&gt;:tau&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda2&lt;/span&gt;], &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], legend &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; true)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Mamba&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;draw(p1, nrow &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, ncol &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-1_sampling.png&#34; alt=&#34;Sampling&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( \tau \) のヒストグラムを確認すると、正しくサンプリングできているようだ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;histogram(vec(sim1[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:tau&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value), normalize &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:probability&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;tau&amp;#34;&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-1_hist.png&#34; alt=&#34;Histogram&#34;&gt;&lt;/p&gt;
&lt;p&gt;受信メッセージ数と期待値を表示する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;bar(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, count_data&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;messages, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;200&lt;/span&gt;],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    linecolor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;:transparent&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Time (days)&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Count of messages&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;plot!(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, vec(mean(sim1[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:lambda&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value, dims&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;])), linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Expectation&amp;#34;&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/bayesian-methods-julia-1_expect.png&#34; alt=&#34;Expectation&#34;&gt;&lt;/p&gt;
&lt;p&gt;コード: &lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter1_message.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/bayesian_methods_julia/blob/master/chapter1_message.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Intrinsic Gaussian CARモデルをMambaで実装</title>
      <link>https://matsueushi.github.io/posts/intrinsic-gaussian-car/</link>
      <pubDate>Sun, 10 Mar 2019 23:14:30 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/intrinsic-gaussian-car/</guid>
      <description>&lt;p&gt;「データ解析のための統計モデリング入門」第11章の空間構造のある階層ベイズモデルに挑戦する前に、まずPyMC3の&lt;a href=&#34;https://docs.pymc.io/notebooks/PyMC3_tips_and_heuristic.html&#34;&gt;Intrinsic Gaussian Model&lt;/a&gt;のサンプルをMambaで実装した。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/lip_stick_mamba&#34;&gt;https://github.com/matsueushi/lip_stick_mamba&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;参考にしたMatrix Multiplicationを用いたPyMC3の実装:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://docs.pymc.io/notebooks/PyMC3_tips_and_heuristic.html#PyMC3-implementation-using-Matrix-multiplication&#34;&gt;https://docs.pymc.io/notebooks/PyMC3_tips_and_heuristic.html#PyMC3-implementation-using-Matrix-multiplication&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;PyMCのモデル&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;with&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Model() &lt;span style=&#34;color:#66d9ef&#34;&gt;as&lt;/span&gt; model3:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Vague prior on intercept and effect&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    beta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Normal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;beta&amp;#39;&lt;/span&gt;, mu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, tau&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Priors for spatial random effects&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tau &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Gamma(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;tau&amp;#39;&lt;/span&gt;, alpha&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;, beta&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2.&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Uniform(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;alpha&amp;#39;&lt;/span&gt;, lower&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, upper&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    phi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;MvNormal(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;phi&amp;#39;&lt;/span&gt;, mu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            tau&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;tau&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(D &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; alpha&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;W), shape&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, N))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Mean model&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Deterministic(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;mu&amp;#39;&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                    tt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;exp(tt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;dot(X, beta) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; phi&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;T &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; log_offset))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# Likelihood&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Yi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Poisson(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;Yi&amp;#39;&lt;/span&gt;, mu&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;mu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ravel(), observed&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;O)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    trace3 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; pm&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;sample(&lt;span style=&#34;color:#ae81ff&#34;&gt;3e3&lt;/span&gt;, cores&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, tune&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は、Mambaだと下のようになる。PyMCとMambaで分布を指定するときに使うDistribution.jlでは&lt;code&gt;MvNormal&lt;/code&gt;のパラメーターの持ち方が違うことに注意。PyMCの&lt;code&gt;MvNormal&lt;/code&gt;に該当するDistibution.jlの分布は 、&lt;code&gt;MvNormal&lt;/code&gt;ではなく&lt;code&gt;MvNormalCanon&lt;/code&gt;。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;car_model &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Model(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    beta0 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    beta1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Normal()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    tau &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Distributions&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Gamma(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    alpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(() &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; Uniform()),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    phi &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (tau, alpha, N, D, W) 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; MvNormalCanon(zeros(N), tau &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (D &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; alpha &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; W)),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Logical(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (beta0, beta1, zscore_aff, phi, log_offset) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(beta0 &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; beta1 &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; zscore_aff &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; phi &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; log_offset)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Stochastic(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;,
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        (mu, N) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;            UnivariateDistribution[Poisson(mu[i]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;N],
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        false
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    )
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;サンプリングに関しては、NUTSが遅すぎるのでAWMGを使った。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;car_scheme &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    AMWG([&lt;span style=&#34;color:#e6db74&#34;&gt;:beta0&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:beta1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:phi&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Slice(&lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Slice(&lt;span style=&#34;color:#e6db74&#34;&gt;:tau&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(car_model, car_scheme)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;car_sim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(car_model, car_data, car_inits, &lt;span style=&#34;color:#ae81ff&#34;&gt;21000&lt;/span&gt;, 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;                burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/intrinsic-gaussian-car_1.png&#34; alt=&#34;CAR1&#34;&gt;&lt;/p&gt;
&lt;p&gt;PyMCの場合とおおよそ同じ分布になったが、&lt;code&gt;beta0&lt;/code&gt; の収束がやや微妙な気がする。&lt;/p&gt;
&lt;p&gt;サンプリング方法を下のように変更しても&lt;code&gt;beta0&lt;/code&gt;の収束はあまり良くならない。何か良い方法はあるのだろうか。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;car_scheme &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; AMWG([&lt;span style=&#34;color:#e6db74&#34;&gt;:alpha&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:beta0&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; AMWG([&lt;span style=&#34;color:#e6db74&#34;&gt;:beta1&lt;/span&gt;, &lt;span style=&#34;color:#e6db74&#34;&gt;:phi&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; Slice(&lt;span style=&#34;color:#e6db74&#34;&gt;:tau&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;]
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;setsamplers!(car_model, car_scheme)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;car_sim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mcmc(car_model, car_data, car_inits, &lt;span style=&#34;color:#ae81ff&#34;&gt;25000&lt;/span&gt;, burnin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5000&lt;/span&gt;, thin &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;, chains &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/intrinsic-gaussian-car_2.png&#34; alt=&#34;CAR2&#34;&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Julia版「データ解析のための統計モデリング入門」読書ノート</title>
      <link>https://matsueushi.github.io/posts/julia-kubo/</link>
      <pubDate>Mon, 04 Mar 2019 23:01:57 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-kubo/</guid>
      <description>&lt;p&gt;最近、&lt;a href=&#34;https://www.iwanami.co.jp/book/b257893.html&#34;&gt;久保拓弥「データ解析のための統計モデリング入門――一般化線形モデル・階層ベイズモデル・MCMC (確率と情報の科学)&lt;/a&gt;を読んでいる。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;生態学のデータ解析 - 久保拓弥&lt;br&gt;
&lt;a href=&#34;http://hosho.ees.hokudai.ac.jp/~kubo/ce/KuboTakuya.html&#34;&gt;http://hosho.ees.hokudai.ac.jp/~kubo/ce/KuboTakuya.html&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本では&lt;a href=&#34;https://www.r-project.org/&#34;&gt;R&lt;/a&gt; + &lt;a href=&#34;https://www.mrc-bsu.cam.ac.uk/software/bugs/the-bugs-project-winbugs/&#34;&gt;WinBUGS&lt;/a&gt;を使っているが、今回は&lt;a href=&#34;https://julialang.org/&#34;&gt;Julia&lt;/a&gt;(1.1.0) + &lt;a href=&#34;https://github.com/brian-j-smith/Mamba.jl&#34;&gt;Mamba&lt;/a&gt;を使って実装した(10章まで)。実装は&lt;a href=&#34;https://github.com/matsueushi/kubo_analysis_julia&#34;&gt;Github&lt;/a&gt;に載せてある。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;実装の中身は上のJupyter Notebookを見てもらうとして、それ以外に実装していて何点か躓いたことがあったので備忘のために記載しておく。&lt;/p&gt;
&lt;h2 id=&#34;binomial分布のglm&#34;&gt;Binomial分布のGLM&lt;/h2&gt;
&lt;p&gt;  &lt;code&gt;formula&lt;/code&gt; で指定する説明変数は、0から1の間になっている必要がある。個体の数で割って、wtsに個体の数を指定してフィッティングを行う。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;yy &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;y &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;N
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;N &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; convert(&lt;span style=&#34;color:#66d9ef&#34;&gt;Array&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;N)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;result &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glm(&lt;span style=&#34;color:#a6e22e&#34;&gt;@formula&lt;/span&gt;(yy &lt;span style=&#34;color:#f92672&#34;&gt;~&lt;/span&gt; x &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; f), df, Binomial(), wts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;N)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;モデルのグラフ表示&#34;&gt;モデルのグラフ表示&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://mambajl.readthedocs.io/en/release-0.12/tutorial.html#directed-acyclic-graphs&#34;&gt;Mambaのチュートリアル&lt;/a&gt;ではモデルのグラフ表示に&lt;a href=&#34;https://github.com/Keno/GraphViz.jl&#34;&gt;GraphViz.jl&lt;/a&gt;パッケージを使っている。&lt;/p&gt;
&lt;p&gt;ただGraphViz.jlはメンテナンスが止まっているようで、Julia v0.7以降では&lt;a href=&#34;https://github.com/epatters/Catlab.jl/issues/24&#34;&gt;動かないようである&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/biaslab/ForneyLab.jl&#34;&gt;ForneyLab.jl&lt;/a&gt;がGraphViz.jlの後継としてモデルのグラフ表示をサポートしているので、こちらを使用すれば良い。&lt;/p&gt;
&lt;h2 id=&#34;multiprocessing&#34;&gt;Multiprocessing&lt;/h2&gt;
&lt;p&gt;Mambaは &lt;code&gt;addproc&lt;/code&gt; でプロセスを追加して、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributed
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;addprocs(&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Mambaをインポートするときに &lt;code&gt;@everywhere&lt;/code&gt; を付ければMambaが自動的にMCMCのチェインごとのサンプリングを並列化してくれる。(section10.ipynb参照)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@everywhere&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Mamba
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;11章の空間構造のある階層ベイズモデル(intrinsic Gaussian CARモデル)も実装できたらアップデートしたい。&lt;/p&gt;
&lt;p&gt;3/14追記: 11章の空間構造のある階層ベイズモデルも実装したのでアップデートした。これで一通り読破したことになるのかな？次は以前読もうとして諦めた「Pythonで体験するベイズ推論」をJuliaでやってみようか。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ヒイラギペイジ</title>
      <link>https://matsueushi.github.io/posts/hiiragipage/</link>
      <pubDate>Sun, 03 Mar 2019 22:15:31 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/hiiragipage/</guid>
      <description>&lt;p&gt;さて、Lolica Tonicaの記事に引き続き、メンバーの一人であるヒイラギペイジのLolica Tonica前の活動や提供曲について紹介したい。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ヒイラギペイジの名前に至るまで、PAIGE → PAGE → TemoTemoe →ヒイラギペイジと言う変遷があったと思われる。&lt;/p&gt;
&lt;p&gt;ヒイラギペイジは一番最初はPAIGEと言う名義で活動しているニコラッパーでニコニコにラップ動画をアップしていたようだ（現在は削除されている）。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;マナツニミタユメ / PAIGE&lt;/p&gt;
&lt;p&gt;夢が僕の夢を叶えてくれる。9月4日に日比谷で発売したデモアルバムに収録した曲です。Track.by Salty Mixed.by Jill &lt;a href=&#34;https://www.nicovideo.jp/mylist/28073427&#34;&gt;mylist/28073427&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.nicovideo.jp/watch/sm15603665&#34;&gt;https://www.nicovideo.jp/watch/sm15603665&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Monochrome / PAIGE&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Monochrome&lt;br&gt;
Track.by Tiger&lt;br&gt;
Lyric.by PAIGE(mylist/28073427)&lt;br&gt;
Mixed.by 黒衣えすてる(mylist/8488406)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;■孤独な自分と味気ない日々について。&lt;br&gt;
■何もかも上手くいかない鬱な気持ち。&lt;br&gt;
■感情を上手く言葉にするのが苦手です。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;□耳がキンキンするというコメントがあったので、修正版mp3を用意しました。&lt;br&gt;
□a cappellaとLyricもzipに詰めときました。Remixとかもしてくれたら飛んで喜びます。宜しくお願いします。&lt;br&gt;
□http://www1.axfc.net/uploader/H/so/140127.zip&amp;amp;key=monokuro&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nicovideo.jp/watch/sm15244635&#34;&gt;https://www.nicovideo.jp/watch/sm15244635&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Monochromeのリミックスはまだ残っていた。&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://embed.nicovideo.jp/watch/sm15276843/script?w=640&amp;h=360&#34;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href=&#34;https://www.nicovideo.jp/watch/sm15276843&#34;&gt;[ニコラップ]  Monochrome(kome remix) / PAIGE  [remix]&lt;/a&gt;&lt;/noscript&gt;
&lt;p&gt;そして2011年には閃光ライオットでグランプリを獲得しており、同じぐらいのタイミングで名前をPAGEに変えている。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://ja.wikipedia.org/wiki/PAGE_%28%E3%83%A9%E3%83%83%E3%83%91%E3%83%BC%29&#34;&gt;https://ja.wikipedia.org/wiki/PAGE_%28%E3%83%A9%E3%83%83%E3%83%91%E3%83%BC%29&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;TOKYO FM「SCHOOL OF LOCK！」の呼び掛けにより集まった1万組を超える応募から、＜閃光ライオット2011＞グランプリを獲得したのは愛媛県出身の16歳ラッパーのPAIGE（ペイジ）だった。&lt;br&gt;
&lt;a href=&#34;https://www.barks.jp/news/?id=1000072980&#34;&gt;https://www.barks.jp/news/?id=1000072980&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;この頃の曲はLolica Tonicaの音楽性とはかなり違う。アルバム「ノンフィクション・ガール」に収録されている2曲目の「あ・い・ど・る」は特にチップチューンのトラックにアイドルに恋するオタク目線の妄想的な歌詞が鏤められてかなり好きである。&lt;/p&gt;
&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;150&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/jp/album/%E3%81%82-%E3%81%84-%E3%81%A9-%E3%82%8B/910067620?i=910067627&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;また、ヒイラギペイジは初期はTemoTemoeという名義を使っていたようだ。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://soundcloud.com/lolicatonica&#34;&gt;Lolica Tonica&lt;/a&gt; is a Tokyo based duo made up of &lt;a href=&#34;https://soundcloud.com/ky7ie&#34;&gt;Ky7ie&lt;/a&gt; and &lt;a href=&#34;https://soundcloud.com/pagehiiragi&#34;&gt;TemoTemoe&lt;/a&gt;. Shortly after releasing a spastic club flip of Ariana Grande’s “The Way” and bright digital burst of energy called “Luv sick”, the pair were picked up by the TREKKIE TRACKS imprint to release their latest single, “Make Me Feel”.&lt;br&gt;
&lt;a href=&#34;https://nesthq.com/premiere-lolica-tonica-carpainter&#34;&gt;https://nesthq.com/premiere-lolica-tonica-carpainter&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;Lolica Tonicaの少し前はTemoTemoe名義で活動していたようで、Lolica Tonica初期はTenoTemoe a.k.a ヒイラギペイジと紹介されていたようである。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Ky7ie.とTemoTemoe a.k.a. ヒイラギペイジによる新鋭プロデューサー二人組ユニット。&lt;br&gt;
&lt;a href=&#34;http://asia.iflyer.jp/venue/performer/48664?frame=1&amp;amp;keepThis=true&amp;amp;TB_iframe=true&amp;amp;height=250&amp;amp;width=600&#34;&gt;http://asia.iflyer.jp/venue/performer/48664?frame=1&amp;amp;keepThis=true&amp;amp;TB_iframe=true&amp;amp;height=250&amp;amp;width=600&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;くそ緊張してたけどTemoTemoeが落ち着いててめっちゃ楽しくできた&lt;br&gt;
 — &lt;a href=&#34;https://twitter.com/ky7ieee/status/604685293619257344&#34;&gt;@ky7ieee&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;TemoTemoeの初期の曲は明らかにLolica Tonicaの曲調とは異なっている。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Listen to Void by TemoTemoe / ヒイラギペイジ &lt;a href=&#34;https://twitter.com/hashtag/np?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#np&lt;/a&gt; on &lt;a href=&#34;https://twitter.com/hashtag/SoundCloud?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#SoundCloud&lt;/a&gt; &lt;a href=&#34;https://t.co/41O13hYYYp&#34;&gt;https://t.co/41O13hYYYp&lt;/a&gt;&lt;/p&gt;&amp;mdash; くぬぎ (@fsk0122) &lt;a href=&#34;https://twitter.com/fsk0122/status/549242402070753280?ref_src=twsrc%5Etfw&#34;&gt;December 28, 2014&lt;/a&gt;&lt;/blockquote&gt; 
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/183089255&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;そのちょっと後ぐらいからLolica TonicaっぽいFuture Bassの曲調になってきたようだ。&lt;/p&gt;
&lt;p&gt;TenoTemoe名義の曲で現在も残っているものは、FOGPAK #11に収録されているTemoTemoe — childish club&lt;/p&gt;
&lt;iframe style=&#34;border: 0; width: 100%; height: 120px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/album=493819028/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/track=2480159902/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://fogpak.bandcamp.com/album/fogpak-11-2&#34;&gt;FOGPAK #11 by TemoTemoe&lt;/a&gt;&lt;/iframe&gt;
&lt;p&gt;と、強がり Temo Temoe Remix&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;同世代同士で起こる、新たな化学反応ーーとけた電球×ヒイラギペイジによる『強がり Temo Temoe Remix』ハイレゾ独占配信!!&lt;br&gt;
&lt;a href=&#34;https://ototoy.jp/feature/2015081901&#34;&gt;https://ototoy.jp/feature/2015081901&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe src=&#34;https://ototoy.jp/embed/player/album/55025&#34; height=&#34;360&#34; width=&#34;620&#34; title=&#34;とけた電球 / 強がり Temo Temoe Remix(24bit/48kHz) on OTOTOY Music Store&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;そして、ニコニコ動画にヒイラギペイジのアカウント名でアップロードされている、ツギハギスタッカート(TemoTemoe Remix) / とあ feat. 初音ミク である。&lt;/p&gt;
&lt;script type=&#34;application/javascript&#34; src=&#34;https://embed.nicovideo.jp/watch/sm25828691/script?w=640&amp;h=360&#34;&gt;&lt;/script&gt;&lt;noscript&gt;&lt;a href=&#34;https://www.nicovideo.jp/watch/sm25828691&#34;&gt;ツギハギスタッカート(TemoTemoe Remix) / とあ feat. 初音ミク&lt;/a&gt;&lt;/noscript&gt;
&lt;p&gt;ボーカルカットアップこそ無いものの、キラキラシンセやビートの感触はが随所に散りばめられていてLolica Tonicaの源流が確かに感じられる。高音質で聴きたいが、mp3のリンクが切れていて落とせず、SoundCloudからも削除されている……残念。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/289287066&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;実は他のアーティストに提供した曲も名曲ぞろいである。&lt;/p&gt;
&lt;p&gt;CY8ERのシングル「リミックススタート」に含まれている「ゆびきり」は切なさ溢れる可愛い曲。&lt;/p&gt;
&lt;p&gt;chelmicoの最初のシングル「ラビリンス’97」はヒイラギペイジが提供している。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Rachel　転機になった人って、今ぱっと思い浮かべただけでも、いっぱいいるんです。よし、細かく言っていこうぜ。&lt;br&gt;
Mamiko　今までで一番細かく言おう。まず最初にGOMESS。そこから繋がったヒイラギペイジくんは最初のシングル『ラビリンス&#39;97』のトラックメイカー。&lt;br&gt;
&lt;a href=&#34;http://news.line.me/articles/oa-rp52663/814c84e18935&#34;&gt;http://news.line.me/articles/oa-rp52663/814c84e18935&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/247477095&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;chelmicoの2ndレコードディング曲、JUNEJULYは気怠げな夏を仄めかす歌詞も相まってアルバムに収録されなかったのが不思議なくらい最高。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/220925493&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;blockquote&gt;
&lt;p&gt;ohayoumadayarouのブログ&lt;br&gt;
JUNEJULY /chelmico&lt;br&gt;
&lt;a href=&#34;http://ohayoumadayarou.hatenablog.com/entry/2015/09/30/110615&#34;&gt;http://ohayoumadayarou.hatenablog.com/entry/2015/09/30/110615&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;ファンと言いながらGOMESS&amp;amp;Page Hiiragiの配信オンリーミニアルバムは見逃してしまっており、気づけば配信が終了してしまっていた。悲しい。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/npFebgSTgIM&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;追記: サウンドクラウドに新曲(16歳の時の曲の再録だそうです)上がってました。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/565742574&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;追記2 (2019/06/06):
&lt;a href=&#34;https://musicsneak.live/&#34;&gt;https://musicsneak.live/&lt;/a&gt; が閉鎖していていくつかのインタビューが読めなくなっていた。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;追記3 (2019/09/02)&lt;/p&gt;
&lt;p&gt;この曲もあった。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/194808852&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;復活?&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;3月30日（土）🌇&lt;br&gt;平成30年度秋葉原MOGRA送迎会&lt;br&gt;&lt;br&gt;この春から東京で新社会人、おやつです！&lt;br&gt;秋葉原MOGRAというクラブでDJをします…よろしくね🐣📛&lt;br&gt;&lt;br&gt;🍡カレーパイセン&lt;br&gt;🍡かのんびーつ&lt;br&gt;🍡ギー汰&lt;br&gt;🍡JunyaUtsunomiya&lt;br&gt;🍡まこ&lt;br&gt;🍡ヒイラギペイジ&lt;br&gt;🍡RIO&lt;br&gt;🍡ムラタナナ&lt;br&gt;🍡おやつ ←🐰✋&lt;a href=&#34;https://t.co/s9Jxthbs6H&#34;&gt;https://t.co/s9Jxthbs6H&lt;/a&gt; &lt;a href=&#34;https://t.co/BNjP9v9Qmj&#34;&gt;pic.twitter.com/BNjP9v9Qmj&lt;/a&gt;&lt;/p&gt;&amp;mdash; 𝙾𝚈𝙰𝚃𝚂𝚄 🐇 (@akiyoyo) &lt;a href=&#34;https://twitter.com/akiyoyo/status/1107944298706690049?ref_src=twsrc%5Etfw&#34;&gt;March 19, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;p&gt;&lt;a href=&#34;https://club-mogra.jp/2019/03/30/3798/&#34;&gt;https://club-mogra.jp/2019/03/30/3798/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;追記4 (2020/08/23)&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/814389952&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/colate_ll&#34; title=&#34;colate&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;colate&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/colate_ll/lonelygirlonthebeach&#34; title=&#34;colate &amp;amp; Page Hiiragi - 渚のロンリーガール feat. みほりん [+Remix Vocals]&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;colate &amp;amp; Page Hiiragi - 渚のロンリーガール feat. みほりん [+Remix Vocals]&lt;/a&gt;&lt;/div&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/871795099&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/makoto-ota&#34; title=&#34;Makoto Ota&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Makoto Ota&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/makoto-ota/page-hiiragi-makoto-ota-myslee&#34; title=&#34;Page Hiiragi &amp;amp; Makoto Ota - Myslee&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Page Hiiragi &amp;amp; Makoto Ota - Myslee&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;追記5 (2022/01/10)&lt;/p&gt;
&lt;p&gt;Twitter, Instagramが開設されていた&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://twitter.com/PageHiiragi&#34;&gt;https://twitter.com/PageHiiragi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.instagram.com/pagehiiragi/&#34;&gt;https://www.instagram.com/pagehiiragi/&lt;/a&gt;&lt;/p&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/album/08KA3MifSebFuCuRgGeM9t?utm_source=generator&#34; width=&#34;100%&#34; height=&#34;80&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;&#34; allow=&#34;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&#34;&gt;&lt;/iframe&gt;
&lt;iframe src=&#34;https://open.spotify.com/embed/album/7m6NrNn1VcfuONy71V7Csr?utm_source=generator&#34; width=&#34;100%&#34; height=&#34;380&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;&#34; allow=&#34;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&#34;&gt;&lt;/iframe&gt;
&lt;blockquote class=&#34;instagram-media&#34; data-instgrm-captioned data-instgrm-permalink=&#34;https://www.instagram.com/p/CMMnTjAlruA/?utm_source=ig_embed&amp;amp;utm_campaign=loading&#34; data-instgrm-version=&#34;14&#34; style=&#34; background:#FFF; border:0; border-radius:3px; box-shadow:0 0 1px 0 rgba(0,0,0,0.5),0 1px 10px 0 rgba(0,0,0,0.15); margin: 1px; max-width:540px; min-width:326px; padding:0; width:99.375%; width:-webkit-calc(100% - 2px); width:calc(100% - 2px);&#34;&gt;&lt;div style=&#34;padding:16px;&#34;&gt; &lt;a href=&#34;https://www.instagram.com/p/CMMnTjAlruA/?utm_source=ig_embed&amp;amp;utm_campaign=loading&#34; style=&#34; background:#FFFFFF; line-height:0; padding:0 0; text-align:center; text-decoration:none; width:100%;&#34; target=&#34;_blank&#34;&gt; &lt;div style=&#34; display: flex; flex-direction: row; align-items: center;&#34;&gt; &lt;div style=&#34;background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 40px; margin-right: 14px; width: 40px;&#34;&gt;&lt;/div&gt; &lt;div style=&#34;display: flex; flex-direction: column; flex-grow: 1; justify-content: center;&#34;&gt; &lt;div style=&#34; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 100px;&#34;&gt;&lt;/div&gt; &lt;div style=&#34; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 60px;&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&#34;padding: 19% 0;&#34;&gt;&lt;/div&gt; &lt;div style=&#34;display:block; height:50px; margin:0 auto 12px; width:50px;&#34;&gt;&lt;svg width=&#34;50px&#34; height=&#34;50px&#34; viewBox=&#34;0 0 60 60&#34; version=&#34;1.1&#34; xmlns=&#34;https://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;https://www.w3.org/1999/xlink&#34;&gt;&lt;g stroke=&#34;none&#34; stroke-width=&#34;1&#34; fill=&#34;none&#34; fill-rule=&#34;evenodd&#34;&gt;&lt;g transform=&#34;translate(-511.000000, -20.000000)&#34; fill=&#34;#000000&#34;&gt;&lt;g&gt;&lt;path d=&#34;M556.869,30.41 C554.814,30.41 553.148,32.076 553.148,34.131 C553.148,36.186 554.814,37.852 556.869,37.852 C558.924,37.852 560.59,36.186 560.59,34.131 C560.59,32.076 558.924,30.41 556.869,30.41 M541,60.657 C535.114,60.657 530.342,55.887 530.342,50 C530.342,44.114 535.114,39.342 541,39.342 C546.887,39.342 551.658,44.114 551.658,50 C551.658,55.887 546.887,60.657 541,60.657 M541,33.886 C532.1,33.886 524.886,41.1 524.886,50 C524.886,58.899 532.1,66.113 541,66.113 C549.9,66.113 557.115,58.899 557.115,50 C557.115,41.1 549.9,33.886 541,33.886 M565.378,62.101 C565.244,65.022 564.756,66.606 564.346,67.663 C563.803,69.06 563.154,70.057 562.106,71.106 C561.058,72.155 560.06,72.803 558.662,73.347 C557.607,73.757 556.021,74.244 553.102,74.378 C549.944,74.521 548.997,74.552 541,74.552 C533.003,74.552 532.056,74.521 528.898,74.378 C525.979,74.244 524.393,73.757 523.338,73.347 C521.94,72.803 520.942,72.155 519.894,71.106 C518.846,70.057 518.197,69.06 517.654,67.663 C517.244,66.606 516.755,65.022 516.623,62.101 C516.479,58.943 516.448,57.996 516.448,50 C516.448,42.003 516.479,41.056 516.623,37.899 C516.755,34.978 517.244,33.391 517.654,32.338 C518.197,30.938 518.846,29.942 519.894,28.894 C520.942,27.846 521.94,27.196 523.338,26.654 C524.393,26.244 525.979,25.756 528.898,25.623 C532.057,25.479 533.004,25.448 541,25.448 C548.997,25.448 549.943,25.479 553.102,25.623 C556.021,25.756 557.607,26.244 558.662,26.654 C560.06,27.196 561.058,27.846 562.106,28.894 C563.154,29.942 563.803,30.938 564.346,32.338 C564.756,33.391 565.244,34.978 565.378,37.899 C565.522,41.056 565.552,42.003 565.552,50 C565.552,57.996 565.522,58.943 565.378,62.101 M570.82,37.631 C570.674,34.438 570.167,32.258 569.425,30.349 C568.659,28.377 567.633,26.702 565.965,25.035 C564.297,23.368 562.623,22.342 560.652,21.575 C558.743,20.834 556.562,20.326 553.369,20.18 C550.169,20.033 549.148,20 541,20 C532.853,20 531.831,20.033 528.631,20.18 C525.438,20.326 523.257,20.834 521.349,21.575 C519.376,22.342 517.703,23.368 516.035,25.035 C514.368,26.702 513.342,28.377 512.574,30.349 C511.834,32.258 511.326,34.438 511.181,37.631 C511.035,40.831 511,41.851 511,50 C511,58.147 511.035,59.17 511.181,62.369 C511.326,65.562 511.834,67.743 512.574,69.651 C513.342,71.625 514.368,73.296 516.035,74.965 C517.703,76.634 519.376,77.658 521.349,78.425 C523.257,79.167 525.438,79.673 528.631,79.82 C531.831,79.965 532.853,80.001 541,80.001 C549.148,80.001 550.169,79.965 553.369,79.82 C556.562,79.673 558.743,79.167 560.652,78.425 C562.623,77.658 564.297,76.634 565.965,74.965 C567.633,73.296 568.659,71.625 569.425,69.651 C570.167,67.743 570.674,65.562 570.82,62.369 C570.966,59.17 571,58.147 571,50 C571,41.851 570.966,40.831 570.82,37.631&#34;&gt;&lt;/path&gt;&lt;/g&gt;&lt;/g&gt;&lt;/g&gt;&lt;/svg&gt;&lt;/div&gt;&lt;div style=&#34;padding-top: 8px;&#34;&gt; &lt;div style=&#34; color:#3897f0; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:550; line-height:18px;&#34;&gt;この投稿をInstagramで見る&lt;/div&gt;&lt;/div&gt;&lt;div style=&#34;padding: 12.5% 0;&#34;&gt;&lt;/div&gt; &lt;div style=&#34;display: flex; flex-direction: row; margin-bottom: 14px; align-items: center;&#34;&gt;&lt;div&gt; &lt;div style=&#34;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(0px) translateY(7px);&#34;&gt;&lt;/div&gt; &lt;div style=&#34;background-color: #F4F4F4; height: 12.5px; transform: rotate(-45deg) translateX(3px) translateY(1px); width: 12.5px; flex-grow: 0; margin-right: 14px; margin-left: 2px;&#34;&gt;&lt;/div&gt; &lt;div style=&#34;background-color: #F4F4F4; border-radius: 50%; height: 12.5px; width: 12.5px; transform: translateX(9px) translateY(-18px);&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&#34;margin-left: 8px;&#34;&gt; &lt;div style=&#34; background-color: #F4F4F4; border-radius: 50%; flex-grow: 0; height: 20px; width: 20px;&#34;&gt;&lt;/div&gt; &lt;div style=&#34; width: 0; height: 0; border-top: 2px solid transparent; border-left: 6px solid #f4f4f4; border-bottom: 2px solid transparent; transform: translateX(16px) translateY(-4px) rotate(30deg)&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;div style=&#34;margin-left: auto;&#34;&gt; &lt;div style=&#34; width: 0px; border-top: 8px solid #F4F4F4; border-right: 8px solid transparent; transform: translateY(16px);&#34;&gt;&lt;/div&gt; &lt;div style=&#34; background-color: #F4F4F4; flex-grow: 0; height: 12px; width: 16px; transform: translateY(-4px);&#34;&gt;&lt;/div&gt; &lt;div style=&#34; width: 0; height: 0; border-top: 8px solid #F4F4F4; border-left: 8px solid transparent; transform: translateY(-4px) translateX(8px);&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/div&gt; &lt;div style=&#34;display: flex; flex-direction: column; flex-grow: 1; justify-content: center; margin-bottom: 24px;&#34;&gt; &lt;div style=&#34; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; margin-bottom: 6px; width: 224px;&#34;&gt;&lt;/div&gt; &lt;div style=&#34; background-color: #F4F4F4; border-radius: 4px; flex-grow: 0; height: 14px; width: 144px;&#34;&gt;&lt;/div&gt;&lt;/div&gt;&lt;/a&gt;&lt;p style=&#34; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; line-height:17px; margin-bottom:0; margin-top:8px; overflow:hidden; padding:8px 0 7px; text-align:center; text-overflow:ellipsis; white-space:nowrap;&#34;&gt;&lt;a href=&#34;https://www.instagram.com/p/CMMnTjAlruA/?utm_source=ig_embed&amp;amp;utm_campaign=loading&#34; style=&#34; color:#c9c8cd; font-family:Arial,sans-serif; font-size:14px; font-style:normal; font-weight:normal; line-height:17px; text-decoration:none;&#34; target=&#34;_blank&#34;&gt;Page Hiiragi(@pagehiiragi)がシェアした投稿&lt;/a&gt;&lt;/p&gt;&lt;/div&gt;&lt;/blockquote&gt; &lt;script async src=&#34;//www.instagram.com/embed.js&#34;&gt;&lt;/script&gt;
</description>
    </item>
    
    <item>
      <title>Jupyter Notebookのkernelの位置を調べる</title>
      <link>https://matsueushi.github.io/posts/jupyter-kernel-location/</link>
      <pubDate>Fri, 01 Mar 2019 22:52:53 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/jupyter-kernel-location/</guid>
      <description>&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;$ jupyter kernelspec list
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Available kernels:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  julia-1.1    /home/matsueushi/.local/share/jupyter/kernels/julia-1.1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  python3      /home/matsueushi/.local/share/jupyter/kernels/python3
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;blockquote&gt;
&lt;p&gt;How do I add python3 kernel to jupyter (IPython)
&lt;a href=&#34;https://stackoverflow.com/questions/28831854/how-do-i-add-python3-kernel-to-jupyter-ipython/44072803#44072803&#34;&gt;https://stackoverflow.com/questions/28831854/how-do-i-add-python3-kernel-to-jupyter-ipython/44072803#44072803&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
</description>
    </item>
    
    <item>
      <title>Yubikey</title>
      <link>https://matsueushi.github.io/posts/yubikey/</link>
      <pubDate>Thu, 03 Jan 2019 22:47:53 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/yubikey/</guid>
      <description>&lt;p&gt;物理セキュリティーキーが欲しかったので買ってしまった。&lt;/p&gt;
&lt;p&gt;公式サイトから購入し、バックアップ用と合わせて2つで$90+Tax $7.99=$97.99だった。&lt;/p&gt;
&lt;p&gt;良い点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;難しい設定がなく挿して押すだけで二段階認証が使える&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;悪い点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;iPhoneでYubikeyを使おうとしても、LastPassのiPhoneアプリぐらいしかNFCに対応していない&lt;/li&gt;
&lt;li&gt;LastPassだとプレミアム会員($2/month)ではないとYubikeyが使えない&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>忘られぬLolica Tonica</title>
      <link>https://matsueushi.github.io/posts/lolica-tonica/</link>
      <pubDate>Sun, 21 Oct 2018 17:16:51 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/lolica-tonica/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;http://lolicatonica.com/&#34;&gt;Lolica Tonica&lt;/a&gt; (Twitter: &lt;a href=&#34;https://twitter.com/lolicatonica&#34;&gt;@LolicaTonica&lt;/a&gt;)とは&lt;a href=&#34;https://twitter.com/ky7ieee&#34;&gt;Ky7ie.&lt;/a&gt;とPage Hiiragi(ヒイラギペイジ)からなる、
キラキラしたシンセとカットアップされたボーカルによる可愛らしい曲調が特徴的なFutureBassユニットである。
ただ可愛らしいだけではなく、時にゴリゴリのビートが同居している所もまた魅力的で、
すでに解散しているのだが、今でも再結成していないか定期的にチェックしているぐらいである。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;Lolica Tonicaが活動を開始したのは2015年5月頃のようだ。名前がLolica Tonicaに決まる前は別の名前があったらしい。「ダサい」って言われるような名前、何だったんだろう……&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;まぁそれはそれとしてだな、今ペイジくんとのユニット「Lolica Tonica」でテンションくそ高いブート作ってるんで、これはぜひ早くみんなに聞いてもらいたい、そしてあわよくば現場で使って欲しい&lt;br&gt;
— &lt;a href=&#34;https://twitter.com/ky7ieee/status/599231223710416896&#34;&gt;@ky7ieee&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;【新曲】ペイジくんとのユニット「Lolica Tonica」でアリアナ・グランデの曲をREMIXしたよ！フリーDLも！ &amp;lsquo;ARIANA GRANDE - The Way (Lolica Tonica Bootleg REMIX)&amp;rsquo; &lt;a href=&#34;https://t.co/CEO3vUp1ag&#34;&gt;https://t.co/CEO3vUp1ag&lt;/a&gt;&lt;br&gt;
— &lt;a href=&#34;https://twitter.com/ky7ieee/status/600264661905186816&#34;&gt;@ky7ieee&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;Lolica Tonicaだいたいこういう感じでやっていきますんでよろしくお願いします&lt;br&gt;
— &lt;a href=&#34;https://twitter.com/ky7ieee/status/600268153575198720&#34;&gt;@ky7ieee&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;andrew Lolica TonicaはKy7ie.くんの方はLOUNGE NEO周りでDJをやってて、個人の曲も作ってて、僕はたまに喋ってたんです。でもヒイラギペイジくんと一緒に作るようになって音がだいぶ変わって。それをSeimeiがすごくいいって言って。&lt;br&gt;
futatsuki 僕も１曲目でピンときて、Masayoshi Iimoriのプロデュースがうまくいってたんで、彼らをゼロからプロデュースしようということになったんです。会った時はLolica Tonicaっていう名前もなかったんですよ。前の名前があって、「いやそれはダサイでしょ」って言ったりとか。&lt;/p&gt;
&lt;p&gt;TREKKIE TRAX THE BEST &amp;ldquo;2011&amp;rdquo;-2015 トレッキー、はじまりの場所へ行く。 [ CARELESS CRITIC ]&lt;br&gt;
&lt;a href=&#34;http://carelesscritic.com/sp/trekkietrax/&#34;&gt;http://carelesscritic.com/sp/trekkietrax/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;本格始動し始めたのはLolica TonicaのTwitterが開設された2015年7月だろうか。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;Hello, world&lt;/p&gt;&amp;mdash; Lolica Tonica (@LolicaTonica) &lt;a href=&#34;https://twitter.com/LolicaTonica/status/623823201382985728?ref_src=twsrc%5Etfw&#34;&gt;July 22, 2015&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;hr&gt;
&lt;p&gt;リミックス以外でリリースされたロリトニ作品は少なく、「Lolica Tonica — Luv sick (feat. ina)」「Make me Feel EP」「Eyes on you EP」のみである。&lt;/p&gt;
&lt;p&gt;最初の方はリアルタイムで追っていなかったのでMake me Feelが一番最初にリリースされていたと思っていたが、2015年7月31日にリリースされたLuv sick(feat. ina)の方が先っぽい。これぞカワFutureBassって感じの曲で静から動へ盛り上がっていく感じとハイテンションなボーカルとビートの混ざり合い方が好きだ。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/217461746&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;映像ちょうかっこいい👉🏻 &lt;a href=&#34;https://twitter.com/assassin3120?ref_src=twsrc%5Etfw&#34;&gt;@assassin3120&lt;/a&gt; Lolica Tonica - Luv sick (feat. ina) &lt;a href=&#34;https://twitter.com/hashtag/maufes?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#maufes&lt;/a&gt; &lt;a href=&#34;https://t.co/3ddSizCDnD&#34;&gt;pic.twitter.com/3ddSizCDnD&lt;/a&gt;&lt;/p&gt;&amp;mdash; ᎪᏳᎬᏞᏫᎳ(LADY&amp;#39;S ONLY) (@AGELOW) &lt;a href=&#34;https://twitter.com/AGELOW/status/658307660048179200?ref_src=twsrc%5Etfw&#34;&gt;October 25, 2015&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;hr&gt;
&lt;p&gt;Make me FeelがEPから先行してリリースされたのは2015年8月26日。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;9月2日リリースの予定の Lolica Tonica - Make me Feel EPより表題曲を先行フリーダウンロードで配信開始！&lt;a href=&#34;https://t.co/i4q3eg2EvB&#34;&gt;https://t.co/i4q3eg2EvB&lt;/a&gt;&lt;/p&gt;&amp;mdash; TREKKIE TRAX (@TREKKIETRAX) &lt;a href=&#34;https://twitter.com/TREKKIETRAX/status/636505536091983872?ref_src=twsrc%5Etfw&#34;&gt;August 26, 2015&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;Lolica Tonicaで一番有名な曲と思われるMake me Feelはポップで華やかなエネルギーが溢れる曲で、口ずさんでしまいたくなるボーカルカットアップも印象的。渋谷の繁華街で撮影されたPVもインターネットミュージックっぽくて良い。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/XoWJZIf-_yg&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;また、この曲はSoundCloudに山のようにリミックスアップロードされていて聴き比べるのも楽しい。(&lt;a href=&#34;https://www.dropbox.com/s/j716kdv1s8fs0ex/Make%20me%20Feel_RemixStem.zip&#34;&gt;リミックス素材&lt;/a&gt;が配布されていたことも原因らしい)&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/221203206&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/232845318&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/233599725&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;そして、Make Me Feel EPがTRAKKIE TREXで&lt;a href=&#34;https://trekkietrax.bandcamp.com/album/make-me-feel-ep&#34;&gt;リリース&lt;/a&gt;されたのが2015年9月2日。&lt;/p&gt;
&lt;p&gt;個人的にはEPの中ではMake me Feelも好きだけど、ボーカルカットアップが多用された4曲目のAtomic Futureが自分のツボにがっしりハマった。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/222004078&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;Make me Feelから1年以上経った2017年1月、満を持して2nd EPのEyes on youがマルチネからリリースされた。&lt;/p&gt;
&lt;p&gt;1stに比べて受ける印象が上品になって曲調もガラージっぽくなっている。Luv sickのGarage Editも収録されていてこちらも良い！Luv charmはおそらくLolica Tonicaで唯一のボーカル主体の歌モノ(ボーカルは&lt;a href=&#34;https://twitter.com/yura_mari&#34;&gt;結良まり&lt;/a&gt;)。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Lolica Tonica Eyes on you
&lt;a href=&#34;https://spincoaster.com/lolica-tonica-eyes-on-you&#34;&gt;https://spincoaster.com/lolica-tonica-eyes-on-you&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/LESIk_IbwtA&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Eyes on youリリースにあたってはKy7ie.がリリースコメントを出している。Make me Feelの反響が大きすぎてハードルが上がってしまったこともあり2ndは相当難産だったようだ。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;2017.01.23 Eyes on you リリースに寄せて
&lt;a href=&#34;https://rrremixmyheaddd.tumblr.com/post/156264942359/20170123-eyes-on-you-%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%81%AB%E5%AF%84%E3%81%9B%E3%81%A6&#34;&gt;https://rrremixmyheaddd.tumblr.com/post/156264942359/20170123-eyes-on-you-%E3%83%AA%E3%83%AA%E3%83%BC%E3%82%B9%E3%81%AB%E5%AF%84%E3%81%9B%E3%81%A6&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;普段私はクラブには行かないのだが、どうしてもLolica Tonicaを生で見たかったのでちょうどEyes on youがリリースされたのと同じタイミングぐらいで&lt;a href=&#34;http://maltinerecords.cs8.biz/&#34;&gt;Maltine Records&lt;/a&gt;が主催していたMALTINE SEED STAGE 01というイベントに思い切って行った。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;〈Maltine Records〉のレギュラーイベント「MALTINE SEED STAGE 01」がスタート　Meuko! Meuko!、Hercelot、Miiiなどが全7組が出演
&lt;a href=&#34;https://uncannyzine.com/posts/44744&#34;&gt;https://uncannyzine.com/posts/44744&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;行って見たら会場はクラブっぽくない感じの場所で取り越し苦労だった。リリースされていた曲はほぼプレイされて、行って大満足だった。結果として、Lolica Tonicaを生で見たのはこれが最初で最後となってしまった。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;ここで一旦脱線し、Lolica Tonicaのリミックス作品に触れたい。もはや別物と言っていいほどの曲の再構築が行われているところが好きである。&lt;/p&gt;
&lt;p&gt;Lolica Tonica名義のおそらく最初の曲であるARIANA GRANDE — The Way (Lolica Tonica Bootleg REMIX)は攻撃的なビートや入り乱れるボーカルカットアップが心地よい。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/206016996&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;他にもSoundCloudにリミックスがアップロードされていてどれも名曲揃い。&lt;a href=&#34;https://hexmanialabel.bandcamp.com/album/choco-love-remixes&#34;&gt;ChocoholicのリミックスEP&lt;/a&gt;に収録されたどこか哀愁漂うChoco Love (Lolica Tonica Remix)やchelmicoの名曲Love is Overのロリトニ的再解釈が好きである。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/238458403&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/247900057&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/258808338&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/268109551&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;そして、私がリミックスの中で一番好きなのは
Henrik the Artist — Peddi Max (Lolica Tonica remix)である。&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/286965136&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;&lt;a href=&#34;https://soundcloud.com/henrik-the-artist&#34;&gt;Henrik the Artist&lt;/a&gt;(私はあまり詳しく知らず、すいません)のPeddi Maxという曲のリミックス企画で作られた曲のようである。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;PREMIERE: HENRIK THE ARTIST’S “PEDDI MAX” GETS 21 REMIXES FROM 21 TRUE FRIENDS&lt;br&gt;
&lt;a href=&#34;https://nesthq.com/henrik-the-artist-peddi-max-remixes&#34;&gt;https://nesthq.com/henrik-the-artist-peddi-max-remixes&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;リミックス元の原形をほぼ留めていないLolica Tonica節炸裂のハイテンションなリミックスで、1曲の中でLolica Tonicaっぽい音の要素がやり過ぎってくらい詰め込まれていて、2分ぐらいから始まるなんども畳み掛けるような盛り上がり、絶妙な具合で差し込まれるサンプリングの妙味、がかなり好きでこの曲だけで数百回は聞いている。&lt;/p&gt;
&lt;p&gt;これを書くまでてっきりSoundCloundでしか聞けないと思っていたのだが、(購入リンクがSoundCloudに貼られていなかった) Amazon Musicで購入できた。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Peddi Max&lt;br&gt;
Henrik the Artist&lt;br&gt;
&lt;a href=&#34;https://www.amazon.co.jp/Peddi-Max-Henrik-Artist/dp/B079524KFQ&#34;&gt;https://www.amazon.co.jp/Peddi-Max-Henrik-Artist/dp/B079524KFQ&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;話を戻そう。&lt;/p&gt;
&lt;p&gt;Lolica TonicaはEyes on youのリリース後の2017年8月、&lt;a href=&#34;https://www.jreast.co.jp/press/2016/20170115.pdf&#34;&gt;JR東日本のキャンペーン&lt;/a&gt;CMを担当していた。すでにキャンペーンが終了してしまったかららだろうか、YouTubeからはCMは消されてしまっているが、カワFuture Bassではなく爽やかなガラージっぽい曲調だったので意外に思った記憶がある。また聴きたい。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;【TVCM】 JR東日本『新幹線YEAR2017「みんなでつくる新幹線 長野」篇』にて、CM映像BGMの作編曲をLolica Tonicaとして担当致しました。 なんと地上波でも順次放映予定らしいです。 &lt;a href=&#34;https://t.co/AgSXaTbPzf&#34;&gt;https://t.co/AgSXaTbPzf&lt;/a&gt;
— &lt;a href=&#34;https://twitter.com/ky7ieee/status/893099939689115648&#34;&gt;@ky7ieee&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;CM曲も担当し、今後ますます有名になっていくのかな、なんてぼんやり思っていたのだが、なんとこの一週間後に行われた2017年8月10日の&lt;a href=&#34;https://twitter.com/ageHa_Tokyo/status/895617669776326656&#34;&gt;【8.10 Thu. Anthem・MALTINE SEED BOX・GOODWEATHER × 異レギュラー】&lt;/a&gt;というイベントが実はLolica Tonicaとしてのラストライブであり、解散？休止？がアナウンスされたようだ。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Lolica Tonica 解散！？ &lt;a href=&#34;https://twitter.com/hashtag/Anthem_ageHa?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Anthem_ageHa&lt;/a&gt;&lt;/p&gt;&amp;mdash; mochilon/ロマンキャンセル柿本⚙ (@mochilon) &lt;a href=&#34;https://twitter.com/mochilon/status/895726652931559424?ref_src=twsrc%5Etfw&#34;&gt;August 10, 2017&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;え？Lolica Tonica解散するんですか&lt;/p&gt;&amp;mdash; Zekk (@zekk_wa_zetku) &lt;a href=&#34;https://twitter.com/zekk_wa_zetku/status/895733356419141634?ref_src=twsrc%5Etfw&#34;&gt;August 10, 2017&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;LolicaTonica 解散まじ！？！！？&lt;a href=&#34;https://twitter.com/hashtag/Anthem_ageHa?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Anthem_ageHa&lt;/a&gt;&lt;/p&gt;&amp;mdash; inotaku (@takkun0415) &lt;a href=&#34;https://twitter.com/takkun0415/status/895736471654506496?ref_src=twsrc%5Etfw&#34;&gt;August 10, 2017&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Lolica Tonica ラスト(らしい)見られて良かったー やはりかわいかった&lt;a href=&#34;https://twitter.com/hashtag/Antem_ageHa?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#Antem_ageHa&lt;/a&gt; &lt;a href=&#34;https://t.co/0fcJlEXAud&#34;&gt;pic.twitter.com/0fcJlEXAud&lt;/a&gt;&lt;/p&gt;&amp;mdash; 緑 (@turboiminashi) &lt;a href=&#34;https://twitter.com/turboiminashi/status/896378357629067264?ref_src=twsrc%5Etfw&#34;&gt;August 12, 2017&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;まさかこのタイミングで活動休止するとは思っていなかったのでまさに青天の霹靂だった。最初に言った通り、諦めの悪いことに定期的にTwitterを「Lolica Tonica」や「ロリカトニカ」で検索して何か出てこないか調べているが今の所目立った情報は見つからない。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;Lolica Tonicaが再活動する夢観て嬉しくて実際に号泣しながら起きてしまったけど夢だった&lt;/p&gt;&amp;mdash; yuigot (@ygt_jpn) &lt;a href=&#34;https://twitter.com/ygt_jpn/status/1042848788509949952?ref_src=twsrc%5Etfw&#34;&gt;September 20, 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;いきなりlolica tonica復活しないかな〜〜！！！俺が今聴きたいのは多分&lt;br&gt;lolica tonicaの音楽！！！！&lt;/p&gt;&amp;mdash; Surfclam (@Surfclam\__) &lt;a href=&#34;https://twitter.com/Surfclam__/status/1042848231107915776?ref_src=twsrc%5Etfw&#34;&gt;September 20, 2018&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;解散後、Ky7ie.はリミックスを行うなど活動をしているようだが(情報は少ない)、ヒイラギペイジに関してはトラックメイカーとしての曲提供もなく、2018年に入ってFacebookやTwitterのアカウント(@blue_shoegazer)も削除してしまったようで、悲しい限りだ。何か情報があれば教えて欲しい。&lt;/p&gt;
&lt;p&gt;音楽はヒイラギペイジにとっては「退屈しのぎ」、Ky7ie.にとっては「呪いのようなもの」だったと言うことだったのだが、もはや退屈や呪いから解放されてしまったのだろうか……？&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;ー 音楽とは自分にとって何なのか&lt;/p&gt;
&lt;p&gt;Page Hiiragi：退屈しのぎ。&lt;/p&gt;
&lt;p&gt;Ky7ie.：なくても生きていけるかもしれないけど、まともな人間として生きていける気が全然しない。&lt;br&gt;
自分という人間のあらゆる部分に染み付いてしまっているので、もう呪いのようなものかもしれません。&lt;br&gt;
&lt;a href=&#34;https://musicsneak.live/artists/lolica-tonica&#34;&gt;https://musicsneak.live/artists/lolica-tonica&lt;/a&gt;&lt;br&gt;
(現在は閲覧不能)&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;2020/8/3追記:&lt;/p&gt;
&lt;p&gt;コメント欄で教えてもらいましたが、3年半ぶりの新曲「Solid State」が3ヶ月限定でリリースされるようです! 教えてくださったNoVaLightさんありがとうございます。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;🔊 A N N O U N C E M E N T 🔊&lt;br&gt;&lt;br&gt;8.7 (Fri.) PDT 0:00 JST 16:00&lt;br&gt;&lt;br&gt;⚡️New release⚡️&lt;br&gt;Lolica Tonica - Solid State&lt;br&gt;&lt;br&gt;💝All the proceeds from this track will be donated to &lt;a href=&#34;https://twitter.com/clubasia_tokyo?ref_src=twsrc%5Etfw&#34;&gt;@clubasia_tokyo&lt;/a&gt; .&lt;br&gt;&lt;br&gt;⚠️ Limited sale for 3 months on Bandcamp 🏕&lt;br&gt;&lt;br&gt;🔜 &lt;a href=&#34;https://t.co/N1BFUi8CYT&#34;&gt;https://t.co/N1BFUi8CYT&lt;/a&gt; 👈 👀&lt;a href=&#34;https://twitter.com/hashtag/lolica_tonica?src=hash&amp;amp;ref_src=twsrc%5Etfw&#34;&gt;#lolica_tonica&lt;/a&gt; &lt;a href=&#34;https://t.co/AJFSv3lcCt&#34;&gt;pic.twitter.com/AJFSv3lcCt&lt;/a&gt;&lt;/p&gt;&amp;mdash; Lolica Tonica 🔊 8.7 NEW RELEASE (@LolicaTonica) &lt;a href=&#34;https://twitter.com/LolicaTonica/status/1290225954640470017?ref_src=twsrc%5Etfw&#34;&gt;August 3, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;📣NEWS📣｜&lt;a href=&#34;https://twitter.com/LolicaTonica?ref_src=twsrc%5Etfw&#34;&gt;@LolicaTonica&lt;/a&gt;&lt;br&gt;&lt;br&gt;&amp;quot;Ky7ie.&amp;quot;と&amp;quot;Page Hiiragi&amp;quot;による𝗟𝗼𝗹𝗶𝗰𝗮 𝗧𝗼𝗻𝗶𝗰𝗮が3年半ぶりの新曲「Solid State」をclubasia支援として3ヶ月限定リリース🎉Artworkは過去作品も手掛けた&amp;quot;rei nakanishi&amp;quot;✍️収益は全額寄付のご協力を頂きました🙇‍♂️&lt;br&gt;&lt;br&gt;2020.8.7 16:00 Sale!!&lt;br&gt;🔜&lt;a href=&#34;https://t.co/cd9kRDc8bf&#34;&gt;https://t.co/cd9kRDc8bf&lt;/a&gt; &lt;a href=&#34;https://t.co/hfN9JNr1Jv&#34;&gt;pic.twitter.com/hfN9JNr1Jv&lt;/a&gt;&lt;/p&gt;&amp;mdash; スー (@ShowSuzuki) &lt;a href=&#34;https://twitter.com/ShowSuzuki/status/1290225941579313152?ref_src=twsrc%5Etfw&#34;&gt;August 3, 2020&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; 
&lt;iframe style=&#34;border: 0; width: 100%; height: 120px;&#34; src=&#34;https://bandcamp.com/EmbeddedPlayer/track=2240396323/size=large/bgcol=ffffff/linkcol=0687f5/tracklist=false/artwork=small/transparent=true/&#34; seamless&gt;&lt;a href=&#34;http://clubasia.bandcamp.com/track/solid-state&#34;&gt;Solid State by Lolica Tonica&lt;/a&gt;&lt;/iframe&gt;
&lt;hr&gt;
&lt;p&gt;2021/03/17追記:&lt;/p&gt;
&lt;p&gt;Henrik The Artist - Peddi Max (Lolica Tonica Remix)のリミックスを見つけた。&lt;/p&gt;
&lt;p&gt;brutshits01 - Henrik The Artist - Peddi Max (Lolica Tonica Remix) [hallycore Flip]&lt;/p&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/748657048&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/brutshits&#34; title=&#34;brutshits&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;brutshits&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/brutshits/brutshits01-henrik-the-artist-peddi-max-lolica-tonica-remix-hallycore-flip-hallycore&#34; title=&#34;brutshits01 - Henrik The Artist - Peddi Max (Lolica Tonica Remix) [hallycore Flip]&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;brutshits01 - Henrik The Artist - Peddi Max (Lolica Tonica Remix) [hallycore Flip]&lt;/a&gt;&lt;/div&gt;
&lt;p&gt;祝、再始動。楽しみですね。&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;en&#34; dir=&#34;ltr&#34;&gt;TL;DR&lt;br&gt;&lt;br&gt;We’re in the process of making our first album.&lt;br&gt;&lt;br&gt;yay 😎🙌 &lt;a href=&#34;https://t.co/MobTysfRFK&#34;&gt;https://t.co/MobTysfRFK&lt;/a&gt;&lt;/p&gt;&amp;mdash; Lolica Tonica (@LolicaTonica) &lt;a href=&#34;https://twitter.com/LolicaTonica/status/1364551305096613894?ref_src=twsrc%5Etfw&#34;&gt;February 24, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; 
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/991829080&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/lolicatonica&#34; title=&#34;Lolica Tonica&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Lolica Tonica&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/lolicatonica/goku-vibes-lolica-tonica-remix&#34; title=&#34;GOKU VIBES (Lolica Tonica Remix)&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;GOKU VIBES (Lolica Tonica Remix)&lt;/a&gt;&lt;/div&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1005495679&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/lolicatonica&#34; title=&#34;Lolica Tonica&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Lolica Tonica&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/lolicatonica/neon-light-lolica-tonica-edit&#34; title=&#34;TEMPLIME feat. 星宮とと - ネオンライト(Lolica Tonica EDIT)&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;TEMPLIME feat. 星宮とと - ネオンライト(Lolica Tonica EDIT)&lt;/a&gt;&lt;/div&gt;
&lt;iframe width=&#34;100%&#34; height=&#34;166&#34; scrolling=&#34;no&#34; frameborder=&#34;no&#34; allow=&#34;autoplay&#34; src=&#34;https://w.soundcloud.com/player/?url=https%3A//api.soundcloud.com/tracks/1008960526&amp;color=%23ff5500&amp;auto_play=false&amp;hide_related=false&amp;show_comments=true&amp;show_user=true&amp;show_reposts=false&amp;show_teaser=true&#34;&gt;&lt;/iframe&gt;&lt;div style=&#34;font-size: 10px; color: #cccccc;line-break: anywhere;word-break: normal;overflow: hidden;white-space: nowrap;text-overflow: ellipsis; font-family: Interstate,Lucida Grande,Lucida Sans Unicode,Lucida Sans,Garuda,Verdana,Tahoma,sans-serif;font-weight: 100;&#34;&gt;&lt;a href=&#34;https://soundcloud.com/lolicatonica&#34; title=&#34;Lolica Tonica&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;Lolica Tonica&lt;/a&gt; · &lt;a href=&#34;https://soundcloud.com/lolicatonica/all-night-lolica-tonica-remix&#34; title=&#34;all night (Lolica Tonica Remix)&#34; target=&#34;_blank&#34; style=&#34;color: #cccccc; text-decoration: none;&#34;&gt;all night (Lolica Tonica Remix)&lt;/a&gt;&lt;/div&gt;
&lt;hr&gt;
&lt;p&gt;次はヒイラギペイジのLolica Tonica前のPAGE, TemoTemoe名義での活動や、他のアーティストへの提供曲について書きたいと思う。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ブルックリンのレコードショップ</title>
      <link>https://matsueushi.github.io/posts/blooklyn-record-store/</link>
      <pubDate>Sun, 14 Oct 2018 16:47:50 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/blooklyn-record-store/</guid>
      <description>&lt;p&gt;前回の&lt;a href=&#34;../manhattan-record-store/&#34;&gt;マンハッタン編&lt;/a&gt;に引き続き、今回はブルックリン編。&lt;/p&gt;
&lt;p&gt;マンハッタンよりもブルックリンの方がCDが置いてある店が少なく、レコードメイン。
また、こっちの方が若者向けの店が多く活気がある印象で、ロックとかエレクトロニカなどが強い気がする。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;academy-records-annex&#34;&gt;Academy Records Annex&lt;/h2&gt;
&lt;p&gt;アカデミーレコードのブルックリン店。
ブルックリンのレコード屋のなかで一押し。広くて綺麗で安い。&lt;/p&gt;
&lt;p&gt;置いてあるボリュームが相当あるので、嬉しいことに、自分の好きなジャンルの棚をじっくり見ようとすると相当な時間がかかる。&lt;/p&gt;
&lt;p&gt;テクノとかエレクトロニカとかハウスとかディスコとかの、ロック以外もジャンル関わらず充実しているような印象を受けた。
ライブラリーミュージックとかプライベートプレスとかマニアなジャンルも隅の方にあり、見ていて飽きない。&lt;/p&gt;
&lt;p&gt;店内奥の壁際の方に少しだけCDの取扱いがあるが、あまり流行っていない感じ。&lt;/p&gt;
&lt;p&gt;85 Oak St&lt;br&gt;
Brooklyn, NY 11222&lt;br&gt;
&lt;a href=&#34;https://academy-lps.com/&#34;&gt;https://academy-lps.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/academy-records-annex-brooklyn-2&#34;&gt;https://www.yelp.com/biz/academy-records-annex-brooklyn-2&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;rough-trade-nyc&#34;&gt;Rough Trade NYC&lt;/h2&gt;
&lt;p&gt;ブルックリンのEast River State Park近くにある。&lt;/p&gt;
&lt;p&gt;スタイリッシュで入りやすい雰囲気で、自分が立ち寄った時は若い人も多く活気がある。店内はとても広く、
置いてある新品LPはかなりの量があり、メジャー寄りのラインナップであるような印象。&lt;/p&gt;
&lt;p&gt;ニューリリースの取扱いは手厚く、各レーベルのアーティスト紹介のブースもあって新しいアーティストを追いかけたいならオススメ。
隅の方に少しだけ中古LPの取り扱いがあり、あまりよく見てませんが珍しそうなものもちょこちょこ混ざっていた。
ブルックリンでは珍しく、CDの品揃えも充実していてなかなかマニアなものも置いてあった。&lt;/p&gt;
&lt;p&gt;二階には音楽やアート関係の本と、なぜか卓球台が置いてある。&lt;/p&gt;
&lt;p&gt;64 N 9th St&lt;br&gt;
Williamsburg, NY 11249&lt;br&gt;
&lt;a href=&#34;https://www.roughtrade.com/us&#34;&gt;https://www.roughtrade.com/us&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/rough-trade-nyc-williamsburg&#34;&gt;https://www.yelp.com/biz/rough-trade-nyc-williamsburg&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;captured-tracks-shop&#34;&gt;Captured Tracks Shop&lt;/h2&gt;
&lt;p&gt;ブルックリンのGreenpoint Av駅近くにある、レコードレーベルCaptured Tracksの直営店です。階段を降りて半地下みたいな空間に店がある。&lt;/p&gt;
&lt;p&gt;Captured Tracksに所属しているアーティストをはじめとしたインディー系の新譜の品揃えが魅力で、
所属しているアーティストはLPだけでなく、カセットテープも置いてある。CDの取扱いはない。
幅広く中古も取り揃えてあり、棚の上の方においてあるレア盤のジャケットを眺めるのも楽しい。&lt;/p&gt;
&lt;p&gt;195 Calyer St&lt;br&gt;
Brooklyn, NY 11222&lt;br&gt;
&lt;a href=&#34;https://capturedtracks.com/&#34;&gt;https://capturedtracks.com/&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.omnianmusicgroup.com/collections/captured-tracks&#34;&gt;https://www.omnianmusicgroup.com/collections/captured-tracks&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/captured-tracks-shop-brooklyn&#34;&gt;https://www.yelp.com/biz/captured-tracks-shop-brooklyn&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;record-grouch&#34;&gt;Record Grouch&lt;/h2&gt;
&lt;p&gt;こちらもGreepoint駅近くにある。レコードのみ。&lt;/p&gt;
&lt;p&gt;インディー系、ポストパンク・ニューウェイブ、エレクトロニカの新譜の品揃えがかなり充実していた。
行った時は客がかなり入っていて店員と楽しそうに談笑していて活気があるお店だった（私は会話に参加していませんでしたが……）&lt;/p&gt;
&lt;p&gt;986 Manhattan Ave&lt;br&gt;
Brooklyn, NY 11222&lt;br&gt;
&lt;a href=&#34;http://recordgrouch.com/&#34;&gt;http://recordgrouch.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/record-grouch-brooklyn?osq=Record+Grouch&#34;&gt;https://www.yelp.com/biz/record-grouch-brooklyn?osq=Record+Grouch&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;co-op-87-records&#34;&gt;Co-op 87 Records&lt;/h2&gt;
&lt;p&gt;ブルックリンのNassau Av駅近くにある。レコードのみ。&lt;/p&gt;
&lt;p&gt;入口が狭かったりすれ違うのが難しいようなこじんまりとしたレコードショップだけどモダンで綺麗な佇まいで、価格も手頃な物が多い。
支払いの時にキャッシュオンリーと言われたことがあったので、現金を持っていった方が良い。&lt;/p&gt;
&lt;p&gt;87 Guernsey St&lt;br&gt;
Brooklyn, NY 11222&lt;br&gt;
&lt;a href=&#34;https://www.facebook.com/pages/Co-Op-87-Records/175415712526474&#34;&gt;https://www.facebook.com/pages/Co-Op-87-Records/175415712526474&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/co-op-87-records-brooklyn&#34;&gt;https://www.yelp.com/biz/co-op-87-records-brooklyn&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 2019/6/2追記 :
Facebookがリダイレクトされていたので移転したかもしれない。&lt;br&gt;
&lt;a href=&#34;https://www.brooklynrecordexchange.com/&#34;&gt;https://www.brooklynrecordexchange.com/&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://www.facebook.com/bkrecordexchange/&#34;&gt;https://www.facebook.com/bkrecordexchange/&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;normans-sound-and-vision-records&#34;&gt;Norman’s Sound and Vision Records&lt;/h2&gt;
&lt;p&gt;ブルックリンのMetropolitan Av 駅から少し坂を登った左手にある。GoogleMapで検索しても出てこなくなったけど閉鎖したのかな？&lt;/p&gt;
&lt;p&gt;昔ながらのレコード屋という感じで所狭しとレコードが積み上がっている。ジャンルはヒップホップとかロックが多く、
他のジャンルは少なかった。ジャンル分けや整理は他のレコード屋に比べてちょっといい加減かも。&lt;/p&gt;
&lt;p&gt;店員はわざわざ何か探しているか声をかけてくれて親切。&lt;/p&gt;
&lt;p&gt;555 Metropolitan Ave&lt;br&gt;
Brooklyn, NY 11211&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/normans-sound-and-vision-brooklyn&#34;&gt;https://www.yelp.com/biz/normans-sound-and-vision-brooklyn&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;second-hand-records-nyc&#34;&gt;Second Hand Records NYC&lt;/h2&gt;
&lt;p&gt;Myrtle駅近くにあるレコードショップ。入口がちょっと自分には分かりづらかったです。レコードオンリーかな。&lt;/p&gt;
&lt;p&gt;ディスコとかハウスとかジャズとかソウルとかが多めかな？居心地もよく、地元ブルックリンのアーティストのミニコーナーもあって見ていて楽しい。&lt;/p&gt;
&lt;p&gt;1165 Myrtle Ave&lt;br&gt;
Brooklyn, NY 11206&lt;br&gt;
&lt;a href=&#34;http://www.secondhandrecordsnyc.com/&#34;&gt;http://www.secondhandrecordsnyc.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/second-hand-records-nyc-brooklyn&#34;&gt;https://www.yelp.com/biz/second-hand-records-nyc-brooklyn&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;(2019/4/18追記)&lt;/p&gt;
&lt;h2 id=&#34;the-thing&#34;&gt;The Thing&lt;/h2&gt;
&lt;p&gt;リサイクルショップなのだが、奥の方に山のようにレコードが置いてあり、さらに地下には山のようなストックがあって圧倒される。
ジャンル別やアルファベット順になっておらず様々な種類のレコードがごちゃ混ぜに置いてあってカオスだが、ゴチャゴチャ度も良いものである。
埃まみれになっているレコードが多く真剣に見ていると手が汚れるのでウエットティッシュがあるといいかもしれない。(あとは、お気に入りの服を着ていかないとか)&lt;/p&gt;
&lt;p&gt;レコードは状態が悪いものもあるが、1枚$2と格安。CDは$3だった。&lt;/p&gt;
&lt;p&gt;カセットとかCDとか昔の雑誌とかVHSとか、レトロな商品が満載で面白いお店である。&lt;/p&gt;
&lt;p&gt;1001 Manhattan Ave&lt;br&gt;
Brooklyn, NY 11222&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/the-thing-brooklyn&#34;&gt;https://www.yelp.com/biz/the-thing-brooklyn&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>マンハッタンのレコードショップ</title>
      <link>https://matsueushi.github.io/posts/manhattan-record-store/</link>
      <pubDate>Sun, 14 Oct 2018 15:51:19 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/manhattan-record-store/</guid>
      <description>&lt;p&gt;今ニューヨークで暮らしていて、交友関係が皆無に近く旅行もそれほど好きではないのでレコードショップを巡っているので、
自分用まとめも兼ねて今まで行ったレコードショップをまとめたいと思う。&lt;/p&gt;
&lt;p&gt;もともと日本でCDをちょくちょく購入していたが、マンハッタンやブルックリンだとCDはそもそもショップで扱っていないところも多く、
置かれていても棚を眺めている人や購入している人は少なく、商品はあまり入れ替わっていないように感じる（クラシックだとまだ少し残っている印象はありますが)。
そのためCDという媒体に活気があまりないため、レコードプレイヤーを買ってレコードを見るようにした。&lt;/p&gt;
&lt;p&gt;新品LPの標準的な価格は20ドルくらいで日本よりもだいぶ安く、中古に至っては10ドルしないことが多い（クリアランスだと1ドルとかで置いてあったりする)。
食べ物とか他の物価が高いことを考えると気楽にレコードが買えるような価格設定だと思う。&lt;/p&gt;
&lt;p&gt;新規開拓したら随時更新したいと思う。順番は適当です。&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;generation-records&#34;&gt;Generation Records&lt;/h2&gt;
&lt;p&gt;Bleecker St駅、Houston Street Station駅から等距離くらいかな？少し歩く。&lt;/p&gt;
&lt;p&gt;綺麗にジャンルごとに分かれて整理されていて見やすく、取り扱いのジャンルや量も豊富で、価格も手頃。
僕が訪れた時は平日夜にも関わらず賑わっていて、土日に行った時も幅広い年齢層の人が集まっていた。
一階と地下に分かれていて、一階はロック系の新譜・中古の取り扱いが充実し、
階段を降りて地下に入っていくとヒップホップとかソウルとかディスコとかサウンドトラックとかが揃っている。
（最初入って行く時ちょっと勇気必要だったけど……）&lt;/p&gt;
&lt;p&gt;この店は珍しく中古CDがそれなりの量置いてあり、カセットやポスターの取り扱いもされている。&lt;/p&gt;
&lt;p&gt;210 Thompson St&lt;br&gt;
New York, NY 10012&lt;br&gt;
&lt;a href=&#34;http://www.generationrecordsnyc.com/generation/generation.html&#34;&gt;http://www.generationrecordsnyc.com/generation/generation.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/generation-records-new-york&#34;&gt;https://www.yelp.com/biz/generation-records-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;academy-records--cds&#34;&gt;Academy Records &amp;amp; CDs&lt;/h2&gt;
&lt;p&gt;23th St駅で降りて少し下って18th St, 5Avと6Avの間にある。
似た名前のAcademy Recordsというのがマンハッタンとブルックリンにあるが、ホームページが異なるので多分系列店ではないはず。&lt;/p&gt;
&lt;p&gt;クラシックやジャズのCD、LPが他のショップに比べ充実しているのが特徴で、お客さんの年齢層も若干高め。
珍しくCDがしっかりと（レコードの隅に追いやられるような形ではなく）陳列されているお店。
佇まいとしては日本のディスクユニオンのクラシック館のような雰囲気。&lt;/p&gt;
&lt;p&gt;12 W 18th St&lt;br&gt;
New York, NY 10011&lt;br&gt;
&lt;a href=&#34;http://academy-records.com/&#34;&gt;http://academy-records.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/academy-records-and-cds-new-york&#34;&gt;https://www.yelp.com/biz/academy-records-and-cds-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;academy-records-マンハッタン店&#34;&gt;Academy Records (マンハッタン店)&lt;/h2&gt;
&lt;p&gt;1st Av駅から近い。レコードのみ。ブルックリンに姉妹店があり、自分の中では広さや品揃えの点でこちらが支店で、ブルックリンが本店という印象。&lt;/p&gt;
&lt;p&gt;ブルックリン店よりも店内は小さく、ジャズとか古いロックとかクラシックの取り扱いが多い。
ロックとかディスコとかヒップホップとかエレクトロニカとかはブルックリンの方が充実していて、
マンハッタンとブルックリンの店でジャンルの住み分けをしていると思われる。&lt;/p&gt;
&lt;p&gt;415 E 12th St&lt;br&gt;
New York, NY 10009&lt;br&gt;
&lt;a href=&#34;https://academy-lps.com/&#34;&gt;https://academy-lps.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/academy-records-new-york&#34;&gt;https://www.yelp.com/biz/academy-records-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;bookoff&#34;&gt;Bookoff&lt;/h2&gt;
&lt;p&gt;45th St、5Avと6Avの間にあり立地はかなり良く、日本のブックオフとほとんど同じような感じで音楽以外にも本やらゲームやらDVDやら電化製品やら色々扱っていて、日本語の本や漫画が置いてあるフロアがある。&lt;/p&gt;
&lt;p&gt;音楽に関してはCDの取り扱いのみでレコードの取り扱いはないはず。CDの取り扱いに関してはニューヨーク、マンハッタン通して一番あるような気もする。
ただ、日本のブックオフ同様、陳列されているものがあまり選別されていない印象を受け、掘り出し物を見つけたいなら根気よく探す必要がある。&lt;/p&gt;
&lt;p&gt;日本のアーティストだけは抽出されて別のコーナーに配置されていたはず。最近の流行曲のCDはほぼなく、
仕事でニューヨークに来た日本人が日本から持って来たけど売ったと思われる過去のヒット曲のCDがたくさん置いてあるので眺めているとなんだか懐かしい気持ちになる。&lt;/p&gt;
&lt;p&gt;49 W 45th St&lt;br&gt;
New York, NY 10036&lt;br&gt;
&lt;a href=&#34;https://www.bookoffusa.com/&#34;&gt;https://www.bookoffusa.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/book-off-new-york&#34;&gt;https://www.yelp.com/biz/book-off-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;limited-to-one-record-shop&#34;&gt;Limited to One Record Shop&lt;/h2&gt;
&lt;p&gt;コンパクトだが店内の雰囲気も置いてあるものもこだわりが感じられるお洒落な店。&lt;/p&gt;
&lt;p&gt;置いてある物はレアもの(廃盤、ファーストプレスなど)などが非常に多く厳選されている印象で、レコードのセレクトショップと言ったら良いだろうか。
レコードの扱いは丁寧で全て綺麗にビニールに包まれている。眺めてみたところコレクター商品が多いだけあって値段の方はお高めだが、珍しいものに巡りあえるかも。&lt;/p&gt;
&lt;p&gt;221 E 10th St&lt;br&gt;
New York, NY 10003&lt;br&gt;
&lt;a href=&#34;https://www.limitedtooneshop.com/&#34;&gt;https://www.limitedtooneshop.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/limited-to-one-record-shop-new-york?osq=limited+one&#34;&gt;https://www.yelp.com/biz/limited-to-one-record-shop-new-york?osq=limited+one&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;a1-records&#34;&gt;A1 Records&lt;/h2&gt;
&lt;p&gt;Academy Recordsから少し南下したところにある。レコードオンリー。&lt;/p&gt;
&lt;p&gt;歴史あるレコード屋という雰囲気で趣がある。&lt;/p&gt;
&lt;p&gt;ロック、ソウル、ファンク、ヒップホップ、ディスコ、エレクトロニカ、それぞれのジャンルで相当な品揃えがあり、
店の広さもそれなりにある上、棚にレコードがぎっしり詰め込まれているのでいくら時間があっても足りない。&lt;/p&gt;
&lt;p&gt;439 E 6th St&lt;br&gt;
New York, NY 10009&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/a1-records-new-york&#34;&gt;https://www.yelp.com/biz/a1-records-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;good-records-nyc&#34;&gt;Good Records NYC&lt;/h2&gt;
&lt;p&gt;Astor Pl駅が最寄駅。洗練された雰囲気の小さなお店です。&lt;/p&gt;
&lt;p&gt;扱いはレコードのみで、ソウル、ジャズ系の品揃えが良い気がする。値段は少し他の店より高めなんですが、品揃えが独特というか、あまり他で見たことないような珍しい感じのものが多くストックされていて、再訪したくなる良い店。&lt;/p&gt;
&lt;p&gt;218 E 5th St&lt;br&gt;
New York, NY 10003&lt;br&gt;
&lt;a href=&#34;https://goodrecordsnyc.com/&#34;&gt;https://goodrecordsnyc.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;-&amp;gt; 2019/6/2追記:
閉店して Stranded Recordsに変わったようです。&lt;/p&gt;
&lt;p&gt;Good Records Closing In East Village, Stranded Records Taking Over
&lt;a href=&#34;http://gothamist.com/2019/03/11/good_records_east_village_closing.php&#34;&gt;http://gothamist.com/2019/03/11/good_records_east_village_closing.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/stranded-records-nyc-new-york&#34;&gt;https://www.yelp.com/biz/stranded-records-nyc-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;house-of-oldies-rare-records&#34;&gt;House of Oldies Rare Records&lt;/h2&gt;
&lt;p&gt;おじいちゃんとおばあちゃんが二人で経営しているのでしょうか、相当昔からやっているんだろうなというビンテージ感のある店。&lt;/p&gt;
&lt;p&gt;通路ですれ違うのもやっとこさというぐらいの小さい店なのですが、ギッシリと詰め込まれたレコードの密度に圧倒。
壁に大量にストックされている7インチは売り物でしょうか……聞けず。50~70sのロックの品揃えが多かった。
Rare Recordsと名前を冠しているだけあり、値段は$20~の物が多く高め。&lt;/p&gt;
&lt;p&gt;35 Carmine St&lt;br&gt;
New York, NY 10014&lt;br&gt;
&lt;a href=&#34;http://www.houseofoldies.com/&#34;&gt;http://www.houseofoldies.com/&lt;/a&gt;
&lt;a href=&#34;http://www.houseofoldies.com/about.html&#34;&gt;http://www.houseofoldies.com/about.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/house-of-oldies-new-york&#34;&gt;https://www.yelp.com/biz/house-of-oldies-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;westsider-records&#34;&gt;Westsider Records&lt;/h2&gt;
&lt;p&gt;珍しくアッパーウェストにあるレコード屋。
記事に出てくるレコード屋の中で一番歴史があるのではないだろうか、中に入るとタイムスリップしたかのような古さ・埃っぽさがあった。&lt;/p&gt;
&lt;p&gt;クラシックとかジャズのLP/CDが山ほどあり、あとは戯曲の脚本もたくさん置いてあり珍しい趣向。&lt;/p&gt;
&lt;p&gt;233 W 72nd St&lt;br&gt;
New York, NY 10023&lt;br&gt;
&lt;a href=&#34;http://westsiderrecords.com/&#34;&gt;http://westsiderrecords.com/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/westsider-records-new-york&#34;&gt;https://www.yelp.com/biz/westsider-records-new-york&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id=&#34;village-music-world&#34;&gt;Village Music World&lt;/h2&gt;
&lt;p&gt;店員さんはかなり親切で店に入ったら話しかけてくれた。わりとオーソドックスなロックとかジャズの品揃えが多かったような……&lt;/p&gt;
&lt;p&gt;197 Bleecker St&lt;br&gt;
New York, NY 10012&lt;/p&gt;
&lt;p&gt;Yelp : &lt;a href=&#34;https://www.yelp.com/biz/village-music-world-new-york&#34;&gt;https://www.yelp.com/biz/village-music-world-new-york&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Black Dog Productions - Bytes (1993)</title>
      <link>https://matsueushi.github.io/posts/bdp-bytes/</link>
      <pubDate>Wed, 19 Oct 2016 00:25:56 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/bdp-bytes/</guid>
      <description>&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;450&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/us/album/bytes/260885119?app=music&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;カッチリした硬質のビートが刻む複雑なリズム、ひんやりとしたメロディ。簡潔でミニマルだが、隙のないほどに知的なテクノだと思う。&lt;/p&gt;
&lt;p&gt;90年代のアナログ感満載のちょっとこもった感じの音もどこか懐かしい。&lt;/p&gt;
&lt;p&gt;アルバムの中でも、冒頭曲Object Orientの畳み掛けるような性急なリズム、奇妙な展開は特にお気に入りだ。&lt;/p&gt;
&lt;p&gt;聞いていると頭にビートが染み込み、電子の海を漂っているような気分になる素晴らしい一枚。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>BOaT - RORO (2001)</title>
      <link>https://matsueushi.github.io/posts/boat-roro/</link>
      <pubDate>Wed, 10 Aug 2016 00:21:13 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/boat-roro/</guid>
      <description>&lt;iframe style=&#34;border-radius:12px&#34; src=&#34;https://open.spotify.com/embed/album/11DJJZAeLQh8fjzyXhpf7v?utm_source=generator&#34; width=&#34;100%&#34; height=&#34;380&#34; frameBorder=&#34;0&#34; allowfullscreen=&#34;&#34; allow=&#34;autoplay; clipboard-write; encrypted-media; fullscreen; picture-in-picture&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;最近はすっかり暑くなってきていよいよ夏本番という気がするが、この季節になるとBOaTを聴きたくなる。&lt;/p&gt;
&lt;p&gt;2001年に解散した後相当時間が経ってからバンドを知ったのでリアルタイムにリリースやライブを体験することはできなかったが、マイフェイバリット邦楽バンドTOP3に必ずランクインするほど好きなバンドだ。もしタイムマシンを1回だけ使うことができて好きなバンドの解散ライブを見ることができたらおそらくBOaTの解散ライブに行くだろう。
 &lt;/p&gt;
&lt;p&gt;マイナーバンドなので好きなバンドを聞かれた時にBOaTの名前は基本的に出さないけども、酔っ払って気分が良くなっているときには、ふーんそうなんだ、聞いたことないけど、と言われるのを承知で喋ってしまう。&lt;/p&gt;
&lt;p&gt;BOaTが残した音源は少ない。オリジナルアルバム4枚(フルーツ☆リー、SOUL.THRASH.TRAIN、LISTENING SUICIDAL、RORO)とシングル数枚、コンピレーションに提供した曲ぐらいだ。どれも素晴らしいのだが、その中でもラストアルバムであるROROは一際輝く屈指の名作である。&lt;/p&gt;
&lt;p&gt;3枚目までのポップでファンキーなミクスチャーロック路線とは大きく変わり、3枚目のLISTENING SUICIDALに見え隠れしていたプログレ方面のアプローチが進化し、曲は長く、シリアスで叙情的になっている。&lt;/p&gt;
&lt;p&gt;夏の到来を告げるようなオーガニックな雰囲気を漂わせながら一曲目のAllが始まる。気分がゆっくりと高まってきていつの間にかROROの奇妙でポップ、そしてエモーショナルな世界観に引き込まれている。&lt;/p&gt;
&lt;p&gt;Akiramujinaはインスト曲で、ギターロック系の轟音ポストロックといった雰囲気。混沌かつ清冽な音がうねりながら変化していって、テンション高く暴れまわるギターとポップなメロディの融合が織りなすサウンドスケープには胸打たれる。&lt;/p&gt;
&lt;p&gt;そして続くRoots Of Summerは繰り返されるサビが聞いてて心地よく、爽やかかつめちゃくちゃポップな胸キュン曲。途中まで溜めて溜めてサビのところで一気に爆発してポップになる感じ、白熱するテンション、絶妙なバランスで絡みつくツインボーカルがスーパーエモーショナルで思わず歌い出しそうになる。「アキラムジナ吸って　夏を裏付けた」というどういうことか良くわからない歌詞も頭に残って印象的。何よりも、アインのキュートなボーカルが特徴的な、ラストで繰り返されるサビで味わう高揚感が最高だ。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/tO4bYyrrXWU&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Rummy Nightは前作LISTENING SUICIDAL (こちらのアルバムも名盤である) の初回限定版8cmに収録されているNIGHT HAWK NIGHTがさらに進化したようなポストロック風味の曲で、夜の静謐さが徐々に混沌へと変わっていくような印象で、美しくサイケデリックだ。&lt;/p&gt;
&lt;p&gt;Tuesdayは長尺のプログレ調のインスト曲。2曲めのAkiramujinaもその点は共通するが、Akiramujinaがだんだんとテンションが上がって高揚していくような盛り上がり方をするのとは対照的に、Tuesdayは聞いているうちに、より深く、自分の内面に染み渡っていくような昂りを覚える。特に、曲の半ばで一旦静けさを取り戻してからの後半部分の盛り上がりが神懸かっていて、無情感とか喪失感とか寂寥感とか、夏の終わりに伴う感情がごちゃまぜになって押し寄せてくる。ROROを聞いているときの精神的な盛り上がりのピークはTuesdayの後半で間違いないと思う。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/hVwCoFAT0wY&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Circle Soundはアルバムのラストを締めくくるポップチューン。イントロのトゥルトゥトゥトゥル〜ですでに最高なんだけど、揺らめくようなAメロ、Bメロから突入するテンション爆上がりのサビ、途中のギターソロも涙が出そうなほどカッコ良く、花火がパッと打ち上がって終わるような余韻で終わるところも好きだ。Listen to the light and don&amp;rsquo;t forgetという歌詞もお気に入りで、blogのタイトルはここから取っている。&lt;/p&gt;
&lt;p&gt;このアルバムには初めは大人しめのムードで始まって徐々に気持ちを盛り上げるタイプの曲が多いが、全ての曲の盛り上げ方が自然でいつの間にか気持ちよくなっているのが不思議だ。うまく言葉にできないが、聞いてると妙にノスタルジックな気分になるというか、自分の奥深くの内面が揺れ動く気がする。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/WJBeFy3VcgY&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;Allで始まりCircle Soundで終わる、アルバムの中に夏の始まりから終わりがギュッと閉じ込められていて一つの流れになっている。僕の中で夏を裏付けるアルバムと言えばまさにこれであり、初めて聞いた時から何年も経っているが未だによく聞くアルバムでその度に良さを確認している。&lt;/p&gt;
&lt;p&gt;一つ悲しいことは、BOaT関連のCDが軒並み廃盤になっているのでこのアルバムに出会いづらいということだ。&lt;/p&gt;
&lt;p&gt;フルーツ☆リーとソウルスラッシュトレインに関してはAmazonマーケットプレイスで1000〜2000円ぐらいで買えるし、Apple MusicやiTunes Storeで聴けるのでハードルはそれほど高くない。&lt;/p&gt;
&lt;p&gt;LISTENING SUICIDALや(肝心の)ROROは、iTunesには無いので渋谷TSUTAYAやジャニスなどに借りに行くか、高い(ROROだと5000円〜ぐらい)がマケプレやディスクユニオンで買うしか無いと思われるのでちょっと大変。しかし、音楽好きならばコストや手間を払ってまで聞く価値があると思うし、その中でも特にROROは奇跡を感じるアルバムだと思う。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;All&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Akiramujina&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Roots Of Summer&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Rummy Night&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Tuesday&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Circle Sound&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;2020/08/30追記:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://matsueushi.github.io/other/boat/&#34;&gt;BOaT まとめ&lt;/a&gt; を作りました。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2022/07/18追記：&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;BOATのROROがリリースされて本日で丸20年。ROROが成人(人じゃないけど)とAxSxEさんに連絡したら興奮気味の返事来たる。部屋にROROのアナログ盤を20年も飾り続けている事になるのだな。NATSUMENのライヴが観たいですと伝えました。またブッキングしたい。 &lt;a href=&#34;https://t.co/LT9e3Myk9Q&#34;&gt;pic.twitter.com/LT9e3Myk9Q&lt;/a&gt;&lt;/p&gt;&amp;mdash; 佐藤則之 (@rideononon) &lt;a href=&#34;https://twitter.com/rideononon/status/1380909845721673729?ref_src=twsrc%5Etfw&#34;&gt;April 10, 2021&lt;/a&gt;&lt;/blockquote&gt; &lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt; 
&lt;p&gt;再発願う！&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2022/8追記:
BOaT「RORO」など3作をワーナーミュージックがサブスク解禁
&lt;a href=&#34;https://natalie.mu/music/news/489185&#34;&gt;https://natalie.mu/music/news/489185&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;サブスク解禁されました。みんな聴きましょう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>挫・人間 - テレポート・ミュージック (2015)</title>
      <link>https://matsueushi.github.io/posts/zaningen-teleport/</link>
      <pubDate>Sun, 31 Jul 2016 00:16:07 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/zaningen-teleport/</guid>
      <description>&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;450&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/us/album/teleport-itunes/1029029852?app=music&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;挫・人間の2ndアルバム、テレポート・ミュージック。
僕が良くやりがちなパターンなのですが、いろいろ聴きたい音楽を調べているうちにYouTubeで「セルアウト禅問答」のPVを見てフォーリンラブ、Apple Musicで一聴してすぐCD買った。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/eZ4JJc7ak5U&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;歌詞に出てくる「ナゴムの遺伝子」だとか「グミチョコ」だとか「美術館で会った人です」だとかラノベっぽいタイトルのM5「可愛い転校生に告白されて付き合おうと思ったら彼女はなんと狐娘だったので人間のぼくが幸せについて本気出して考えてみた」とかちょくちょく入れ込んでくるサブカル感、そしてアルバムに共通する自意識過剰をこじらせてしまったタイプの妄想的な世界観、引きこもりサブカルこじらせタイプ（僕）は強烈なシンパシーを感じてしまった。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/dcJGK3uRJQw&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;ストレートに無条件に「アイラブユー」と言いたい自分自身の愛情表現と、それを冷静に見つめる超自我的の二つが葛藤を繰り返す自意識のぶつかり合い。&lt;/p&gt;
&lt;p&gt;ラップバトルっぽい「下川 vs 世間」では自分が脳内で作り上げた世間との脳内バトルが繰り広げられるところとか聞いてると「うわ、めっちゃわかる……」となり、同時に自分の頭の中が覗き見られてるようで恥ずかしい。&lt;/p&gt;
&lt;p&gt;このアルバムで最終的に辿り着いた着地点が例えばセルアウト禅問答でのヤケクソの「アイラブユー」だったというところも好きなんですよね。&lt;/p&gt;
&lt;p&gt;中心にあるのが「アイラブユー」である点が、自分の「敵」に対する脳内の憎しみをグツグツと煮詰めたような前作の「苺苺苺苺苺」とは少し違うと思う。楽曲的にも世界観的にも段違いにポップになってて、(いい意味で)J-POPとして聞いてて楽しい。メタな視点からこじらせの気持ち悪さ（？）をバカバカしさに変換することに成功しているので、マイルドながらもちゃんとこじらせてる（？？？）ので「前作より丸くなったよね笑、ちょっと物足りないかな」みたいなのとも違うし。&lt;/p&gt;
&lt;p&gt;ライブも行って、イメージに違わぬ妄想爆発ぶりで、そこいらに溢れる凡百の軟弱シティポップバンドなんか比べ物にならないほど最高に良かった。&lt;/p&gt;
&lt;p&gt;9月に出る新譜も本当に楽しみで、早く聴きたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Girls - Album (2009)</title>
      <link>https://matsueushi.github.io/posts/girls-album/</link>
      <pubDate>Sun, 26 Jun 2016 00:04:20 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/girls-album/</guid>
      <description>&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;450&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/us/album/album-bonus-track-version/329914284?app=music&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;アメリカ、サンフランシスコで活動していたバンド、Girls。活動期間は2007-2012年と短く、僅か2枚のスタジオアルバムと1枚のEPを残し解散してしまった。バンド名こそガールズだが、クリストファー・オウエンスとジャック&amp;quot;JR&amp;quot;ホワイトの男性2人のバンドだ。&lt;/p&gt;
&lt;p&gt;Girlsが残した2枚のアルバムは大変な傑作なんだけど、今回は特に僕が愛してやまないファーストアルバム、Albumについて書きたい。&lt;/p&gt;
&lt;p&gt;まず内容以前にコンセプトが好きで、バンドの名前がGirlsでアルバムのタイトルがAlbumって言うのが、何でも検索しちゃう今時の風潮に対して斜に構えている感じてイカしてるし、白をベースにした限りなく簡潔なアートワークもいい。余計な情報を頭に入れるより、まずは音源を聞いてくれ、みたいなメッセージなのかもしれない。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;Lust For Lifeのイントロを一聴すればわかる。何かが始まる感覚っていうか、聞いているうちに楽しい世界に誘ってくれるようなワクワクや期待が詰まってて、でもどこか寂しげで心が揺さぶられて、バックコーラスが始まるころには思わず走り出したくなってしまうような特別な曲。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/SuoTjYYqe4c&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;Hellhole Ratraceの大げさなまでに感情を込めてくる感じ、i don&amp;rsquo;t want to die～～って思わず歌いたくなる。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/lcqwfFKagH4&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;Morning Lightは 部屋の中で大音量で流したい、退廃的な儚い夢のムード漂うシューゲイザー調の曲。不安げなイントロから始まり、暴力的なフィードバックギターと甘く浮遊感のあるボーカルが絡み、中盤からはただただフィードバックギターのメロディが繰り返され、無常感がある。かわいい女の子とメンバーがじゃれ合ってるPVもどこか寂しげで曲調にマッチしている。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/kJVN3QoGMe0&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;ハイプだとかデモテープっぽいとか50/60sのポップソングのパクリとかいろいろ言われてたけど、むしろ、このデモテープっぽい荒削りさは魅力だと思うし、40s,50s,60sのエッセンスを現代に引き直しただけの単なる模倣でははないことは明らか。&lt;/p&gt;
&lt;p&gt;パンク、バラード、シューゲイザー、オルタナ、ネオアコなど様々なジャンルの要素をアルバムから感じるし、クリストファー・オウエンスのボーカルスタイルも、HeadachやLauren Marieでは甘ったるく優しく、Big Bad Mean MotherfuckerやSummertimeではおどけた歌い方をしたりと、幅広さを感じるアルバム。
 &lt;/p&gt;
&lt;p&gt;とにかく聞いていて切ない気分になって心酔しちゃう、感傷に浸りたい時に真っ先に聞きたくなる一枚。人によって好みが別れるアルバムだと思うけど、Lust For Lifeを聞いて気に入ったらぜひアルバムを通して聞いて欲しい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Mac Demarco - 2 (2012)</title>
      <link>https://matsueushi.github.io/posts/macdemarco-2/</link>
      <pubDate>Tue, 31 May 2016 23:51:30 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/macdemarco-2/</guid>
      <description>&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;450&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/jp/album/2/561048714?app=music&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;ジャケットでにこやかにチェックシャツを着てピースしているのが、カナダ出身、1990年生まれ(若い!)のシンガーソングライター、Mac Demarco。見た目で判断するのはあまり良くないとは思うけど、この愛嬌ある見た目！このちょっと子供っぽい感じ！聞く前から楽しい予感がしてくる。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;INTERVIEW:&lt;br&gt;
MAC DEMARCO: “I’VE REELED IT IN A LITTLE BIT, BUT NOT THAT MUCH”&lt;br&gt;
&lt;a href=&#34;http://diymag.com/2015/08/08/mac-demarco-interview-ive-reeled-it-in-a-little-bit-but-not-that-much&#34;&gt;http://diymag.com/2015/08/08/mac-demarco-interview-ive-reeled-it-in-a-little-bit-but-not-that-much&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;この&amp;quot;2&amp;quot;、郷愁を感じるサイケデリック・ポップで、肩の力の抜けた、自然体のユルさが絶妙に心地よい。&lt;/p&gt;
&lt;p&gt;僕が一番アルバムの中で好きなのはお気に入りのタバコについて唄ったOde to Viceroy。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;And oh, don&amp;rsquo;t let me see you crying&lt;/p&gt;
&lt;p&gt;&amp;lsquo;Cause oh, honey, I&amp;rsquo;ll smoke you &amp;rsquo;til I&amp;rsquo;m dying&lt;/p&gt;
&lt;p&gt;この部分最高。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/6bfTTeZOrs4&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;My Kind of Womanなんて20代前半とは思えない哀愁が漂っている。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/wIuBcb2T55Q&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;ちょっと疲れた時に気楽に聞きたくなる癒やしの一枚。くたくたになって帰ってきても、このアルバムを流すと部屋全体がやすらぎの空間になる感じ。是非一度生でライブを見てみたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Oval - 94 Diskont (1995)</title>
      <link>https://matsueushi.github.io/posts/oval-94-diskont/</link>
      <pubDate>Sun, 29 May 2016 23:47:05 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/oval-94-diskont/</guid>
      <description>&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;450&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/jp/album/94-diskont/5506844?app=music&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;ドイツの実験電子音楽グループOvalの4thアルバム、94 Diskont。
このアルバムは何と言っても1曲目のDo Whileの存在感が際立つ。&lt;/p&gt;
&lt;p&gt;温かい電子音の曖昧な揺らめきの反復が生み出す、しこたま飲酒してフラフラになって眠くなっている時のように感じるような、ドラッギーな酩酊。24分間にわたって繰り返されるアンビエントノイズは、聞いているうちに夢のなかに誘い込まれそうなほど幻想的で美しい。&lt;/p&gt;
&lt;p&gt;他にアルバムに収録されているCommerce ServerやShop In Stoneは、単体で聞けば結構いい曲だが、曲の長さが短くDo Whileのトリップ感を味わう前に曲が終わってしまうので、前半どっぷりとDo Whileの世界観に浸かってからアルバム後半を聞いていると若干物足りなく感じてしまうこともあるかもしれない。&lt;/p&gt;
&lt;p&gt;音源ソースを収録してCDの記録面をマジックペンで汚したり、カッターナイフで傷をつけたりして音飛びを発生させるなどの手法が用いられ、リリース当時は賛否両論だったらしい。&lt;/p&gt;
&lt;p&gt;人によってはずっと同じような音が流れているように聞こえて退屈に感じるかもしれないが、騙されたと思ってまずは一度、24分間、揺らぎながら変化していく音響に耳を傾けて欲しい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>New Order@新木場STUDIO COAST, 2016/5/25(水)</title>
      <link>https://matsueushi.github.io/posts/new-order-coast/</link>
      <pubDate>Sat, 28 May 2016 23:39:58 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/new-order-coast/</guid>
      <description>&lt;p&gt;New Orderの来日公演に行ってきた。New Orderを生で見るのは初。&lt;/p&gt;
&lt;p&gt;New Orderに興味を持った時期はアジカンのナノムゲンコンピレーション(アッシュとかエルレガーデンとかの曲が入ってる青いジャケットのやつ)を買って、洋楽に興味を持ち始めた頃なので高校2年ぐらいだったと思う。YouTubeで色々探している間にCrystalのミュージックビデオにたどり着いた。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/KVMyXDsadLQ&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;曲がカッコいいし演奏している人もイケてる感じだしこれは総合的に良い感じなのでは……？と思い、Crystalが収録されているGet Readyというアルバムを即座に購入した。&lt;/p&gt;
&lt;p&gt;その時引っかかったのは、Amazonのレビューか何かに「New Orderを初めて聞く人にはこのGet Readyはおすすめ出来ない」と言った内容のレビューがあったこと。&lt;/p&gt;
&lt;p&gt;「こんなに今風のイケてる感じなのに何言ってんだコイツ」と脳内にハテナマークが浮かんだが、好き嫌いは人それぞれなのでこういうことはよくあるから気にしないで聞いていた。&lt;/p&gt;
&lt;p&gt; 
しかし、YouTubeでNew Orderのライブ動画を検索しているとおかしなことに気づく。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/uQng86EudNY&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;おじさんが謎のダンスをしていたりジャンプしてワオ！とか言ってる感じ、カラオケではしゃいでるおじさんと同じだし、CrystalのPVのアップツーデートな雰囲気と全然違うし、そもそも顔と体型が根本的に違わないか？曲がなんというかスカスカに聞こえるし、歌も特別上手いわけじゃないし、どういう事なんだ……&lt;/p&gt;
&lt;p&gt; 
調べてみると、CrystalのPVに出てくるイケてる人たちはNew Orderのメンバーでもなんでもない若いイケてる役者で、本当のNew Orderのメンバーは(当然だが)ライブ映像に出てきた冴えない感じのおじさんたちで、完全に騙されていた。&lt;/p&gt;
&lt;p&gt; 
実はGet ReadyはNew Orderが一度解散した後、復活作としてリリースされたもので、キャリアの中では異色な作品だったということが色んな曲を聞いているうちに分かってきた。&lt;/p&gt;
&lt;p&gt; 
New Orderで一番有名な曲、Blue Monday。最初に聞いた時は印象的なリズムと憂鬱な雰囲気にびっくりした。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/nOTRqbEKgXM&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;花のジャケットが美しいセカンドアルバム、Power,Corruption &amp;amp; Lies(邦題:権力の美学)のラストに収録されている、美しく哀愁あるLeave Me Alone。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/JEJpmDUMKco&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;不審者がビンタしあっているシーンから始まる意味不明なPVも印象深いTrue Faith。&lt;/p&gt;
&lt;iframe width=&#34;560&#34; height=&#34;315&#34; src=&#34;https://www.youtube.com/embed/mfI1S0PKJR8&#34; frameborder=&#34;0&#34; allow=&#34;accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture&#34; allowfullscreen&gt;&lt;/iframe&gt;
&lt;p&gt;リズムマシンが生み出す無機質なリズム、チープなシンセが奏でるちょっと物悲しい美しいメロディ、ペラペラなギター、目立つメロディアスな高音ベース、ヘロヘロのあんまり上手くない歌の組み合わせが絶妙で、すべてが微笑ましく、愛おしく聞こえてくるんですよ。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;New Orderの他のアルバムも買って聞いて、全身バンドであるJoy Divisionもそのつながりで聴くようになって、ニューウェーブとかポストパンクとかいったジャンルのCDを集めるようになったのだった。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;知った当初はメンバー同士の不和で解散状態だったんだけど、4年前ぐらいに再結成していた時は嬉しくなったものだ。ベースのフッキーが脱退したことになっていて悲しかったが。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;そんな経緯もあり、10年ぶりの新作、29年ぶりの単独公演となれば狂喜乱舞しないわけがないでしょう。初めて知ってから8年……長かった。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;楽しみすぎて会社の有給取って、午前中は部屋でNew Orderの曲を聴き続けて、18時会場なのに1時間半も早い16時30分に駅に集合。そこは不毛地帯新木場、居酒屋が空いているわけでもないのでコンビニで酒買って駅前の植木を囲んでいる変な石の上でビール飲んで、それでも時間が若干余ったのでハトと戯れた。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;そして向かった新木場STUDIO COAST。驚くほどおじさん(とおばさん)の率が高い。つまりはおじさんの青春なのだ！親に強引に連れてこられたと思しき子供を見かけたが、子供だったらももクロとか嵐とか西野カナとか聞きたいだろうに……笑&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;おじさんとともに入場し開演を待つ。開演が1時間押して始まったのが20:00。メンバーが出てきた瞬間興奮して全部どうでも良くなっちゃったけど。&lt;/p&gt;
&lt;p&gt; &lt;/p&gt;
&lt;p&gt;1曲目は新作Music CompleteからSingularity。1曲目からフロアの沸きが凄いし、思ったより演奏が下手じゃない！ 続いてRegretのイントロが流れた瞬間懐かしさがこみ上げてきて、おじさんたちと一緒に大合唱。&lt;/p&gt;
&lt;p&gt;そして Crystalの演奏中には後ろのスクリーンに僕が騙されたCrystalのPVがそのまま流れるという(僕個人にとって)感動の演出があり、PVの偽メンバーとステージ上のメンバーを見比べながらテンション上がってました。&lt;/p&gt;
&lt;p&gt;途中ずっと思ってたのですが、バーニーのギターを持たず歌っている時の「おじいちゃんがカラオケボックスで歌っている」感じ、本当にかわいい……（意味不明）&lt;/p&gt;
&lt;p&gt;本編ラストのThe Perfect Kiss, True Faith, Temptationの三連チャンは本当に盛り上がった。&lt;/p&gt;
&lt;p&gt; 
アンコール1曲目はBlue Monday。ただただカッコいい。バーニーがジリアンに歩み寄って並んでシンセを弾く微笑ましいシーンも。&lt;/p&gt;
&lt;p&gt;そのあとJoy DivisionのLove Will Tears Us Apartが流れて「Joy Division Forever」の文字とともにイアン・カーティスの写真が画面に出てきた時はちょっとしんみりした。&lt;/p&gt;
&lt;p&gt; 
最後、新しいアルバムの曲のSuperheatedで終わったのも、まだまだ俺たち現役だぜって感じでよかった。&lt;/p&gt;
&lt;p&gt; 
思い出補正もあるとは思うんだけど、本当に見れて良かった。Your Silenct Faceでピアニカを吹くバーニーでは思わず涙が出そうになったし、Tutti Frutti、Plasticとか、新しいアルバムからバチッとダンスミュージックを決めてきたところはめっちゃ盛り上がった。&lt;/p&gt;
&lt;p&gt; 
ずっとファンで好きだったのに実際直接見てヨボヨボさにがっかりしたらどうしようなんて思ってたけどそんな心配を吹き飛ばすような最高のステージだった。そして、死ぬまでに、フッキーが戻ったオリジナル・メンバーのNew Orderのステージを見たい！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Cymbals - That&#39;s Entertainment (2000)</title>
      <link>https://matsueushi.github.io/posts/cymbals-entertainment/</link>
      <pubDate>Mon, 23 May 2016 10:39:20 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/cymbals-entertainment/</guid>
      <description>&lt;iframe allow=&#34;autoplay *; encrypted-media *;&#34; frameborder=&#34;0&#34; height=&#34;450&#34; style=&#34;width:100%;max-width:660px;overflow:hidden;background:transparent;&#34; sandbox=&#34;allow-forms allow-popups allow-same-origin allow-scripts allow-storage-access-by-user-activation allow-top-navigation-by-user-activation&#34; src=&#34;https://embed.music.apple.com/jp/album/thats-entertainment/336590755?app=music&#34;&gt;&lt;/iframe&gt;
&lt;p&gt;\&lt;/p&gt;
&lt;p&gt;渋谷系バンドCymbalsの1stアルバム、That&amp;rsquo;s Entertainment。 &lt;/p&gt;
&lt;p&gt;Cymbalsのメンバーは土岐麻子、沖井礼二、矢野博康の三人。1997年に結成、当初のコンセプトは「かわいくっていじわるな感じのバンド。ただしパンク」。
2003年12月に解散を発表し、今はそれぞれソロで活動中、とのこと。&lt;/p&gt;
&lt;p&gt;POPで楽しくて爽やかで、おしゃれなギターポップ。聞いてるとなんとなく都会的な育ちの良さを感じる。
ジャケットとかのアートワークが洋楽っぽくて、歌詞は英詩の割合が多くてちょっと背伸びして「気取ってる」ところも可愛くてなんかいい。
フリッパーズ・ギターの1枚目の斜に構えた(失礼)英詩の感じとはちょっと趣が違って、素直。&lt;/p&gt;
&lt;p&gt; 
明るい日差しの中、芝生の上で寝転がりながら聞くWhat A Shiny Day！&lt;/p&gt;
&lt;p&gt;シャレオツな喫茶店のテラスで飲むメロンソーダフロート、雲ひとつ無い晴れた日の昼間、My Brave Faceのイントロの軽快な口笛を吹きながら川沿いの堤防でサイクリング！&lt;/p&gt;
&lt;p&gt;ま、実際はメロンソーダは注文しないし、サイクリングなんか行かないんだけど、そんなことはどうでもいいんですよ！！！圧倒的なポップセンス最高！&lt;/p&gt;
&lt;p&gt; 
CD、Amazonにはなかったけどタワーレコードには置いてるのでタワレコに急げ！！！！&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoderメモ書き</title>
      <link>https://matsueushi.github.io/atcoder/memo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/memo/</guid>
      <description>&lt;p&gt;自分用のメモです。&lt;/p&gt;
&lt;h3 id=&#34;waの時に確認すべきこと&#34;&gt;WAの時に確認すべきこと&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;問題文は正しく読めているか？&lt;/li&gt;
&lt;li&gt;オーバーフローしていないか？&lt;/li&gt;
&lt;li&gt;998244353や10^9+7で割った余りを求めるタイプの場合、余りを取っているか？
負の値を足している時、&lt;code&gt;res = (res % P + P) % P&lt;/code&gt;のようなケアをしているか？&lt;/li&gt;
&lt;li&gt;二分探索をしている時、最小値、最大値に到達できるか？&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;探索&#34;&gt;探索&lt;/h2&gt;
&lt;h3 id=&#34;dfs&#34;&gt;DFS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc138/tasks/abc138_d&#34;&gt;ABC 138 D - Ki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc240/tasks/abc240_e&#34;&gt;E - Ranges on Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc213/tasks/abc213_d&#34;&gt;D - Takahashi Tour&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;木を辿る&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc220/tasks/abc220_f&#34;&gt;ABC 220 F - Distance Sums 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bfs&#34;&gt;BFS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc151/tasks/abc151_d&#34;&gt;ABC 151 D - Maze Master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc088/tasks/abc088_d&#34;&gt;ABC 088 D - Grid Repainting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bit全探索&#34;&gt;Bit全探索&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc147/tasks/abc147_c&#34;&gt;ABC 147 C - HonestOrUnkind2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dp&#34;&gt;DP&lt;/h2&gt;
&lt;h3 id=&#34;1次元&#34;&gt;1次元&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc034/tasks/agc034_a&#34;&gt;AGC 034 A - Kenken Race&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2次元&#34;&gt;2次元&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc183/tasks/abc183_e&#34;&gt;ABC 183 E - Queen on Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc043/tasks/agc043_a&#34;&gt;AGC 043 A - Range Flip Find Route&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;桁dp&#34;&gt;桁DP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc154/tasks/abc154_e&#34;&gt;ABC 154 E Almost Everywhere Zero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;タイリング敷き詰め&#34;&gt;タイリング/敷き詰め&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;蟻本 p.p. 177 ドミノ敷き詰め&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_aw&#34;&gt;アルゴリズムと数学　演習問題集 057 - Domino Tiling&lt;/a&gt; 紛らわしい例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ナップザック問題&#34;&gt;ナップザック問題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc153/tasks/abc153_e&#34;&gt;ABC 153 E - Crested Ibis vs Monster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ぐるぐる遷移していくやつ&#34;&gt;ぐるぐる遷移していくやつ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/abc167_d&#34;&gt;アルゴリズムと数学　演習問題集 062 - Teleporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区間スケジュール問題&#34;&gt;区間スケジュール問題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://algo-method.com/tasks/363/editorial&#34;&gt;区間スケジューリング問題 | アルゴ式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/keyence2020/tasks/keyence2020_b&#34;&gt;キーエンス2020 B Robot Arms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bn&#34;&gt;アルゴリズムと数学　演習問題集 082 - Interval Scheduling Problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数列整数&#34;&gt;数列/整数&lt;/h2&gt;
&lt;h3 id=&#34;約数&#34;&gt;約数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc134/tasks/abc134_d&#34;&gt;ABC 134 D - Preparing Boxes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;素数&#34;&gt;素数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc084/tasks/abc084_d&#34;&gt;ABC 084 D - 2017-like Number&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;フィボナッチ数列漸化式&#34;&gt;フィボナッチ数列/漸化式&lt;/h3&gt;
&lt;p&gt;行列演算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ap&#34;&gt;アルゴリズムと数学　演習問題集 049 Fibonacci Easy (mod 1000000007)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_at&#34;&gt;アルゴリズムと数学　演習問題集 054 - Fibonacci Hard (mod 1000000000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_au&#34;&gt;アルゴリズムと数学　演習問題集 055 - Recurrence Formula 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_av&#34;&gt;アルゴリズムと数学　演習問題集 056 - Recurrence Formula 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数列の連続する項目の差の絶対値に注目&#34;&gt;数列の連続する項目の差の絶対値に注目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc253/tasks/abc253_e&#34;&gt;ABC 253 E Distance Sequence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;幾何&#34;&gt;幾何&lt;/h2&gt;
&lt;h3 id=&#34;三角形&#34;&gt;三角形&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc143/tasks/abc143_d&#34;&gt;ABC 143 D - Triangles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;円の交点&#34;&gt;円の交点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ag&#34;&gt;アルゴリズムと数学　演習問題集 035 - Two Circles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;凸性&#34;&gt;凸性&lt;/h3&gt;
&lt;p&gt;外積で判定できる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://perogram.hateblo.jp/entry/2020/09/25/035159&#34;&gt;外積で凸性判定 - perogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc266/tasks/abc266_c&#34;&gt;ABC266 C - Convex Quadrilateral&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;グラフ&#34;&gt;グラフ&lt;/h2&gt;
&lt;h3 id=&#34;二部グラフ判定&#34;&gt;二部グラフ判定&lt;/h3&gt;
&lt;p&gt;DFS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ao&#34;&gt;アルゴリズムと数学　演習問題集 047 - Bipartite Graph&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ダイクストラ&#34;&gt;ダイクストラ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc252/tasks/abc252_e&#34;&gt;ABC 252 E Road Reduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ワーシャルフロイド&#34;&gt;ワーシャルフロイド&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc079/tasks/abc079_d&#34;&gt;ABC 079 D - Wall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;橋&#34;&gt;橋&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nupioca.hatenadiary.jp/entry/2013/11/03/200006&#34;&gt;橋（bridge）検出アルゴリズム - nupiocaの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc075/tasks/abc075_c&#34;&gt;ABC 075 C - Bridge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;閉路&#34;&gt;閉路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc266/tasks/abc266_f&#34;&gt;ABC 266 F - Well-defined Path Queries on a Namori&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lca&#34;&gt;LCA&lt;/h3&gt;
&lt;p&gt;蟻本 pp.292&lt;/p&gt;
&lt;p&gt;\(d(u,v)=depth(u)+depth(v)-2depth(lca(u,v))\)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/e869120/status/1391218516129312768&#34;&gt;競プロ典型90問 35日目解説@e869120&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;セグメント木&#34;&gt;セグメント木&lt;/h2&gt;
&lt;h3 id=&#34;fenwick-tree&#34;&gt;Fenwick Tree&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc253/tasks/abc253_f&#34;&gt;ABC 254 F - Operations on a Matrix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通常のセグメント木&#34;&gt;通常のセグメント木&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc185/tasks/abc185_f&#34;&gt;ABC 165 F - Range Xor Query&lt;/a&gt; XOR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区間和&#34;&gt;区間和&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imoz.jp/algorithms/imos_method.html&#34;&gt;いもす法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アルゴリズムと数学　演習問題集 041&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;その他&#34;&gt;その他&lt;/h2&gt;
&lt;h3 id=&#34;括弧&#34;&gt;括弧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc064/tasks/abc064_d&#34;&gt;ABC 064 D - Insertion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;マンハッタン距離&#34;&gt;マンハッタン距離&lt;/h3&gt;
&lt;p&gt;45度回転が有用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc178/tasks/abc178_e&#34;&gt;ABC E - Dist Max&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;チェスのナイト&#34;&gt;チェスのナイト&lt;/h3&gt;
&lt;p&gt;斜めに動くとわかりづらいので、座標変換を行う。
$$
\begin{aligned}
\left(
\begin{matrix}
x \\
y
\end{matrix}
\right) =
\left(
\begin{matrix}
1 &amp;amp; 2 \\
2 &amp;amp; 1
\end{matrix}
\right)
\left(
\begin{matrix}
s \\
t
\end{matrix}
\right)
\end{aligned}
$$
だから、逆変換
$$
\begin{aligned}
\left(
\begin{matrix}
s \\
t
\end{matrix}
\right) =
-\frac{1}{3}
\left(
\begin{matrix}
1 &amp;amp; -2 \\
-2 &amp;amp; 1
\end{matrix}
\right)
\left(
\begin{matrix}
x \\
y
\end{matrix}
\right)
\end{aligned}
$$
を考えることにより縦横の単純な移動に変換する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;蟻本 pp.353 Endless Knight&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/abc145_d&#34;&gt;アルゴリズムと数学　演習問題集 052 - Knight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>