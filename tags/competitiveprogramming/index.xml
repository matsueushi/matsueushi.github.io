<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CompetitiveProgramming on matsueushi</title>
    <link>https://matsueushi.github.io/tags/competitiveprogramming/</link>
    <description>Recent content in CompetitiveProgramming on matsueushi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright © 2019–2022</copyright>
    <lastBuildDate>Wed, 25 May 2022 21:19:09 +0900</lastBuildDate>
    
	<atom:link href="https://matsueushi.github.io/tags/competitiveprogramming/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Atcoder ABC135 C - City Savers</title>
      <link>https://matsueushi.github.io/posts/atcoder-abc135-c/</link>
      <pubDate>Wed, 25 May 2022 21:19:09 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/atcoder-abc135-c/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc135/tasks/abc135_c&#34;&gt;https://atcoder.jp/contests/abc135/tasks/abc135_c&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;勇者が倒せるモンスターの数を無駄にしたくないので、
他の勇者が倒せるモンスターよりも自分しか倒せないモンスターを優先して倒すようにする。&lt;/p&gt;
&lt;p&gt;1番目の街のモンスターは1番目の勇者しか倒せないので、1番目の勇者は優先的に1番目の街のモンスターを倒し、
余力があれば2番の街のモンスターを倒す。
2番目の勇者は残っている2番目の街ののモンスターから倒す……
と順々に考えれば良い&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc135/submissions/31950249&#34;&gt;https://atcoder.jp/contests/abc135/submissions/31950249&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoderで緑色になった</title>
      <link>https://matsueushi.github.io/posts/atcoder-green/</link>
      <pubDate>Sun, 15 May 2022 21:55:31 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/atcoder-green/</guid>
      <description>&lt;p&gt;4月頭からAtCoder Beginner Contestに出ていたのですが、緑色になりました。
&lt;a href=&#34;https://atcoder.jp/users/matsueushi&#34;&gt;https://atcoder.jp/users/matsueushi&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;蟻本を読みながら「競プロ典型90問」を9割ぐらい解答を見ながら解いて、その後はABCの過去問をA-D問題を中心に解いていました。
D問題で時間がかかってしまうことが多いので、&lt;a href=&#34;https://kenkoooo.com/atcoder/#/training/Boot%20camp%20for%20Beginners&#34;&gt;AtCoder Problems&lt;/a&gt; の「Boot camp for Beginners」を解きまくろうと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>AtCoder ABC250 E - Prefix Equality</title>
      <link>https://matsueushi.github.io/posts/atcoder-abc250-e/</link>
      <pubDate>Mon, 09 May 2022 21:47:26 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/atcoder-abc250-e/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc250/tasks/abc250_e&#34;&gt;https://atcoder.jp/contests/abc250/tasks/abc250_e&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;コンテスト中は解けそうで解けなかったが、シンプルな方法で解けることにあとから気づいて悔やまれた。&lt;/p&gt;
&lt;p&gt;\(S_i= \{a_1, \ldots, a_i\}, T_i=\{b_i, \ldots, b_i \} \)とおくと、\( S_1 \subseteq S_2 \subseteq \cdots \subseteq S_n, T_1 \subseteq T_2 \subseteq \cdots \subseteq T_n\)となる。&lt;/p&gt;
&lt;p&gt;\(f_i= \max \{j \mid T_j \subseteq S_i \}, g_i= \max \{j \mid S_j \subseteq T_i \} \) を計算する。例えば\(f_i\)まで計算した後に\(f_{i+1}\)を計算するときは、\(b_{f_i+1}, b_{f_i+2}, \ldots , b_j\) が \(S_{i+1}\) に含まれているかをチェックしていき含まれなくなったら\(f_{i+1}=j-1\) とすれば良い。&lt;/p&gt;
&lt;p&gt;後は\(S_i = T_j \Leftrightarrow S_i \subseteq T_j, T_j \subseteq S_i \Leftrightarrow i \le g_j, j \le f_i\)でクエリを判定すれば良い。&lt;/p&gt;
&lt;p&gt;(Julia, 564 ms)
&lt;a href=&#34;https://atcoder.jp/contests/abc250/submissions/31571164&#34;&gt;https://atcoder.jp/contests/abc250/submissions/31571164&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでAtCoderに挑戦</title>
      <link>https://matsueushi.github.io/posts/julia-atcoder/</link>
      <pubDate>Fri, 04 Feb 2022 23:09:38 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/posts/julia-atcoder/</guid>
      <description>&lt;p&gt;去年は色々と忙しくじっくり勉強する時間がなかったので、リハビリを兼ねて競技プログラミングの問題をJuliaで挑戦してみることにします。&lt;/p&gt;
&lt;p&gt;ひとまず、AtCoderの&lt;a href=&#34;https://atcoder.jp/contests/typical90&#34;&gt;競プロ典型 90 問&lt;/a&gt;を解いて行く予定です。
ジャッジ時にJITコンパイルが走って200~300ms程度消費してしまいますが、幸い今のところTLEでどう頑張っても通せない問題はなかったです。&lt;/p&gt;
&lt;p&gt;下に解答を記録していこうと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/CompetitiveProgramming&#34;&gt;https://github.com/matsueushi/CompetitiveProgramming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;さてはて、いつまで続くやら。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>