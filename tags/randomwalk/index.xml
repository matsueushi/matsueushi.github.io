<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RandomWalk on matsueushi</title>
    <link>https://matsueushi.github.io/tags/randomwalk/</link>
    <description>Recent content in RandomWalk on matsueushi</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Wed, 03 Apr 2019 21:52:38 -0400</lastBuildDate>
    
	<atom:link href="https://matsueushi.github.io/tags/randomwalk/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Mamba.jlでGaussianRandomWalkを作って使う</title>
      <link>https://matsueushi.github.io/posts/mamba-gaussianrandomwalk/</link>
      <pubDate>Wed, 03 Apr 2019 21:52:38 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/mamba-gaussianrandomwalk/</guid>
      <description>PyMC3にはTimeseriesとして GaussianRandomWalk などの時系列モデルが実装されている。
https://docs.pymc.io/api/distributions/timeseries.html#pymc3.distributions.timeseries.GaussianRandomWalk
だが残念なことに私が使っているMamba.jl(0.12.1)には時系列モデルがない。下のように cumsum を使ってモデルを作成することは可能ではあるが、面倒だし次元が大きくなってきたりモデルが複雑になってくると遅い。
local_level_model = Model( obs = Stochastic(1, (N, T, sigma_I) -&amp;gt; MvNormal(T, sigma_I), false ), T = Logical(1, (T_0, disturbance) -&amp;gt; T_0 .+ vcat([0], cumsum(disturbance)), ), disturbance = Stochastic(1, (N, sigma_T) -&amp;gt; MvNormal(N - 1, sigma_T), false ), sigma_I = Stochastic(() -&amp;gt; InverseGamma()), sigma_T = Stochastic(() -&amp;gt; InverseGamma()), T_0 = Stochastic(T_init -&amp;gt; Normal(T_init, 100)), ) だからと言ってそのためにわざわざPython+PyMC3に移るのも癪だし、練習を兼ねてJulia+Mamba用の確率分布を試しに作ってみようと思ったのが今回の内容である。幸いなことに、Mamba.jlには作り方のガイドラインが書いてあるので、多変量分布用のガイドラインを参考にして作ることができた。
今回は、GaussianRandomWalk は、初期値の分布 \( D \) とドリフト \( \mu_i \) , 分散 \( \sigma \) とした時に、</description>
    </item>
    
  </channel>
</rss>