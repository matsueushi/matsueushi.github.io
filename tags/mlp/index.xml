<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MLP on matsueushi</title>
    <link>https://matsueushi.github.io/tags/mlp/</link>
    <description>Recent content in MLP on matsueushi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright © 2019–2022</copyright>
    <lastBuildDate>Sun, 01 Dec 2019 18:07:13 -0500</lastBuildDate>
    
	<atom:link href="https://matsueushi.github.io/tags/mlp/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Flux.jl v0.10.0でDCGANを動かす(CUDA環境)</title>
      <link>https://matsueushi.github.io/posts/fluxjl-dcgan/</link>
      <pubDate>Sun, 01 Dec 2019 18:07:13 -0500</pubDate>
      
      <guid>https://matsueushi.github.io/posts/fluxjl-dcgan/</guid>
      <description>&lt;p&gt;2020/3/8 追記: model-zoo(&lt;a href=&#34;https://github.com/FluxML/model-zoo&#34;&gt;https://github.com/FluxML/model-zoo&lt;/a&gt;) にDCGANのモデルが入りました。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2019/11/29にJuliaの機械学習ライブラリ&lt;a href=&#34;https://fluxml.ai/Flux.jl/stable/&#34;&gt;Flux.jl&lt;/a&gt;の&lt;a href=&#34;https://github.com/FluxML/Flux.jl/releases/tag/v0.10.0&#34;&gt;v0.10.0&lt;/a&gt;がリリースされた。
もともとv0.9.0でDCGANのMNISTデータセットから手書き文字画像生成モデルを作成して、今回の変更に合わせてv0.10.0で動かしたのだが、
ここに至るまで色々と苦戦したので、v0.10.0の主な変更点や、自分がつまづいた点を書いておく。&lt;/p&gt;
&lt;p&gt;実装はGitHubのリポジトリ &lt;a href=&#34;https://github.com/matsueushi/fluxjl-gan&#34;&gt;matsueushi/fluxjl-gan&lt;/a&gt; を見てほしい。&lt;/p&gt;
&lt;p&gt;環境はGCPのn1-standard-8 + 1 x NVIDIA Tesla K80で、Ubuntu 18.04, Juliaのバージョンは1.3.0を利用。&lt;/p&gt;
&lt;h2 id=&#34;dockerで環境構築gpu&#34;&gt;Dockerで環境構築(GPU)&lt;/h2&gt;
&lt;p&gt;GPUが使えるJuliaのオフィシャルなDocker imageは &lt;del&gt;現在(2019/12/1)存在しないと思われる。&lt;/del&gt; 配布されているようです&lt;/p&gt;
&lt;blockquote class=&#34;twitter-tweet&#34; data-partner=&#34;tweetdeck&#34;&gt;&lt;p lang=&#34;ja&#34; dir=&#34;ltr&#34;&gt;(ひっそり CUDA と Julia が同梱されたコンテナイメージも配布されていたりします…… &lt;a href=&#34;https://t.co/LE1ducHlWE&#34;&gt;https://t.co/LE1ducHlWE&lt;/a&gt; )(姑息な宣伝) &lt;a href=&#34;https://t.co/VbS7xcYTTV&#34;&gt;https://t.co/VbS7xcYTTV&lt;/a&gt;&lt;/p&gt;&amp;mdash; やまさき (@yama_k_1101) &lt;a href=&#34;https://twitter.com/yama_k_1101/status/1201376391779893249?ref_src=twsrc%5Etfw&#34;&gt;December 2, 2019&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async src=&#34;https://platform.twitter.com/widgets.js&#34; charset=&#34;utf-8&#34;&gt;&lt;/script&gt;
&lt;p&gt;&lt;del&gt;このあたり、&lt;a href=&#34;https://www.tensorflow.org/install/docker&#34;&gt;GPUのDockerイメージ&lt;/a&gt; が利用できるTensorflowが羨ましく感じられる部分ではある。&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;JuliaGPUのDockerイメージ &lt;a href=&#34;https://github.com/JuliaGPU/docker&#34;&gt;JuliaGPU/docker&lt;/a&gt; はメンテナンスされていないので、&lt;a href=&#34;https://hub.docker.com/r/nvidia/cuda/&#34;&gt;nvidia/cuda&lt;/a&gt; のイメージをベースに、Juliaのインストール部分は &lt;a href=&#34;https://github.com/docker-library/julia&#34;&gt;docker-library/julia&lt;/a&gt; を参考にDockerfileを作成。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-docker&#34; data-lang=&#34;docker&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Dockerfile Julia 1.3.0 + CUDA for Flux.jl&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ARG&lt;/span&gt; CUDA&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;.0&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ARG&lt;/span&gt; UBUNTU_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;18&lt;/span&gt;.04&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;FROM&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; nvidia/cuda:${CUDA}-cudnn7-devel-ubuntu${UBUNTU_VERSION}&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;/usr/local/julia&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; PATH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;$JULIA_PATH/bin:$PATH&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_TAR_ARCH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x86_64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_DIR_ARCH&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;x64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_GPG&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;3673DF529D9049477F76B37566E3C7DC03D6E495
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_VERSION&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;.3.0&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;ENV&lt;/span&gt; JULIA_SHA256&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;9ec9e8076f65bef9ba1fb3c58037743c5abb3b53d845b827e44a37e7bcacffe8
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Based on https://github.com/docker-library/julia&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Copyright (c) 2014 Docker, Inc.&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# Released under the MIT license&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# https://opensource.org/licenses/mit-license.php&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; set -eux; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get update; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    apt-get install -y --no-install-recommends curl gnupg dirmngr; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf /var/lib/apt/lists/*; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    folder&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_VERSION&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; | cut -d. -f1-2&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    julia_tar_url&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;https://julialang-s3.julialang.org/bin/linux/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_DIR_ARCH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;folder&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;/julia-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_VERSION&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;-linux-&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_TAR_ARCH&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.tar.gz&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl -fL -o julia.tar.gz.asc &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;julia_tar_url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;.asc&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    curl -fL -o julia.tar.gz     &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;julia_tar_url&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    echo &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;${&lt;/span&gt;JULIA_SHA256&lt;span style=&#34;color:#e6db74&#34;&gt;}&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt; *julia.tar.gz&amp;#34;&lt;/span&gt; | sha256sum -c -; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    export GNUPGHOME&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;mktemp -d&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    gpg --batch --keyserver ha.pool.sks-keyservers.net --recv-keys &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_GPG&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    gpg --batch --verify julia.tar.gz.asc julia.tar.gz; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    command -v gpgconf &amp;gt; /dev/null &lt;span style=&#34;color:#f92672&#34;&gt;&amp;amp;&amp;amp;&lt;/span&gt; gpgconf --kill all; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm -rf &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$GNUPGHOME&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; julia.tar.gz.asc; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    mkdir &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    tar -xzf julia.tar.gz -C &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt;$JULIA_PATH&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&lt;/span&gt; --strip-components 1; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    rm julia.tar.gz; &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#ae81ff&#34;&gt;\
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;&lt;/span&gt;    &lt;span style=&#34;color:#75715e&#34;&gt;# smoke test&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;    julia --version&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# install packages&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;RUN&lt;/span&gt; julia -e &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#39;import Pkg; \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Pkg.add([ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;BSON&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;Distributions&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;HDF5&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;JLD&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;FileIO&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;ImageMagick&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    &amp;#34;Images&amp;#34;, \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Pkg.add([ \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    Pkg.PackageSpec(name=&amp;#34;Flux&amp;#34;, version=&amp;#34;0.10&amp;#34;), \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    ]); \
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;    using BSON, Distributions, HDF5, JLD, FileIO, ImageMagick, Images, Flux&amp;#39;&lt;/span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;CMD&lt;/span&gt; [&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;julia&amp;#34;&lt;/span&gt;]&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;a href=&#34;https://qiita.com/SatoshiTerasaki/items/10d53e4061f11b63155c&#34;&gt;CUDAが動く Julia の深層学習フレームワーク Flux.jl の環境構築をDockerで行う．&lt;/a&gt; でもっと丁寧に説明されていた(こっちだとソースからビルドしている)。&lt;/p&gt;
&lt;p&gt;v0.9.0では&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/918&#34;&gt;LoadError: LoadError: UndefVarError: libcudnn not defined #918&lt;/a&gt; などのエラーが発生しCuArrays.jlをv1.3に下げる必要があったのだが、v0.10.0ではそのような心配はないのでいいですね。&lt;/p&gt;
&lt;h2 id=&#34;dcganのモデル作成&#34;&gt;DCGANのモデル作成&lt;/h2&gt;
&lt;p&gt;GANの仕組み自体の説明は&lt;br&gt;
&lt;a href=&#34;https://elix-tech.github.io/ja/2017/02/06/gan.html&#34;&gt;はじめてのGAN&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;https://qiita.com/taku-buntu/items/0093a68bfae0b0ff879d&#34;&gt;GANについて概念から実装まで　～DCGANによるキルミーベイベー生成～&lt;/a&gt;,&lt;br&gt;
&lt;a href=&#34;https://qiita.com/triwave33/items/1890ccc71fab6cbca87e&#34;&gt;今さら聞けないGAN（1）　基本構造の理解&lt;/a&gt;,&lt;br&gt;
などを参照してほしい。(自分も勉強中です……)&lt;/p&gt;
&lt;p&gt;Fluxには &lt;a href=&#34;https://github.com/FluxML/model-zoo&#34;&gt;FluxML/model-zoo&lt;/a&gt; という実装を集めたレポジトリが存在し、
v0.9.0で実装する際にはGANに関係したプルリクエスト
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/47&#34;&gt;GAN models #47&lt;/a&gt;,
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/111&#34;&gt;Added Condtional GAN and DCGAN tutorial #111&lt;/a&gt;
が非常に有用だった。&lt;/p&gt;
&lt;p&gt;しかしながら、後にも触れるが、v0.10.0で、&lt;a href=&#34;https://github.com/FluxML/Flux.jl/pull/669&#34;&gt;デフォルトの自動微分エンジンをTrackerからZygote.jlに変える大きな変更&lt;/a&gt; がマージされたので、
そのままコピペしただけでは動かないと思われるため要注意。&lt;/p&gt;
&lt;p&gt;ネットワーク、ロス関数の構成は &lt;a href=&#34;https://www.tensorflow.org/tutorials/generative/dcgan&#34;&gt;TensorflowのDCGANチュートリアル&lt;/a&gt; を参考にした。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noise_dim &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;channels &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;generator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Chain(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dense(noise_dim, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;; initW &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BatchNorm(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;, relu),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;reshape(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ConvTranspose((&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;256&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BatchNorm(&lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, relu),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ConvTranspose((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    BatchNorm(&lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, relu),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ConvTranspose((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; channels, tanh; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;discriminator &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;  Chain(
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Conv((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), channels &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt;, leakyrelu; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Conv((&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;64&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&amp;gt;&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, leakyrelu; init &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal, stride &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, pad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dropout(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.25&lt;/span&gt;), 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;reshape(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;),
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;7&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;128&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;; initW &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; glorot_normal)) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; generator_loss(fake_output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(logitbinarycrossentropy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(fake_output, &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss 
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; discriminator_loss(real_output, fake_output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    real_loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(logitbinarycrossentropy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(real_output, &lt;span style=&#34;color:#ae81ff&#34;&gt;1f0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fake_loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(logitbinarycrossentropy&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(fake_output, &lt;span style=&#34;color:#ae81ff&#34;&gt;0f0&lt;/span&gt;))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5f0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; (real_loss &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;  fake_loss)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;GANのdiscriminatorは、オリジナルの画像と、Generatorが生成したフェイクの画像を見分ける役割(二値分類)のため、出力層の活性化関数がシグモイド関数、ロス関数がbinarycrossentropyである実装が多いが、
今回はTensorflowの実装同様、出力層には活性化関数を適用せず(恒等写像), ロス関数にlogitbinarycrossentropyを用いた。&lt;/p&gt;
&lt;p&gt;シグモイド関数を\( \sigma \) とすると、&lt;/p&gt;
&lt;p&gt;\(
\text{binarycrossentropy}(\hat{y}, y) = -y \log \hat{y} - (1 - y) \log(1 - \hat{y}), \\
\text{logitbinarycrossentropy}(\hat{z}, y) = (1 - y) \log \hat{y} - \log(\sigma(\hat{z}))
\)&lt;/p&gt;
&lt;p&gt;だから、(\( y = 0, 1 \) を代入して確かめることで)&lt;/p&gt;
&lt;p&gt;\(
\text{binarycrossentropy}(\sigma(\hat{z}), y) = \text{logitbinarycrossentropy}(\hat{z}, y)
\)&lt;/p&gt;
&lt;p&gt;だから数式上では同じ値になる。
しかし、シグモイド関数を適用する前の値が大きい場合、適用後の値は極めて1に近くなるため、binarycrossentropyの計算中に桁落ちが発生してしまい本来の値からの誤差が大きくなり、勾配の値もおかしくなる。
そのため、logitbinarycrossentropyを使ったほうが計算が安定するようである(実験はしてません、ごめんなさい)。
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/914&#34;&gt;Numerical issues for (logit)binarycrossentropy #914&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;v0.9.0では &lt;code&gt;binarycrossentropy&lt;/code&gt; と &lt;code&gt;logitbinarycrossentropy&lt;/code&gt; はCUDA環境で動かなかったがv0.10.0では修正されている。
このあたりを試していた時、masterブランチで &lt;code&gt;binarycrossetnropy&lt;/code&gt; は直っていたのに &lt;code&gt;logitbinarycrossentropy&lt;/code&gt; は未修正だったので、
初めてFlux.jlに&lt;a href=&#34;https://github.com/FluxML/Flux.jl/pull/940&#34;&gt;Pull resuestを投げて&lt;/a&gt;取り込んでもらった。&lt;/p&gt;
&lt;p&gt;DiscriminatorとGeneratorのtrain関数は下のように書ける。
細かい部分はリポジトリ参照&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; train_discriminator!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DCGAN&lt;/span&gt;, batch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_dim, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;batch_size) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    fake_input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator(noise)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss(m) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; discriminator_loss(m(batch), m(fake_input))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    disc_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator), Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator_optimizer, Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator), disc_grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; train_generator!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;DCGAN&lt;/span&gt;, batch&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;AbstractArray&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;})
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;noise_dim, dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;batch_size) &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; gpu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    loss(m) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; generator_loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;discriminator(m(noise)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    gen_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator), Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    update!(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator_optimizer, Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator), gen_grad)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; loss(dcgan&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;generator)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;tracker-から-zygotejl-への変更&#34;&gt;Tracker から Zygote.jl への変更&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/FluxML/Flux.jl/pull/669&#34;&gt;using Zygote #669&lt;/a&gt; のマージにより自動微分のバックエンドがTrackerから&lt;a href=&#34;https://github.com/FluxML/Zygote.jl&#34;&gt;Zygote.jl&lt;/a&gt;に変更された。
Trackerで書かれたモデルは、Zygote.jlに合わせて多少書き直す必要がある。&lt;/p&gt;
&lt;h3 id=&#34;型の変更&#34;&gt;型の変更&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;gradient&lt;/code&gt; を取った時に返ってくる型が変わった。&lt;/p&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; using Flux.Tracker: gradient
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; f&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3x^2 + 2x + 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f, 2.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;14.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Tracker.TrackedReal&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;v0.10.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; f&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; 3x^2 + 2x + 1;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gr &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;f, 2.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;14.0,&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gr&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;この変更で &lt;code&gt;Tracker.data&lt;/code&gt; や &lt;code&gt;.data&lt;/code&gt; で &lt;code&gt;TrackerArray&lt;/code&gt; や &lt;code&gt;TrackerReal&lt;/code&gt; などでラップされた型からデータを取り出す必要がなくなって便利になった。&lt;/p&gt;
&lt;h3 id=&#34;gradientの書き方&#34;&gt;gradientの書き方&lt;/h3&gt;
&lt;p&gt;Zygote.jl の&lt;a href=&#34;https://fluxml.ai/Zygote.jl/latest/flux/&#34;&gt;リファレンス&lt;/a&gt; には &lt;code&gt;Tracker.gradient&lt;/code&gt; を単に &lt;code&gt;Zygote.gradient&lt;/code&gt; に置き換えれば良いと書いてあるが、
自分の場合はTrackerで取れた微分がZygoteにバックエンドが変わって取れなくなった。&lt;/p&gt;
&lt;p&gt;Trackerでは微分を取るときに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fake_input &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; generator(noise)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;fake_output &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; discriminator(fake_input)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(fake_output)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gen_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss, Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(generator))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このような書き方もできた。model-zooのPull RequestのDCGANのコードもこのような形式で書いてある。&lt;/p&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gen_grad.grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IdDict&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any,Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; with &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; entries:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0456388, -0.00530366, -0.0689154, 0.0356684, 0.033944, 0.0469224, 0…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0663779 0.470391 0.0135268 0.169848; -0.265991 0.113839 -0.297718 …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1.0491&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0448993, -0.0436305, -0.0396288, -0.0178894, 0.0191187, 0.0322982, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3.05707e-7, -6.56961e-7, -1.86265e-7, 6.1249e-8, 3.40864e-7, 3.57977e…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-2.31666e-8, -1.72295e-7, 4.83415e-8, 2.7474e-8, 2.61934e-8, -9.76142…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.257108, -1.30009, 0.643118, -0.70479, -0.0380322, 0.047996, 0.1616…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1.68035, -1.09166, -1.92644, 0.398565, 0.342392, -0.541331, 0.957729…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.34392, -1.29767, 0.489044, -0.76697, -0.265278, 0.834581, 0.20901,…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-1.86325, -1.0232, -2.0715, -0.0989702, 0.453471, -0.632238, 1.33671,…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.161715 0.358326 1.0731 1.53449; 1.10473 0.652393 -0.844213 0.973572…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.107908 0.042381 … -0.0503733 -0.0570333; 0.141959 -0.0503319 … -0.…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.210451 -0.383133 … -0.441269 -0.122698; 0.0191366 -0.273669 … -0.1…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Tracked&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;0x00000000, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, -2.23517e-8, 2.6077e-8, 0.0, 2.00234e-8, -9.31323e-9, -2.98023e-…
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;一方、v0.10.0では&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gen_grad.grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IdDict&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any,Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; with &lt;span style=&#34;color:#ae81ff&#34;&gt;14&lt;/span&gt; entries:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0396942 0.00191599 0.0301089 0.00723371; 0.0816196 0.036961 0.0352632 0.0343… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;                                                                            &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0002127 0.0137428 … -0.0121552 0.0268332; -0.0131425 -0.00983153 … -0.02382… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0171712 0.00370337 0.0333522 -0.0189711; 0.0416152 -0.0110209 0.0113975 -0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0109217 0.0165013 … -0.0128005 0.000112204; -0.00316031 -0.0308092 … -0.011… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0  …  0.0, 0.0, 0.0, 0.0, 0.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0, 1.0  …  1.0, 1.0, 1.0, 1.0, 1.0, … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; nothing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;微分が &lt;code&gt;nothing&lt;/code&gt; になってしまう。自分は、下のように書き換えた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;noise &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; randn(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float32&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss(m) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(discriminator(m(noise)))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gen_grad &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gradient(()&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;loss(generator), Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;params(generator))
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; gen_grad.grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;IdDict&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any,Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt; with &lt;span style=&#34;color:#ae81ff&#34;&gt;23&lt;/span&gt; entries:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)}(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0396942 0.00191599 0.… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.136635 -0.1123 -0.0335189 -0.108103; -0.0265187 -0…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}())&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-2.7719e-10, 3.03544e-11, 2.1797e-10, 2.24403e-10, 2.26078e-…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)}(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}())&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0109217 0.0165013 … … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.00735242 0.000570209 … 0.00351829 0.0103457; 0.0116238 -0…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00270601, -0.0176082, 0.00565182, 0.0125242, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  BatchNorm&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;128, λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; relu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;         &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing, β &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00270601, -0.…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}}(&lt;/span&gt;Val&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;2&lt;span style=&#34;color:#f92672&#34;&gt;}())&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)}(&lt;/span&gt;^&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;           &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing,&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.00987214, -0.0315625, 0.0199244, 0.0148943, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00182929, 0.00162896, 0.00011289, 0.00182924,…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0002127 0.0137428 … … &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00630109 0.0134955 … 0.0117517 0.000913039; -0.0059…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 1.0, 1.0, 1.0, 1.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0303094, -0.028408, 0.0697083, -0.00634472, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0158277, -0.0324276, 0.0719301, 0.00790212, …
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00251813, 0.00111592, -0.000486438, 0.0019682…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  BatchNorm&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;64, λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; relu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;          &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing, β &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.0158277, -0.…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0171712 0.00370337 0.… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00725331 -0.00364046 -0.000333806 -0.00218348; 0.00…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;                     &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-0.426291&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-9.77911e-11, -9.91324e-11, -7.81544e-10, -2.83712e-11, -4.1…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.0, 0.0, 0.0, 0.0, 0.0… &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;5.82077e-11, -6.54836e-11, -5.45697e-12, -3.49246e-10, -2.25…
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  BatchNorm&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;12544, λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; relu&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;       &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&amp;gt; RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}((&lt;/span&gt;λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; nothing, β &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; AbstractFloat&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;0.00251813, 0.0…
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Zygoteでは上のようなimplicit parametersの書き方だけではなく、explicitな書き方 &lt;code&gt;gradient(loss, generator)&lt;/code&gt; による微分も可能で、
Zygote.jlの &lt;a href=&#34;https://fluxml.ai/Zygote.jl/latest/#Gradients-of-ML-models-1&#34;&gt;Gradients of ML models&lt;/a&gt; にはimplicitな書き方は、
Trackerとの互換性のために残してあると書いてある。&lt;/p&gt;
&lt;p&gt;しかしながら、この二つを利用したときに返ってくる型が異なる&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gen_grad&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Zygote.Grads
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;gradient&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;loss, generator&lt;span style=&#34;color:#f92672&#34;&gt;))&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:layers,&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:W, :b, :σ&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,2&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;,Base.RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:σ, :weight, :bias, :stride, :pad, :dilation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;,Base.RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:σ, :weight, :bias, :stride, :pad, :dilation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}&lt;/span&gt;,Base.RefValue&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,NamedTuple&lt;span style=&#34;color:#f92672&#34;&gt;{(&lt;/span&gt;:σ, :weight, :bias, :stride, :pad, :dilation&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,4&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Tuple&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;,Nothing,Nothing&lt;span style=&#34;color:#f92672&#34;&gt;}}}}}}&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ため、&lt;a href=&#34;https://github.com/FluxML/Flux.jl/blob/v0.10.0/src/optimise/train.jl#L13&#34;&gt;&lt;code&gt;update!&lt;/code&gt;&lt;/a&gt; を使ってモデルパラメータを更新しようとすると、
implicitに書く必要がある。このあたりは、将来的に変わっていく可能性もありそう。&lt;/p&gt;
&lt;h3 id=&#34;zero_grad-が不要に&#34;&gt;zero_grad! が不要に&lt;/h3&gt;
&lt;p&gt;DCGANでDiscriminator, Generatorを交互に学習させる時、TrackerではDiscriminatorを学習させた後
&lt;code&gt;zero_grad!&lt;/code&gt; 使ってを勾配を0にしないと正しく学習されなかった
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/111#discussion_r341396388&#34;&gt;https://github.com/FluxML/model-zoo/pull/111#discussion_r341396388&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/FluxML/model-zoo/pull/111#discussion_r341847127&#34;&gt;https://github.com/FluxML/model-zoo/pull/111#discussion_r341847127&lt;/a&gt;&lt;br&gt;
が、Zygote.jlではその必要がなくなっている。
v0.9.0でこれに気づかず正しく学習が進まず苦戦したので、この修正はありがたい。&lt;/p&gt;
&lt;p&gt;v0.9.0&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Chain(d1, d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pall &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(c)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(c(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, pall)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p1)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p2)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# zero out for next case&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zero_grad!&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grad&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(p1))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zero_grad!&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grad&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(p2))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case3&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p1)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;zero_grad!&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grad&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(p2))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Flux&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Tracker&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;gradient(loss, p2)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-6.40395 -5.80043&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-4.58864&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-15.8992&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-6.40395 -5.80043&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-15.8992&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-9.17728&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;20.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case3
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-6.40395 -5.80043&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-15.8992&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-4.58864&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;tracked&lt;span style=&#34;color:#f92672&#34;&gt;)]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;上のCase2のような状況を防ぐために、Case3のように途中に&lt;code&gt;zero_grad!&lt;/code&gt;を挟む必要があった。
一方、v0.10.0は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Flux
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;d2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dense(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Chain(d1, d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d1)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;p2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(d2)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;pall &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params(c)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;loss() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sum(c(x))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case1&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gradient(loss, pall)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#a6e22e&#34;&gt;@info&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Case2&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gradient(loss, p1)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;gradient(loss, p2)&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;grads &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; values &lt;span style=&#34;color:#f92672&#34;&gt;|&amp;gt;&lt;/span&gt; println
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Output&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case1
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;9.715003&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3.7775292 4.41461&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-5.8413825&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt; Info: Case2
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;9.715003&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;3.7775292 4.41461&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Any&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;10.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;, Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;-5.8413825&lt;span style=&#34;color:#f92672&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と正しく計算できる。&lt;/p&gt;
&lt;h2 id=&#34;fluxistraining&#34;&gt;Flux.istraining()&lt;/h2&gt;
&lt;p&gt;&lt;code&gt;testmode!&lt;/code&gt; が廃止されて &lt;code&gt;istraining&lt;/code&gt; になった。&lt;code&gt;@eval Flux.istraining() = true&lt;/code&gt; と &lt;code&gt;@eval Flux.istraining() = false&lt;/code&gt; で切り替えると思われるが正直よく分かっていない。&lt;br&gt;
今までモデル単位で設定していたのがグローバルな設定となり、機能性について&lt;br&gt;
&lt;a href=&#34;https://github.com/FluxML/Flux.jl/issues/909&#34;&gt;Limitation of &lt;code&gt;Flux.istraining()&lt;/code&gt; #909&lt;/a&gt;&lt;br&gt;
このようなissueが立っているのでここも変更の可能性がありそう。&lt;/p&gt;
&lt;p&gt;以下は他に気づいた点。&lt;/p&gt;
&lt;h2 id=&#34;常にfloat32を使う&#34;&gt;常にFloat32を使う&lt;/h2&gt;
&lt;p&gt;これはバージョンは関係ない話で、
&lt;a href=&#34;https://fluxml.ai/Flux.jl/stable/performance/#Don&#39;t-use-more-precision-than-you-need.-1&#34;&gt;Don&amp;rsquo;t use more precision than you need.&lt;/a&gt; には、必ずしも &lt;code&gt;Float64&lt;/code&gt; を使う必要はなく、 &lt;code&gt;Float32&lt;/code&gt; を使えば良いとある。&lt;/p&gt;
&lt;p&gt;何も考えずにJuliaで実数型を使うと &lt;code&gt;Float64&lt;/code&gt; になるので、明示的に &lt;code&gt;Float32&lt;/code&gt; を使う意識が必要。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Float64
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 2.0, 3.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3-element Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float64,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 3.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; typeof&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;1.0f0&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Float32
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&amp;gt; Float32&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;1.0, 2.0, 3.0&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;3-element Array&lt;span style=&#34;color:#f92672&#34;&gt;{&lt;/span&gt;Float32,1&lt;span style=&#34;color:#f92672&#34;&gt;}&lt;/span&gt;:
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 1.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 2.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt; 3.0
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これと関連して、&lt;a href=&#34;https://fluxml.ai/Flux.jl/stable/performance/#Make-sure-your-activation-and-loss-functions-preserve-the-type-of-their-inputs-1&#34;&gt;Make sure your activation and loss functions preserve the type of their inputs&lt;/a&gt;
に書いてあることではあるが、&lt;code&gt;Float64&lt;/code&gt; と &lt;code&gt;Float32&lt;/code&gt; の変換が起こらないようにする。&lt;/p&gt;
&lt;p&gt;例えば、&lt;code&gt;Float32&lt;/code&gt; を使ってモデル構築をしているのに、&lt;code&gt;leakyrelu&lt;/code&gt; の勾配を変更して&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;leakyrelu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;と書いてしまうと &lt;code&gt;0.2&lt;/code&gt; の型が &lt;code&gt;Float64&lt;/code&gt; であるため、型の変換が行われて激烈に遅くなる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;x&lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt;leakyrelu&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.2f0&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とするのが良い。自分は最初これを知らず前者のように書いてしまい、一向に計算が終わらなくなってしまい時間を浪費した。
&lt;code&gt;logitbinarycrossentropy&lt;/code&gt; に &lt;code&gt;0&lt;/code&gt;, &lt;code&gt;1&lt;/code&gt; ではなく &lt;code&gt;0f0&lt;/code&gt;, &lt;code&gt;1f0&lt;/code&gt;を渡したのも同様の理由。&lt;/p&gt;
&lt;h2 id=&#34;生成結果&#34;&gt;生成結果&lt;/h2&gt;
&lt;p&gt;MNISTを使って、バッチサイズ128、30エポック(14,000イテレーション)回した結果、&lt;/p&gt;
&lt;p&gt;iterations = 0&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_000000.png&#34; alt=&#34;0 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 1,000&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_001000.png&#34; alt=&#34;1,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 2,500&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_002500.png&#34; alt=&#34;2,500 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 5,000&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_005000.png&#34; alt=&#34;5,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 10,000&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_010000.png&#34; alt=&#34;10,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;iterations = 14,000 (最後)&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_steps_014000.png&#34; alt=&#34;14,000 steps&#34;&gt;&lt;/p&gt;
&lt;p&gt;アニメーション&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_animation.gif&#34; alt=&#34;Generated digits&#34;&gt;&lt;/p&gt;
&lt;p&gt;損失関数&lt;br&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/fluxjl-dcgan_loss.png&#34; alt=&#34;loss&#34;&gt;&lt;/p&gt;
&lt;p&gt;と数字っぽい画像が無事に生成できた。&lt;/p&gt;
&lt;h3 id=&#34;まとめ&#34;&gt;まとめ&lt;/h3&gt;
&lt;p&gt;Google Colaboratory上でお気楽に環境やモデル構築ができるTensorflowに比べるとFlux.jlは環境構築やリファレンスの少なさで苦労することはあるかもしれないが、
開発はアクティブに行われているので、今後の発展が楽しみである。自分も、また色々試してみたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程と機械学習: 3.5まで</title>
      <link>https://matsueushi.github.io/posts/gp-nlp-2/</link>
      <pubDate>Sun, 19 May 2019 22:37:52 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-nlp-2/</guid>
      <description>&lt;p&gt;引き続き「ガウス過程と機械学習(第二刷)」を読み進めJuliaで実装している。&lt;/p&gt;
&lt;p&gt;ハイパーパラメーターの最適化(勾配を使わず、Optim.jlの &lt;code&gt;optimize&lt;/code&gt; を使ってしまった)のところまで読み進めた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.4.2のガウス過程回帰の計算を行う際、予測分布の分散共分散行列が計算誤差の影響で対称行列にならずエラーが発生することがあったので、場合によっては対称化が必要。&lt;/li&gt;
&lt;li&gt;図3.16のガウスカーネル&lt;br&gt;
\(
\begin{aligned}
k(x, x^\prime) = \theta_1 \exp \left( - \frac{|x-x^\prime|^2}{\theta_2} \right)
\end{aligned}
\)
のパラメーター推定で、\( (\theta_1, \theta_2, \theta_3)=(1, 0.4, 0.1) \) とすると下のようになり本と違ってしまった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_posterior_1.png&#34; alt=&#34;(1, 0.4, 0.1) の事後分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( (\theta_1, \theta_2, \theta_3)=(1, 0.4, 0.01) \) とすると近い図になる(全く同じには見えない)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_posterior_2.png&#34; alt=&#34;(1, 0.4, 0.01) の事後分布&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尤度の計算が合わなかった。尤度を図示した図3.16で-5未満を切り捨てるとうまくいかなかった。20以下を切り捨てると近い図になった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_logp.png&#34; alt=&#34;尤度(2次元)&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_logp_3d.png&#34; alt=&#34;尤度(3次元)&#34;&gt;&lt;/p&gt;
&lt;p&gt;本文の局所解(ii)に該当する点の尤度は-2.0299となり本文の-1.934とは違ってしまった。&lt;/p&gt;
&lt;p&gt;図3.20のパラメーター推定は正しくできたが、こちらも対数尤度が違ってしまった((a):本文-1.788、実装-1.738, (b):本文-2.174, 実装-2.5029)
詳細は下のレポジトリ、ノートブックを見て下さい。更新は下のMedium用のブランチではなく、masterの方に行う予定です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp/tree/blog-2019-05-19&#34;&gt;https://github.com/matsueushi/gp_and_mlp/tree/blog-2019-05-19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-19/gp.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-19/gp.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「ガウス過程と機械学習」を読み始めた</title>
      <link>https://matsueushi.github.io/posts/gp-nlp-1/</link>
      <pubDate>Fri, 10 May 2019 22:30:45 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-nlp-1/</guid>
      <description>&lt;p&gt;持橋・大羽の「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」を読み始めた。Juliaでコードを書きながら内容を確かめている。&lt;/p&gt;
&lt;p&gt;本を読むまで定義も理解していなかったレベルだったが、無限次元のガウス分布を考えるというモチベーションから「有限次元に制限すれば(通常の)ガウス分布になるもの」としてガウス過程の定義が出てくるのは非常に自然だと思った。&lt;/p&gt;
&lt;p&gt;分散共分散行列の成分を作る時に使われるカーネル \( k(x,x^\prime) \) は \( x \) と \(x^\prime \) の「近さ」を表す関数とでも考えれば良いのだろうか。&lt;/p&gt;
&lt;p&gt;なんでそういうことを考えるのかという気持ちの部分が丁寧に説明されているので意図がわからずに数式の中に闇雲に迷い込むことなく今の所楽しく読み進められている。&lt;/p&gt;
&lt;p&gt;エラッタ:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/errata.html&#34;&gt;http://chasen.org/~daiti-m/gpbook/errata.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://scrapbox.io/GPandML2019/support&#34;&gt;https://scrapbox.io/GPandML2019/support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.3の「ガウス過程とカーネル」のところまで読んだ。&lt;/p&gt;
&lt;p&gt;自分が躓いた点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“3.2.4 ガウス過程からのサンプル”で図3.9のようなサンプルを実装するときは正則化項を入れないと計算がうまくいかないことがある(1.4 リッジ回帰の部分で触れられている)。著者のサンプルコードでは非常に正則化項として1e-6を導入していた。共分散行列の計算の際に対角成分に正規化項を加えればよい。&lt;/li&gt;
&lt;li&gt;“3.3.1 ガウス過程のRBFカーネル”で、線形モデルの基底関数のグリッドを無限に細かくするとRBFカーネルになると書かれている部分は、本文中の基底関数を使うと \( H \rightarrow \infty \) とした時にカーネル関数がRBF関数に収束しない。基底関数に \( 1 / \sqrt{H} \) を掛けたものを考えればOK&lt;/li&gt;
&lt;li&gt;“3.3.2 さまざまなカーネル”で線形カーネルを実装するときに、カーネル関数は &lt;code&gt;dot(x1, x2)&lt;/code&gt; ではなく、必ず1となる入力の最初の次元も考慮して &lt;code&gt;1 + dot(x1, x2)&lt;/code&gt; とする。他のカーネルの場合は &lt;code&gt;x1 — x2&lt;/code&gt; の計算の段階で消えるので考慮する必要はない&lt;/li&gt;
&lt;li&gt;また、Matérnカーネルを定義する際に、Juliaでは第二種のベッセル関数は &lt;code&gt;SpecialFunctions&lt;/code&gt; の &lt;code&gt;besselk&lt;/code&gt; を使えば良い。ベッセル関数は \( x=0 \) で特異性を持つので、カーネル関数 &lt;code&gt;k(x1, x2)&lt;/code&gt; を定義するときは &lt;code&gt;x1 = x2&lt;/code&gt; の時に条件分岐で1を返すようにすればいい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;カーネルとガウシアン過程を定義したjlファイル:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.jl&#34;&gt;https://github.com/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.3章までのノートブック:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;引き続き3.4章の回帰モデルから読む予定。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>