<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>競プロ on matsueushi</title>
    <link>https://matsueushi.github.io/tags/%E7%AB%B6%E3%83%97%E3%83%AD/</link>
    <description>Recent content in 競プロ on matsueushi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright © 2019–2025</copyright>
    <lastBuildDate>Sat, 16 Jul 2022 20:16:03 +0900</lastBuildDate>
    
	<atom:link href="https://matsueushi.github.io/tags/%E7%AB%B6%E3%83%97%E3%83%AD/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>RustでAtCoderに挑戦</title>
      <link>https://matsueushi.github.io/atcoder/rust-atcoder/</link>
      <pubDate>Sat, 16 Jul 2022 20:16:03 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/rust-atcoder/</guid>
      <description>&lt;p&gt;元々JuliaでAtCoderに挑戦していたのですが、違う言語も触ってみたいと思いRustで最近問題を解いています。
ちょっと触った感じの感想として、Rustの良いところとしては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;意図しないバグが混入しづらい&lt;/li&gt;
&lt;li&gt;速い。&lt;/li&gt;
&lt;li&gt;パッケージシステムが使いやすい&lt;/li&gt;
&lt;li&gt;cargo-competeを使うとvscode上でテストや提出ができて楽&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;逆にちょっと使いづらいと思う点としては、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;抽象度が高く難しい(気がする)&lt;/li&gt;
&lt;li&gt;Rustだとコードが長くなりやすい。Juliaの方が簡潔に書ける。&lt;/li&gt;
&lt;li&gt;AtCoderのRustのバージョンだと使いたい関数が使えない場合がある。(partition_pointなど)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;もう少しRustで挑戦してみようと思います。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;追記(2022/10/2)
環境の作り方を忘れるのでメモ&lt;/p&gt;
&lt;h2 id=&#34;rustのdockerコンテナを用意する&#34;&gt;RustのDockerコンテナを用意する&lt;/h2&gt;
&lt;p&gt;一応pullしてコンテナを作る&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker pull rust
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% docker run -p 8888:8888 --name &amp;lt;name&amp;gt; -it -v &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;pwd&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;:/home/jovyan/work rust
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;コンテナvscodeを整える&#34;&gt;コンテナ・VSCodeを整える&lt;/h2&gt;
&lt;p&gt;いつものおまじない&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% apt-get update
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% apt-get install git tree
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;をやっておく。
VSCodeでアタッチして、コンテナの中に入ってフォルダを開く。VSCodeにはrust-analyzerをインストールする。&lt;/p&gt;
&lt;h2 id=&#34;rustのバージョンを設定する&#34;&gt;Rustのバージョンを設定する&lt;/h2&gt;
&lt;p&gt;現在使用中のRustのバージョンを確認すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% rustc -V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rustc 1.64.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;a55dd71d5 2022-09-19&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;2022年9月現在AtCoderで使えるRustは1.42.0である。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% rustup default 1.42.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% rustc -V
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rustc 1.42.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;b8cedc004 2020-03-09&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでバージョンを1.42.0にできた。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;% cargo run
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;   Compiling yakumo v0.1.0 &lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;/home/jovyan/work&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    Finished dev &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;unoptimized + debuginfo&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; target&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;s&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt; in 2.25s
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;     Running &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;target/debug/yakumo&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Hello, world!
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;フォーマッターをインストールする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;rustup component add rustfmt
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://rusty.pages.dev/rust-1.42.0-for-atcoder/&#34;&gt;【AtCoder用】Rust 1.42.0 のインストール＆設定方法&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;rust-analyzer-を直す&#34;&gt;rust-analyzer を直す&lt;/h2&gt;
&lt;p&gt;VSCodeのシェルのOUTPUT-&amp;gt;Rust Analyzer Language Serverを見ると&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;ERROR rust_analyzer::lsp_utils&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; rust-analyzer failed to load workspace: Failed to find sysroot &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; Cargo.toml file /home/jovyan/work/Cargo.toml. Is rust-src installed?: can&lt;span style=&#34;color:#960050;background-color:#1e0010&#34;&gt;&amp;#39;&lt;/span&gt;t load standard library from sysroot
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;/usr/local/rustup/toolchains/1.42.0-x86_64-unknown-linux-gnu
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;(&lt;/span&gt;discovered via &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;rustc --print sysroot&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;)&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;try installing the Rust source the same way you installed rustc
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;のようなエラーになっている。https://github.com/rust-lang/rust-analyzer/pull/10457#issuecomment-947915233 を参考にして&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;ln -s &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;rustc --print sysroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/lib/rustlib/src/rust/src &lt;span style=&#34;color:#66d9ef&#34;&gt;$(&lt;/span&gt;rustc --print sysroot&lt;span style=&#34;color:#66d9ef&#34;&gt;)&lt;/span&gt;/lib/rustlib/src/rust/library
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;とやると動くようになる。（自己責任）&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>JuliaでAtCoderに挑戦</title>
      <link>https://matsueushi.github.io/atcoder/julia-atcoder/</link>
      <pubDate>Fri, 04 Feb 2022 23:09:38 +0900</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/julia-atcoder/</guid>
      <description>&lt;p&gt;去年は色々と忙しくじっくり勉強する時間がなかったので、リハビリを兼ねて競技プログラミングの問題をJuliaで挑戦してみることにします。&lt;/p&gt;
&lt;p&gt;ひとまず、AtCoderの&lt;a href=&#34;https://atcoder.jp/contests/typical90&#34;&gt;競プロ典型 90 問&lt;/a&gt;を解いて行く予定です。
ジャッジ時にJITコンパイルが走って200~300ms程度消費してしまいますが、幸い今のところTLEでどう頑張っても通せない問題はなかったです。&lt;/p&gt;
&lt;p&gt;下に解答を記録していこうと思います。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/CompetitiveProgramming&#34;&gt;https://github.com/matsueushi/CompetitiveProgramming&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;さてはて、いつまで続くやら。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;2022/6/7 追記 (随時更新)&lt;/p&gt;
&lt;p&gt;ちょっとしたテクニック&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;入力&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parseint() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, readline())
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;parseints() &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parse&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, split(readline()))
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; parsepoints(n&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs, ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, n), zeros(&lt;span style=&#34;color:#66d9ef&#34;&gt;Int&lt;/span&gt;, n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        xs[i], ys[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; parseints()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    xs, ys
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; parsestrings(n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ss &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;String&lt;/span&gt;}(undef, n)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;        ss[i] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; readline()
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;    ss
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このようなテンプレートを作っておくと便利&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;パッケージのバージョンを確認する
ローカルの実行環境をジャッジと合わせておかないと、予期しないエラーが起こる可能性あり。
コードテストで&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;println(Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;status())
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;を実行すると使われているパッケージのバージョンが分かります。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;Status &lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;~/.julia/environments/v1.4/Project.toml&lt;span style=&#34;color:#e6db74&#34;&gt;`&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;864edb3b&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; DataStructures v0.17.11
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;  &lt;span style=&#34;color:#f92672&#34;&gt;[&lt;/span&gt;27ebfcd6&lt;span style=&#34;color:#f92672&#34;&gt;]&lt;/span&gt; Primes v0.4.0
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;nothing
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;StringからVector{Char}への変換&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;cs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Vector&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Char&lt;/span&gt;}(s)
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;ul&gt;
&lt;li&gt;負の数の剰余&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4;&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;julia&lt;span style=&#34;color:#f92672&#34;&gt;&amp;gt;&lt;/span&gt; mod(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
&lt;/span&gt;&lt;/span&gt;&lt;span style=&#34;display:flex;&#34;&gt;&lt;span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>AtCoderメモ書き</title>
      <link>https://matsueushi.github.io/atcoder/memo/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://matsueushi.github.io/atcoder/memo/</guid>
      <description>&lt;p&gt;自分用のメモです。&lt;/p&gt;
&lt;h3 id=&#34;waの時に確認すべきこと&#34;&gt;WAの時に確認すべきこと&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;問題文は正しく読めているか？&lt;/li&gt;
&lt;li&gt;オーバーフローしていないか？&lt;/li&gt;
&lt;li&gt;998244353や10^9+7で割った余りを求めるタイプの場合、余りを取っているか？
負の値を足している時、&lt;code&gt;res = (res % P + P) % P&lt;/code&gt;のようなケアをしているか？&lt;/li&gt;
&lt;li&gt;二分探索をしている時、最小値、最大値に到達できるか？&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;探索&#34;&gt;探索&lt;/h2&gt;
&lt;h3 id=&#34;dfs&#34;&gt;DFS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc138/tasks/abc138_d&#34;&gt;ABC 138 D - Ki&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc240/tasks/abc240_e&#34;&gt;E - Ranges on Tree&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc213/tasks/abc213_d&#34;&gt;D - Takahashi Tour&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;木を辿る&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc220/tasks/abc220_f&#34;&gt;ABC 220 F - Distance Sums 2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bfs&#34;&gt;BFS&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc151/tasks/abc151_d&#34;&gt;ABC 151 D - Maze Master&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc088/tasks/abc088_d&#34;&gt;ABC 088 D - Grid Repainting&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;bit全探索&#34;&gt;Bit全探索&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc147/tasks/abc147_c&#34;&gt;ABC 147 C - HonestOrUnkind2&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;dp&#34;&gt;DP&lt;/h2&gt;
&lt;h3 id=&#34;1次元&#34;&gt;1次元&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc034/tasks/agc034_a&#34;&gt;AGC 034 A - Kenken Race&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;2次元&#34;&gt;2次元&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc183/tasks/abc183_e&#34;&gt;ABC 183 E - Queen on Grid&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/agc043/tasks/agc043_a&#34;&gt;AGC 043 A - Range Flip Find Route&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;桁dp&#34;&gt;桁DP&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc154/tasks/abc154_e&#34;&gt;ABC 154 E Almost Everywhere Zero&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;タイリング敷き詰め&#34;&gt;タイリング/敷き詰め&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;蟻本 p.p. 177 ドミノ敷き詰め&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_aw&#34;&gt;アルゴリズムと数学　演習問題集 057 - Domino Tiling&lt;/a&gt; 紛らわしい例&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ナップザック問題&#34;&gt;ナップザック問題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc153/tasks/abc153_e&#34;&gt;ABC 153 E - Crested Ibis vs Monster&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ぐるぐる遷移していくやつ&#34;&gt;ぐるぐる遷移していくやつ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/abc167_d&#34;&gt;アルゴリズムと数学　演習問題集 062 - Teleporter&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区間スケジュール問題&#34;&gt;区間スケジュール問題&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://algo-method.com/tasks/363/editorial&#34;&gt;区間スケジューリング問題 | アルゴ式&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/keyence2020/tasks/keyence2020_b&#34;&gt;キーエンス2020 B Robot Arms&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_bn&#34;&gt;アルゴリズムと数学　演習問題集 082 - Interval Scheduling Problem&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;数列整数&#34;&gt;数列/整数&lt;/h2&gt;
&lt;h3 id=&#34;約数&#34;&gt;約数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc134/tasks/abc134_d&#34;&gt;ABC 134 D - Preparing Boxes&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;素数&#34;&gt;素数&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc084/tasks/abc084_d&#34;&gt;ABC 084 D - 2017-like Number&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;フィボナッチ数列漸化式&#34;&gt;フィボナッチ数列/漸化式&lt;/h3&gt;
&lt;p&gt;行列演算&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ap&#34;&gt;アルゴリズムと数学　演習問題集 049 Fibonacci Easy (mod 1000000007)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_at&#34;&gt;アルゴリズムと数学　演習問題集 054 - Fibonacci Hard (mod 1000000000)&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_au&#34;&gt;アルゴリズムと数学　演習問題集 055 - Recurrence Formula 1&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_av&#34;&gt;アルゴリズムと数学　演習問題集 056 - Recurrence Formula 1&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;数列の連続する項目の差の絶対値に注目&#34;&gt;数列の連続する項目の差の絶対値に注目&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc253/tasks/abc253_e&#34;&gt;ABC 253 E Distance Sequence&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;幾何&#34;&gt;幾何&lt;/h2&gt;
&lt;h3 id=&#34;三角形&#34;&gt;三角形&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc143/tasks/abc143_d&#34;&gt;ABC 143 D - Triangles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;円の交点&#34;&gt;円の交点&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ag&#34;&gt;アルゴリズムと数学　演習問題集 035 - Two Circles&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;凸性&#34;&gt;凸性&lt;/h3&gt;
&lt;p&gt;外積で判定できる&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://perogram.hateblo.jp/entry/2020/09/25/035159&#34;&gt;外積で凸性判定 - perogram&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc266/tasks/abc266_c&#34;&gt;ABC266 C - Convex Quadrilateral&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;グラフ&#34;&gt;グラフ&lt;/h2&gt;
&lt;h3 id=&#34;二部グラフ判定&#34;&gt;二部グラフ判定&lt;/h3&gt;
&lt;p&gt;DFS&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/math_and_algorithm_ao&#34;&gt;アルゴリズムと数学　演習問題集 047 - Bipartite Graph&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ダイクストラ&#34;&gt;ダイクストラ&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc252/tasks/abc252_e&#34;&gt;ABC 252 E Road Reduction&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;ワーシャルフロイド&#34;&gt;ワーシャルフロイド&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc079/tasks/abc079_d&#34;&gt;ABC 079 D - Wall&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;橋&#34;&gt;橋&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://nupioca.hatenadiary.jp/entry/2013/11/03/200006&#34;&gt;橋（bridge）検出アルゴリズム - nupiocaの日記&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc075/tasks/abc075_c&#34;&gt;ABC 075 C - Bridge&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;閉路&#34;&gt;閉路&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc266/tasks/abc266_f&#34;&gt;ABC 266 F - Well-defined Path Queries on a Namori&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;lca&#34;&gt;LCA&lt;/h3&gt;
&lt;p&gt;蟻本 pp.292&lt;/p&gt;
&lt;p&gt;\(d(u,v)=depth(u)+depth(v)-2depth(lca(u,v))\)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://twitter.com/e869120/status/1391218516129312768&#34;&gt;競プロ典型90問 35日目解説@e869120&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;セグメント木&#34;&gt;セグメント木&lt;/h2&gt;
&lt;h3 id=&#34;fenwick-tree&#34;&gt;Fenwick Tree&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc253/tasks/abc253_f&#34;&gt;ABC 254 F - Operations on a Matrix&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;通常のセグメント木&#34;&gt;通常のセグメント木&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc185/tasks/abc185_f&#34;&gt;ABC 165 F - Range Xor Query&lt;/a&gt; XOR&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;区間和&#34;&gt;区間和&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://imoz.jp/algorithms/imos_method.html&#34;&gt;いもす法&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;アルゴリズムと数学　演習問題集 041&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/matsueushi/CompetitiveProgrammingInRust/blob/eab196022fc95a0fe449b7ad21bac8c857f5a440/tessoku-book/src/bin/a08.rs&#34;&gt;https://github.com/matsueushi/CompetitiveProgrammingInRust/blob/eab196022fc95a0fe449b7ad21bac8c857f5a440/tessoku-book/src/bin/a08.rs&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;h2 id=&#34;その他&#34;&gt;その他&lt;/h2&gt;
&lt;h3 id=&#34;座標圧縮&#34;&gt;座標圧縮&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://algo-logic.info/coordinate-compress/&#34;&gt;座標圧縮の解説（1次元から2次元の圧縮まで）&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;括弧&#34;&gt;括弧&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc064/tasks/abc064_d&#34;&gt;ABC 064 D - Insertion&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;マンハッタン距離&#34;&gt;マンハッタン距離&lt;/h3&gt;
&lt;p&gt;45度回転が有用。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/abc178/tasks/abc178_e&#34;&gt;ABC E - Dist Max&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;チェスのナイト&#34;&gt;チェスのナイト&lt;/h3&gt;
$$ 
    \begin{aligned}
        \left(
        \begin{matrix}
            x \\\ 
            y
        \end{matrix}
        \right) = 
        \left(
        \begin{matrix}
            1 &amp; 2 \\\ 
            2 &amp; 1
        \end{matrix}
        \right) 
        \left(
        \begin{matrix}
            s \\\ 
            t
        \end{matrix}
        \right)
    \end{aligned}
$$$$ 
    \begin{aligned}
        \left(
        \begin{matrix}
            s \\\ 
            t
        \end{matrix}
        \right) = 
        -\frac{1}{3}
        \left(
        \begin{matrix}
            1 &amp; -2 \\\ 
            -2 &amp; 1
        \end{matrix}
        \right) 
        \left(
        \begin{matrix}
            x \\\ 
            y
        \end{matrix}
        \right) 
    \end{aligned}
$$&lt;p&gt;
を考えることにより縦横の単純な移動に変換する。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;蟻本 pp.353 Endless Knight&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://atcoder.jp/contests/math-and-algorithm/tasks/abc145_d&#34;&gt;アルゴリズムと数学　演習問題集 052 - Knight&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
  </channel>
</rss>