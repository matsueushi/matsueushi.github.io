<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>GaussianProcess on matsueushi</title>
    <link>https://matsueushi.github.io/tags/gaussianprocess/</link>
    <description>Recent content in GaussianProcess on matsueushi</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja</language>
    <copyright>Copyright © 2019–2020</copyright>
    <lastBuildDate>Sun, 04 Aug 2019 11:04:13 -0400</lastBuildDate>
    
	<atom:link href="https://matsueushi.github.io/tags/gaussianprocess/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Juliaのガウス過程ライブラリGaussianProcesses.jlを使う(ハイパーパラメーター推定)</title>
      <link>https://matsueushi.github.io/posts/gaussianprocess-jl-2/</link>
      <pubDate>Sun, 04 Aug 2019 11:04:13 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gaussianprocess-jl-2/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;../gaussianprocess-jl/&#34;&gt;前回&lt;/a&gt; の続き。GaussianProcesses.jlを使ってガウス過程回帰のハイパーパラメータ推定を行ってみる。
「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」の図3.20(a)を例とする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xxs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
yys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]

scatter(xxs, yys)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip8400&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip8400)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip8401&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip8400)&#34; points=&#34;
161.394,1503.47 2321.26,1503.47 2321.26,47.2441 161.394,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip8402&#34;&gt;
    &lt;rect x=&#34;161&#34; y=&#34;47&#34; width=&#34;2161&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  513.609,1503.47 513.609,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1095.78,1503.47 1095.78,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1677.96,1503.47 1677.96,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2260.13,1503.47 2260.13,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,1290.54 2321.26,1290.54 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,1032.95 2321.26,1032.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,775.359 2321.26,775.359 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,517.771 2321.26,517.771 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8402)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  161.394,260.183 2321.26,260.183 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1503.47 161.394,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  513.609,1503.47 513.609,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1095.78,1503.47 1095.78,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1677.96,1503.47 1677.96,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2260.13,1503.47 2260.13,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1290.54 193.792,1290.54 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,1032.95 193.792,1032.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,775.359 193.792,775.359 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,517.771 193.792,517.771 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  161.394,260.183 193.792,260.183 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 513.609, 1557.47)&#34; x=&#34;513.609&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1095.78, 1557.47)&#34; x=&#34;1095.78&#34; y=&#34;1557.47&#34;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1677.96, 1557.47)&#34; x=&#34;1677.96&#34; y=&#34;1557.47&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2260.13, 1557.47)&#34; x=&#34;2260.13&#34; y=&#34;1557.47&#34;&gt;3&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 1308.04)&#34; x=&#34;137.394&#34; y=&#34;1308.04&#34;&gt;0.9&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 1050.45)&#34; x=&#34;137.394&#34; y=&#34;1050.45&#34;&gt;1.2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 792.859)&#34; x=&#34;137.394&#34; y=&#34;792.859&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 535.271)&#34; x=&#34;137.394&#34; y=&#34;535.271&#34;&gt;1.8&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 137.394, 277.683)&#34; x=&#34;137.394&#34; y=&#34;277.683&#34;&gt;2.1&lt;/text&gt;
&lt;/g&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;222.522&#34; cy=&#34;1462.26&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;222.522&#34; cy=&#34;1462.26&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;804.696&#34; cy=&#34;517.771&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;804.696&#34; cy=&#34;517.771&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1095.78&#34; cy=&#34;603.634&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;1095.78&#34; cy=&#34;603.634&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1328.65&#34; cy=&#34;88.4582&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;1328.65&#34; cy=&#34;88.4582&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;2260.13&#34; cy=&#34;1204.67&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8402)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;2260.13&#34; cy=&#34;1204.67&#34; r=&#34;14&#34;/&gt;
&lt;polygon clip-path=&#34;url(#clip8400)&#34; points=&#34;
1958.43,251.724 2249.26,251.724 2249.26,130.764 1958.43,130.764 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip8400)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1958.43,251.724 2249.26,251.724 2249.26,130.764 1958.43,130.764 1958.43,251.724 
  &#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8400)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;2066.43&#34; cy=&#34;191.244&#34; r=&#34;25&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip8400)&#34; style=&#34;fill:#009af9; stroke:none; fill-opacity:1&#34; cx=&#34;2066.43&#34; cy=&#34;191.244&#34; r=&#34;21&#34;/&gt;
&lt;g clip-path=&#34;url(#clip8400)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:start;&#34; transform=&#34;rotate(0, 2150.43, 208.744)&#34; x=&#34;2150.43&#34; y=&#34;208.744&#34;&gt;y1&lt;/text&gt;
&lt;/g&gt;
&lt;/svg&gt;
&lt;p&gt;平均0のガウスカーネルのガウス過程に(ノイズ項込みで)フィッティングさせるのは非常に簡単で、&lt;code&gt;optimize!&lt;/code&gt; を呼べば良いだけ。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GP(xxs, yys, MeanZero(), SE(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;))
optimize!(gp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: L-BFGS
 * Starting Point: [-2.0,0.0,0.0]
 * Minimizer: [-1.250611250087999,0.5939445695924219, ...]
 * Minimum: 5.464078e+00
 * Iterations: 10
 * Convergence: true
   * |x - x&#39;| ≤ 0.0e+00: false 
     |x - x&#39;| = 1.80e-09 
   * |f(x) - f(x&#39;)| ≤ 0.0e+00 |f(x)|: false
     |f(x) - f(x&#39;)| = 1.63e-16 |f(x)|
   * |g(x)| ≤ 1.0e-08: true 
     |g(x)| = 1.23e-14 
   * Stopped by an increasing objective: false
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 26
 * Gradient Calls: 26
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;パラメーターを確認すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;print(gp)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;GP Exact object:
 Dim = 1
 Number of observations = 5
 Mean function:
   Type: MeanZero, Params: Float64[]
 Kernel:
   Type: SEIso{Float64}, Params: [0.593945, 0.233886]
 Input observations = 
[-0.5 0.5 1.0 1.4 3.0]
 Output observations = [0.7, 1.8, 1.7, 2.3, 1.0]
 Variance of observation noise = 0.08198471101193598
 Marginal Log-Likelihood = -5.464
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;「ガウス過程と機械学習」では、カーネルは
$$
k(\mathbf{x}, \mathbf{x}^\prime | \bm{\theta}) = \theta_1 \exp \left( - \frac{|\mathbf{x} - \mathbf{x}^\prime|^2}{\theta_2}\right) + \theta_3 \delta(\mathbf{x}, \mathbf{x}^\prime)
$$
となっていて、推定結果は \((\theta_1, \theta_2, \theta_3)=(1.596,6.560,0.082)\) とされている。
\(\theta_3\)は&lt;code&gt;Variance of observation noise&lt;/code&gt;の&lt;code&gt;0.08198471101193598&lt;/code&gt;とそのまま一致。
&lt;code&gt;SEIso&lt;/code&gt;のカーネル関数は
$$
k(\mathbf{x}, \mathbf{x}^\prime) = \sigma^2 \exp \left( - \frac{(\mathbf{x} - \mathbf{x}^\prime)^\top(\mathbf{x} - \mathbf{x}^\prime))}{2l^2}\right)
$$
で、パラメーターは \(l\) と \(\sigma\) の対数をとった &lt;code&gt;ll&lt;/code&gt; と &lt;code&gt;lσ&lt;/code&gt; だから
\(\theta_1 = \exp(2 * l\sigma), \theta_2=2 * \exp(2 * ll)\) という変換で対応できる。
&lt;code&gt;SEIso&lt;/code&gt; のメンバー変数 &lt;code&gt;σ2&lt;/code&gt; と &lt;code&gt;ℓ2&lt;/code&gt; を使って確認すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;theta1: &amp;#34;&lt;/span&gt;, gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;σ2)
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;theta2: &amp;#34;&lt;/span&gt;, gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;ℓ2 &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;theta1: 1.5964347486496255
theta2: 6.560299908989858
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり、同じ結果が得られている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;plot(gp; xlabel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gp.x&amp;#34;&lt;/span&gt;, ylabel&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gp.y&amp;#34;&lt;/span&gt;, legend&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;false&lt;/span&gt;, fmt&lt;span style=&#34;color:#f92672&#34;&gt;=:&lt;/span&gt;png)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip0100&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip0100)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip0101&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip0100)&#34; points=&#34;
224.386,1440.48 2321.26,1440.48 2321.26,47.2441 224.386,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip0102&#34;&gt;
    &lt;rect x=&#34;224&#34; y=&#34;47&#34; width=&#34;2098&#34; height=&#34;1394&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,1440.48 224.386,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  523.94,1440.48 523.94,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  823.493,1440.48 823.493,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1123.05,1440.48 1123.05,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1422.6,1440.48 1422.6,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1722.15,1440.48 1722.15,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2021.71,1440.48 2021.71,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2321.26,1440.48 2321.26,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,1255.7 2321.26,1255.7 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,949.501 2321.26,949.501 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,643.301 2321.26,643.301 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  224.386,337.1 2321.26,337.1 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1440.48 2321.26,1440.48 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1440.48 224.386,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1440.48 224.386,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  523.94,1440.48 523.94,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  823.493,1440.48 823.493,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1123.05,1440.48 1123.05,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1422.6,1440.48 1422.6,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1722.15,1440.48 1722.15,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2021.71,1440.48 2021.71,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2321.26,1440.48 2321.26,1419.58 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1255.7 255.839,1255.7 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,949.501 255.839,949.501 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,643.301 255.839,643.301 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,337.1 255.839,337.1 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 224.386, 1494.48)&#34; x=&#34;224.386&#34; y=&#34;1494.48&#34;&gt;-0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 523.94, 1494.48)&#34; x=&#34;523.94&#34; y=&#34;1494.48&#34;&gt;0.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 823.493, 1494.48)&#34; x=&#34;823.493&#34; y=&#34;1494.48&#34;&gt;0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1123.05, 1494.48)&#34; x=&#34;1123.05&#34; y=&#34;1494.48&#34;&gt;1.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1422.6, 1494.48)&#34; x=&#34;1422.6&#34; y=&#34;1494.48&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1722.15, 1494.48)&#34; x=&#34;1722.15&#34; y=&#34;1494.48&#34;&gt;2.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2021.71, 1494.48)&#34; x=&#34;2021.71&#34; y=&#34;1494.48&#34;&gt;2.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2321.26, 1494.48)&#34; x=&#34;2321.26&#34; y=&#34;1494.48&#34;&gt;3.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 1273.2)&#34; x=&#34;200.386&#34; y=&#34;1273.2&#34;&gt;0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 967.001)&#34; x=&#34;200.386&#34; y=&#34;967.001&#34;&gt;1.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 660.801)&#34; x=&#34;200.386&#34; y=&#34;660.801&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 200.386, 354.6)&#34; x=&#34;200.386&#34; y=&#34;354.6&#34;&gt;2.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:66px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1272.82, 1590.4)&#34; x=&#34;1272.82&#34; y=&#34;1590.4&#34;&gt;gp.x&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip0100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:66px; text-anchor:middle;&#34; transform=&#34;rotate(-90, 57.6, 743.863)&#34; x=&#34;57.6&#34; y=&#34;743.863&#34;&gt;gp.y&lt;/text&gt;
&lt;/g&gt;
&lt;polygon clip-path=&#34;url(#clip0102)&#34; points=&#34;
224.386,1401.05 245.567,1373.75 266.747,1346.85 287.928,1320.33 309.108,1294.21 330.289,1268.47 351.469,1243.11 372.65,1218.13 393.831,1193.49 415.011,1169.21 
  436.192,1145.25 457.372,1121.62 478.553,1098.3 499.733,1075.27 520.914,1052.54 542.094,1030.08 563.275,1007.91 584.455,986.013 605.636,964.394 626.816,943.058 
  647.997,922.013 669.178,901.269 690.358,880.841 711.539,860.746 732.719,841.005 753.9,821.641 775.08,802.681 796.261,784.155 817.441,766.095 838.622,748.534 
  859.802,731.51 880.983,715.06 902.164,699.224 923.344,684.042 944.525,669.554 965.705,655.801 986.886,642.823 1008.07,630.658 1029.25,619.341 1050.43,608.907 
  1071.61,599.385 1092.79,590.802 1113.97,583.179 1135.15,576.534 1156.33,570.877 1177.51,566.217 1198.69,562.555 1219.87,559.886 1241.05,558.204 1262.23,557.495 
  1283.41,557.742 1304.59,558.926 1325.77,561.023 1346.95,564.006 1368.14,567.848 1389.32,572.518 1410.5,577.986 1431.68,584.219 1452.86,591.185 1474.04,598.85 
  1495.22,607.181 1516.4,616.146 1537.58,625.711 1558.76,635.844 1579.94,646.514 1601.12,657.69 1622.3,669.342 1643.48,681.442 1664.66,693.961 1685.84,706.874 
  1707.02,720.157 1728.2,733.785 1749.39,747.737 1770.57,761.995 1791.75,776.54 1812.93,791.357 1834.11,806.433 1855.29,821.759 1876.47,837.326 1897.65,853.129 
  1918.83,869.168 1940.01,885.444 1961.19,901.962 1982.37,918.73 2003.55,935.762 2024.73,953.074 2045.91,970.685 2067.09,988.619 2088.27,1006.9 2109.45,1025.57 
  2130.63,1044.65 2151.82,1064.18 2173,1084.19 2194.18,1104.73 2215.36,1125.83 2236.54,1147.53 2257.72,1169.85 2278.9,1192.84 2300.08,1216.51 2321.26,1240.88 
  2321.26,589.312 2300.08,574.448 2278.9,558.891 2257.72,542.701 2236.54,525.944 2215.36,508.693 2194.18,491.024 2173,473.016 2151.82,454.75 2130.63,436.309 
  2109.45,417.773 2088.27,399.222 2067.09,380.734 2045.91,362.384 2024.73,344.244 2003.55,326.38 1982.37,308.857 1961.19,291.734 1940.01,275.067 1918.83,258.908 
  1897.65,243.303 1876.47,228.294 1855.29,213.922 1834.11,200.22 1812.93,187.221 1791.75,174.95 1770.57,163.432 1749.39,152.688 1728.2,142.733 1707.02,133.581 
  1685.84,125.242 1664.66,117.724 1643.48,111.03 1622.3,105.161 1601.12,100.116 1579.94,95.8891 1558.76,92.4731 1537.58,89.8578 1516.4,88.0303 1495.22,86.9754 
  1474.04,86.6754 1452.86,87.1103 1431.68,88.2583 1410.5,90.0956 1389.32,92.5968 1368.14,95.735 1346.95,99.4826 1325.77,103.811 1304.59,108.691 1283.41,114.095 
  1262.23,119.995 1241.05,126.363 1219.87,133.174 1198.69,140.406 1177.51,148.037 1156.33,156.05 1135.15,164.431 1113.97,173.168 1092.79,182.253 1071.61,191.682 
  1050.43,201.453 1029.25,211.568 1008.07,222.029 986.886,232.843 965.705,244.015 944.525,255.554 923.344,267.465 902.164,279.755 880.983,292.43 859.802,305.495 
  838.622,318.949 817.441,332.794 796.261,347.026 775.08,361.64 753.9,376.625 732.719,391.969 711.539,407.657 690.358,423.668 669.178,439.981 647.997,456.567 
  626.816,473.398 605.636,490.438 584.455,507.651 563.275,524.996 542.094,542.429 520.914,559.903 499.733,577.37 478.553,594.777 457.372,612.072 436.192,629.2 
  415.011,646.105 393.831,662.732 372.65,679.025 351.469,694.931 330.289,710.396 309.108,725.371 287.928,739.808 266.747,753.663 245.567,766.896 224.386,779.471 
  &#34; fill=&#34;#add8e6&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;0.5&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip0102)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  224.386,1090.26 245.567,1070.32 266.747,1050.25 287.928,1030.07 309.108,1009.79 330.289,989.435 351.469,969.023 372.65,948.575 393.831,928.113 415.011,907.656 
  436.192,887.227 457.372,866.847 478.553,846.537 499.733,826.321 520.914,806.22 542.094,786.256 563.275,766.453 584.455,746.832 605.636,727.416 626.816,708.228 
  647.997,689.29 669.178,670.625 690.358,652.255 711.539,634.201 732.719,616.487 753.9,599.133 775.08,582.16 796.261,565.591 817.441,549.444 838.622,533.742 
  859.802,518.502 880.983,503.745 902.164,489.49 923.344,475.753 944.525,462.554 965.705,449.908 986.886,437.833 1008.07,426.344 1029.25,415.455 1050.43,405.18 
  1071.61,395.534 1092.79,386.528 1113.97,378.174 1135.15,370.482 1156.33,363.464 1177.51,357.127 1198.69,351.48 1219.87,346.53 1241.05,342.283 1262.23,338.745 
  1283.41,335.919 1304.59,333.809 1325.77,332.417 1346.95,331.744 1368.14,331.791 1389.32,332.557 1410.5,334.041 1431.68,336.239 1452.86,339.148 1474.04,342.763 
  1495.22,347.078 1516.4,352.088 1537.58,357.784 1558.76,364.159 1579.94,371.202 1601.12,378.903 1622.3,387.252 1643.48,396.236 1664.66,405.843 1685.84,416.058 
  1707.02,426.869 1728.2,438.259 1749.39,450.212 1770.57,462.714 1791.75,475.745 1812.93,489.289 1834.11,503.327 1855.29,517.84 1876.47,532.81 1897.65,548.216 
  1918.83,564.038 1940.01,580.256 1961.19,596.848 1982.37,613.794 2003.55,631.071 2024.73,648.659 2045.91,666.535 2067.09,684.677 2088.27,703.063 2109.45,721.671 
  2130.63,740.478 2151.82,759.463 2173,778.603 2194.18,797.877 2215.36,817.261 2236.54,836.735 2257.72,856.277 2278.9,875.865 2300.08,895.478 2321.26,915.097 
  &#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;224.386&#34; cy=&#34;1133.22&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;224.386&#34; cy=&#34;1133.22&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;823.493&#34; cy=&#34;459.58&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;823.493&#34; cy=&#34;459.58&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1123.05&#34; cy=&#34;520.821&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1123.05&#34; cy=&#34;520.821&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1362.69&#34; cy=&#34;153.38&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip0102)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1362.69&#34; cy=&#34;153.38&#34; r=&#34;14&#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;上だと点が端ギリギリに配置され結構見ずらい(+ガウス誤差が含まれていない？)ので、ガウス観測誤差も含めた予測結果を自分でプロットすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xtest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape(collect(range(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, stop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;, length &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;)), &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
μ, σ2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; predict_y(gp, xtest)
dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Normal&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(μ, sqrt&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(σ2))

p &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]
qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat(map(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(x, p), dists)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)

plot(xtest[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;,
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
scatter!(xxs, yys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
plot!(xtest[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(dists), linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, 
      linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;dash, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip1800&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip1800)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip1801&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip1800)&#34; points=&#34;
189.504,1503.47 2321.26,1503.47 2321.26,47.2441 189.504,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip1802&#34;&gt;
    &lt;rect x=&#34;189&#34; y=&#34;47&#34; width=&#34;2133&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  249.837,1503.47 249.837,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  696.746,1503.47 696.746,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1143.65,1503.47 1143.65,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1590.56,1503.47 1590.56,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2037.47,1503.47 2037.47,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1418.28 2321.26,1418.28 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1210.07 2321.26,1210.07 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1001.86 2321.26,1001.86 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,793.651 2321.26,793.651 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,585.441 2321.26,585.441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,377.232 2321.26,377.232 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,169.022 2321.26,169.022 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 189.504,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,1503.47 249.837,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  696.746,1503.47 696.746,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1143.65,1503.47 1143.65,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1590.56,1503.47 1590.56,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2037.47,1503.47 2037.47,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1418.28 221.48,1418.28 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1210.07 221.48,1210.07 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1001.86 221.48,1001.86 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,793.651 221.48,793.651 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,585.441 221.48,585.441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,377.232 221.48,377.232 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1800)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,169.022 221.48,169.022 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 249.837, 1557.47)&#34; x=&#34;249.837&#34; y=&#34;1557.47&#34;&gt;-1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 696.746, 1557.47)&#34; x=&#34;696.746&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1143.65, 1557.47)&#34; x=&#34;1143.65&#34; y=&#34;1557.47&#34;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1590.56, 1557.47)&#34; x=&#34;1590.56&#34; y=&#34;1557.47&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2037.47, 1557.47)&#34; x=&#34;2037.47&#34; y=&#34;1557.47&#34;&gt;3&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1435.78)&#34; x=&#34;165.504&#34; y=&#34;1435.78&#34;&gt;-0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1227.57)&#34; x=&#34;165.504&#34; y=&#34;1227.57&#34;&gt;0.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1019.36)&#34; x=&#34;165.504&#34; y=&#34;1019.36&#34;&gt;0.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 811.151)&#34; x=&#34;165.504&#34; y=&#34;811.151&#34;&gt;1.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 602.941)&#34; x=&#34;165.504&#34; y=&#34;602.941&#34;&gt;1.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 394.732)&#34; x=&#34;165.504&#34; y=&#34;394.732&#34;&gt;2.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip1800)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 186.522)&#34; x=&#34;165.504&#34; y=&#34;186.522&#34;&gt;2.5&lt;/text&gt;
&lt;/g&gt;
&lt;polygon clip-path=&#34;url(#clip1802)&#34; points=&#34;
249.837,1462.26 270.151,1437.64 290.465,1413.19 310.779,1388.92 331.093,1364.88 351.407,1341.09 371.721,1317.56 392.035,1294.32 412.349,1271.38 432.663,1248.75 
  452.977,1226.44 473.291,1204.44 493.605,1182.76 513.919,1161.38 534.233,1140.31 554.547,1119.53 574.862,1099.04 595.176,1078.82 615.49,1058.87 635.804,1039.18 
  656.118,1019.75 676.432,1000.57 696.746,981.649 717.06,962.991 737.374,944.604 757.688,926.501 778.002,908.698 798.316,891.214 818.63,874.075 838.944,857.307 
  859.258,840.94 879.572,825.009 899.886,809.548 920.2,794.596 940.514,780.192 960.828,766.377 981.142,753.193 1001.46,740.681 1021.77,728.881 1042.08,717.834 
  1062.4,707.577 1082.71,698.146 1103.03,689.573 1123.34,681.889 1143.65,675.118 1163.97,669.281 1184.28,664.394 1204.6,660.469 1224.91,657.513 1245.22,655.526 
  1265.54,654.505 1285.85,654.442 1306.17,655.323 1326.48,657.13 1346.8,659.842 1367.11,663.434 1387.42,667.878 1407.74,673.142 1428.05,679.195 1448.37,686.002 
  1468.68,693.526 1488.99,701.731 1509.31,710.58 1529.62,720.038 1549.94,730.067 1570.25,740.633 1590.56,751.703 1610.88,763.244 1631.19,775.227 1651.51,787.625 
  1671.82,800.414 1692.13,813.572 1712.45,827.082 1732.76,840.93 1753.08,855.106 1773.39,869.604 1793.7,884.423 1814.02,899.567 1834.33,915.042 1854.65,930.86 
  1874.96,947.037 1895.27,963.594 1915.59,980.553 1935.9,997.941 1956.22,1015.78 1976.53,1034.11 1996.84,1052.95 2017.16,1072.32 2037.47,1092.26 2057.79,1112.78 
  2078.1,1133.89 2098.41,1155.6 2118.73,1177.91 2139.04,1200.81 2159.36,1224.3 2179.67,1248.34 2199.99,1272.9 2220.3,1297.95 2240.61,1323.44 2260.93,1349.32 
  2260.93,554.307 2240.61,549.172 2220.3,543.111 2199.99,536.114 2179.67,528.182 2159.36,519.321 2139.04,509.549 2118.73,498.89 2098.41,487.382 2078.1,475.068 
  2057.79,462.004 2037.47,448.253 2017.16,433.887 1996.84,418.983 1976.53,403.626 1956.22,387.904 1935.9,371.905 1915.59,355.722 1895.27,339.446 1874.96,323.166 
  1854.65,306.97 1834.33,290.941 1814.02,275.161 1793.7,259.704 1773.39,244.641 1753.08,230.038 1732.76,215.955 1712.45,202.446 1692.13,189.561 1671.82,177.343 
  1651.51,165.83 1631.19,155.056 1610.88,145.047 1590.56,135.827 1570.25,127.413 1549.94,119.818 1529.62,113.05 1509.31,107.114 1488.99,102.011 1468.68,97.7361 
  1448.37,94.2834 1428.05,91.6428 1407.74,89.8019 1387.42,88.7459 1367.11,88.4582 1346.8,88.9205 1326.48,90.1137 1306.17,92.0182 1285.85,94.614 1265.54,97.8816 
  1245.22,101.802 1224.91,106.357 1204.6,111.53 1184.28,117.305 1163.97,123.669 1143.65,130.61 1123.34,138.116 1103.03,146.178 1082.71,154.788 1062.4,163.938 
  1042.08,173.622 1021.77,183.832 1001.46,194.561 981.142,205.801 960.828,217.542 940.514,229.774 920.2,242.482 899.886,255.653 879.572,269.266 859.258,283.3 
  838.944,297.73 818.63,312.528 798.316,327.659 778.002,343.088 757.688,358.775 737.374,374.673 717.06,390.734 696.746,406.906 676.432,423.132 656.118,439.353 
  635.804,455.506 615.49,471.526 595.176,487.347 574.862,502.9 554.547,518.117 534.233,532.929 513.919,547.272 493.605,561.078 473.291,574.289 452.977,586.845 
  432.663,598.695 412.349,609.792 392.035,620.094 371.721,629.566 351.407,638.181 331.093,645.917 310.779,652.758 290.465,658.697 270.151,663.73 249.837,667.86 
  &#34; fill=&#34;#009af9&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;0.3&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#009af9; stroke-width:0; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,1462.26 270.151,1437.64 290.465,1413.19 310.779,1388.92 331.093,1364.88 351.407,1341.09 371.721,1317.56 392.035,1294.32 412.349,1271.38 432.663,1248.75 
  452.977,1226.44 473.291,1204.44 493.605,1182.76 513.919,1161.38 534.233,1140.31 554.547,1119.53 574.862,1099.04 595.176,1078.82 615.49,1058.87 635.804,1039.18 
  656.118,1019.75 676.432,1000.57 696.746,981.649 717.06,962.991 737.374,944.604 757.688,926.501 778.002,908.698 798.316,891.214 818.63,874.075 838.944,857.307 
  859.258,840.94 879.572,825.009 899.886,809.548 920.2,794.596 940.514,780.192 960.828,766.377 981.142,753.193 1001.46,740.681 1021.77,728.881 1042.08,717.834 
  1062.4,707.577 1082.71,698.146 1103.03,689.573 1123.34,681.889 1143.65,675.118 1163.97,669.281 1184.28,664.394 1204.6,660.469 1224.91,657.513 1245.22,655.526 
  1265.54,654.505 1285.85,654.442 1306.17,655.323 1326.48,657.13 1346.8,659.842 1367.11,663.434 1387.42,667.878 1407.74,673.142 1428.05,679.195 1448.37,686.002 
  1468.68,693.526 1488.99,701.731 1509.31,710.58 1529.62,720.038 1549.94,730.067 1570.25,740.633 1590.56,751.703 1610.88,763.244 1631.19,775.227 1651.51,787.625 
  1671.82,800.414 1692.13,813.572 1712.45,827.082 1732.76,840.93 1753.08,855.106 1773.39,869.604 1793.7,884.423 1814.02,899.567 1834.33,915.042 1854.65,930.86 
  1874.96,947.037 1895.27,963.594 1915.59,980.553 1935.9,997.941 1956.22,1015.78 1976.53,1034.11 1996.84,1052.95 2017.16,1072.32 2037.47,1092.26 2057.79,1112.78 
  2078.1,1133.89 2098.41,1155.6 2118.73,1177.91 2139.04,1200.81 2159.36,1224.3 2179.67,1248.34 2199.99,1272.9 2220.3,1297.95 2240.61,1323.44 2260.93,1349.32 
  &#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;473.291&#34; cy=&#34;918.577&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;473.291&#34; cy=&#34;918.577&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;920.2&#34; cy=&#34;460.516&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;920.2&#34; cy=&#34;460.516&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1143.65&#34; cy=&#34;502.157&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;1143.65&#34; cy=&#34;502.157&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;1322.42&#34; cy=&#34;252.306&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;1322.42&#34; cy=&#34;252.306&#34; r=&#34;14&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#000000; stroke:none; fill-opacity:1&#34; cx=&#34;2037.47&#34; cy=&#34;793.651&#34; r=&#34;18&#34;/&gt;
&lt;circle clip-path=&#34;url(#clip1802)&#34; style=&#34;fill:#e26f46; stroke:none; fill-opacity:1&#34; cx=&#34;2037.47&#34; cy=&#34;793.651&#34; r=&#34;14&#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip1802)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; stroke-dasharray=&#34;32, 20&#34; points=&#34;
  249.837,1065.06 270.151,1050.69 290.465,1035.94 310.779,1020.84 331.093,1005.4 351.407,989.633 371.721,973.563 392.035,957.207 412.349,940.587 432.663,923.724 
  452.977,906.642 473.291,889.365 493.605,871.918 513.919,854.327 534.233,836.62 554.547,818.824 574.862,800.968 595.176,783.083 615.49,765.197 635.804,747.342 
  656.118,729.549 676.432,711.85 696.746,694.277 717.06,676.862 737.374,659.638 757.688,642.638 778.002,625.893 798.316,609.437 818.63,593.301 838.944,577.519 
  859.258,562.12 879.572,547.137 899.886,532.6 920.2,518.539 940.514,504.983 960.828,491.96 981.142,479.497 1001.46,467.621 1021.77,456.356 1042.08,445.728 
  1062.4,435.758 1082.71,426.467 1103.03,417.876 1123.34,410.002 1143.65,402.864 1163.97,396.475 1184.28,390.85 1204.6,386 1224.91,381.935 1245.22,378.664 
  1265.54,376.194 1285.85,374.528 1306.17,373.67 1326.48,373.622 1346.8,374.381 1367.11,375.946 1387.42,378.312 1407.74,381.472 1428.05,385.419 1448.37,390.142 
  1468.68,395.631 1488.99,401.871 1509.31,408.847 1529.62,416.544 1549.94,424.942 1570.25,434.023 1590.56,443.765 1610.88,454.146 1631.19,465.141 1651.51,476.728 
  1671.82,488.878 1692.13,501.566 1712.45,514.764 1732.76,528.442 1753.08,542.572 1773.39,557.123 1793.7,572.064 1814.02,587.364 1834.33,602.991 1854.65,618.915 
  1874.96,635.102 1895.27,651.52 1915.59,668.138 1935.9,684.923 1956.22,701.843 1976.53,718.868 1996.84,735.966 2017.16,753.105 2037.47,770.256 2057.79,787.39 
  2078.1,804.477 2098.41,821.49 2118.73,838.4 2139.04,855.182 2159.36,871.809 2179.67,888.258 2199.99,904.505 2220.3,920.528 2240.61,936.305 2260.93,951.816 
  &#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;ノートブック:
&lt;a href=&#34;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&#34;&gt;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaのガウス過程ライブラリGaussianProcesses.jlを使う(基本編)</title>
      <link>https://matsueushi.github.io/posts/gaussianprocess-jl/</link>
      <pubDate>Wed, 17 Jul 2019 21:22:00 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gaussianprocess-jl/</guid>
      <description>&lt;p&gt;Juliaのガウス過程ライブラリ &lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl&#34;&gt;GaussianProcesses.jl&lt;/a&gt; を触ってみる。
チュートリアルはまだ未整備のようなので、&lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl/tree/master/notebooks&#34;&gt;サンプルノートブック&lt;/a&gt;と&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」などを参考にしながらやっていく。
Juliaのはv1.1.0, GaussianProcesses.jlはv0.9.0を使っている。&lt;/p&gt;
&lt;p&gt;インストールはいつものように&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Pkg
Pkg&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;add(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GaussianProcesses&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;カーネル関数&#34;&gt;カーネル関数&lt;/h3&gt;
&lt;p&gt;すでに多くの種類のカーネル関数が&lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/kernels.html&#34;&gt;実装されており&lt;/a&gt;、
ガウスカーネル、線形カーネル、指数カーネル、周期カーネル、Matérnカーネルなど、
「ガウス過程と機械学習」に出てきたカーネル関数はほぼカバーされているようだ。&lt;/p&gt;
&lt;p&gt;全て見ていくとキリがないのでいくつか基本的な部分だけ確認することにする。&lt;/p&gt;
&lt;p&gt;ガウスカーネルのカーネル関数は「ガウス過程と機械学習」では
$$
k(\mathbf{x}, \mathbf{x}^\prime) = \theta_1 \exp \left( - \frac{|\mathbf{x} - \mathbf{x}^\prime|^2}{\theta_2}\right)
$$&lt;/p&gt;
&lt;p&gt;となっているが、GaussianProcesses.jlでこれに対応するのは [&lt;code&gt;GaussianProcesses.SEIso&lt;/code&gt;]
(&lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/kernels.html#GaussianProcesses.SEIso&#34;&gt;http://stor-i.github.io/GaussianProcesses.jl/latest/kernels.html#GaussianProcesses.SEIso&lt;/a&gt;) である。
関数のパラメトライズは対数スケールとなっているため十分注意する必要があり、カーネル関数 &lt;code&gt;SEIso(ll::T, lσ::T)&lt;/code&gt; は、
\(\sigma = \log (\) &lt;code&gt;lσ&lt;/code&gt; \()\), \(l = \log (\) &lt;code&gt;ll&lt;/code&gt; \()\) とした時に&lt;/p&gt;
&lt;p&gt;$$
k(\mathbf{x}, \mathbf{x}^\prime) = \sigma^2 \exp \left( - \frac{(\mathbf{x} - \mathbf{x}^\prime)^\top(\mathbf{x} - \mathbf{x}^\prime))}{2l^2}\right)
$$&lt;/p&gt;
&lt;p&gt;だから、\(
k(\mathbf{x}, \mathbf{x}^\prime) = \exp \left( - |\mathbf{x} - \mathbf{x}^\prime|^2\right)
\) は&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;rbf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; SEIso(log(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt;sqrt(&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に対応している。「ガウス過程と機械学習」の pp.69 のように、\( (x_1, x_2, x_3, x_4) = (1, 2, 3, 4) \) とした時の共分散行列を求める。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;]
cov(rbf, xs, xs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;このようにすると &lt;code&gt;xs&lt;/code&gt; の全体が1要素として認識されてしまい&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;1.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;が帰ってきてダメなので、&lt;code&gt;reshape&lt;/code&gt; で 1×4 Arrayに変換して次のようにする。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape([&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
cov(rbf, xs, xs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;4×4 Array{Float64,2}:
 1.0         0.367879   0.0183156  0.00012341
 0.367879    1.0        0.367879   0.0183156 
 0.0183156   0.367879   1.0        0.367879  
 0.00012341  0.0183156  0.367879   1.0       
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり本と同様の結果が得られた。ちなみに&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; reshape([&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;], &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;)
cov(rbf, xs, xs)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;は&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;InexactError: Int64(0.3678794411714422)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;となり動かないので、&lt;code&gt;xs&lt;/code&gt; を &lt;code&gt;Real&lt;/code&gt; のベクターにする。&lt;/p&gt;
&lt;h3 id=&#34;ガウス過程からのサンプル&#34;&gt;ガウス過程からのサンプル&lt;/h3&gt;
&lt;p&gt;次はこのカーネル関数で定義したガウス過程からサンプリングを行う。GaussianProcesses.jl でガウス過程を呼び出すメソッド &lt;code&gt;GPE&lt;/code&gt; は、
学習データからフィッティングを行うものと行わないものの両方が用意されている。&lt;/p&gt;
&lt;p&gt;すでにカーネル関数を定義したので、使うのはフィッティングしない方。
ちなみに &lt;code&gt;GPE&lt;/code&gt; は観測ノイズを考慮しないノイズフリーのガウス過程のフィッティングをするメソッドで、観測ノイズも考慮したフィッティングを行いたければ &lt;code&gt;GP&lt;/code&gt; を使う。
この辺りは &lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/gp.html&#34;&gt;公式ドキュメント&lt;/a&gt; を見た方が良いかもしれない。&lt;/p&gt;
&lt;p&gt;先ほどのRBFカーネルで定まるガウス過程を定義し、サンプルを5つ取得する。&lt;/p&gt;
&lt;p&gt;コード上ではカーネルのみを指定して平均は与えていないが、&lt;code&gt;GPE&lt;/code&gt; の &lt;code&gt;mean&lt;/code&gt; 引数のデフォルトが &lt;code&gt;MeanZero()&lt;/code&gt; なので平均0のガウス過程を考えていることになる。
&lt;code&gt;mean&lt;/code&gt; 引数を変更すれば様々な平均関数のガウス過程を考えられる(はず、未確認)。&lt;/p&gt;
&lt;p&gt;サンプルは &lt;code&gt;rand&lt;/code&gt; で行うことができ、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;25&lt;/span&gt;
gp_rbf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GPE(kernel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rbf)
samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(gp_rbf, xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
plot(xs, samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip5700&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip5700)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip5701&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip5700)&#34; points=&#34;
149.361,1503.47 2321.26,1503.47 2321.26,47.2441 149.361,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip5702&#34;&gt;
    &lt;rect x=&#34;149&#34; y=&#34;47&#34; width=&#34;2173&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1274.16 2321.26,1274.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1013.85 2321.26,1013.85 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,753.535 2321.26,753.535 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,493.225 2321.26,493.225 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,232.915 2321.26,232.915 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 149.361,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1274.16 181.939,1274.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1013.85 181.939,1013.85 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,753.535 181.939,753.535 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,493.225 181.939,493.225 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5700)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,232.915 181.939,232.915 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 415.726, 1557.47)&#34; x=&#34;415.726&#34; y=&#34;1557.47&#34;&gt;-20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 825.518, 1557.47)&#34; x=&#34;825.518&#34; y=&#34;1557.47&#34;&gt;-10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1235.31, 1557.47)&#34; x=&#34;1235.31&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1645.1, 1557.47)&#34; x=&#34;1645.1&#34; y=&#34;1557.47&#34;&gt;10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2054.89, 1557.47)&#34; x=&#34;2054.89&#34; y=&#34;1557.47&#34;&gt;20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1291.66)&#34; x=&#34;125.361&#34; y=&#34;1291.66&#34;&gt;-2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1031.35)&#34; x=&#34;125.361&#34; y=&#34;1031.35&#34;&gt;-1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 771.035)&#34; x=&#34;125.361&#34; y=&#34;771.035&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 510.725)&#34; x=&#34;125.361&#34; y=&#34;510.725&#34;&gt;1&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip5700)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 250.415)&#34; x=&#34;125.361&#34; y=&#34;250.415&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#009af9; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,831.137 214.927,790.548 219.025,742.502 223.123,689.694 227.221,637.638 231.319,591.07 235.417,550.919 239.515,521.87 243.613,502.767 247.711,494.4 
  251.809,493.271 255.907,497.457 260.005,505.377 264.102,514.375 268.2,524.138 272.298,535.915 276.396,547.529 280.494,560.969 284.592,576.636 288.69,594.525 
  292.788,613.636 296.886,635.79 300.984,660.585 305.082,688.316 309.18,719.553 313.278,753.95 317.375,791.871 321.473,831.795 325.571,872.203 329.669,910.694 
  333.767,945.23 337.865,971.777 341.963,989.979 346.061,998.839 350.159,996.809 354.257,985.633 358.355,966.198 362.453,940.389 366.551,911.652 370.648,881.194 
  374.746,852.216 378.844,825.979 382.942,804.151 387.04,787.138 391.138,775.698 395.236,769.498 399.334,768.645 403.432,772.668 407.53,782.563 411.628,798.857 
  415.726,821.872 419.824,852.223 423.921,891.68 428.019,937.324 432.117,990.032 436.215,1043.69 440.313,1098.64 444.411,1147.53 448.509,1187.7 452.607,1216.45 
  456.705,1231.82 460.803,1234.48 464.901,1225.73 468.999,1209.79 473.097,1190.78 477.194,1173.04 481.292,1159.96 485.39,1154.2 489.488,1156.13 493.586,1166.66 
  497.684,1182.49 501.782,1201.36 505.88,1220.82 509.978,1235.67 514.076,1243.09 518.174,1239.25 522.272,1221.7 526.37,1189.76 530.467,1142.99 534.565,1082.48 
  538.663,1010.5 542.761,931.402 546.859,851.362 550.957,772.808 555.055,704.071 559.153,647.563 563.251,608.748 567.349,589.164 571.447,588.68 575.545,606.304 
  579.643,638.915 583.74,682.951 587.838,733.063 591.936,784.895 596.034,833.605 600.132,876.44 604.23,909.45 608.328,933.023 612.426,945.067 616.524,948.194 
  620.622,944.523 624.72,936.754 628.818,927.33 632.916,920.913 637.013,920.816 641.111,930.201 645.209,950.355 649.307,983.367 653.405,1027.77 657.503,1082.77 
  661.601,1144.77 665.699,1208.81 669.797,1267.84 673.895,1317.76 677.993,1352.33 682.091,1367.46 686.189,1361.13 690.286,1332.68 694.384,1284.09 698.482,1219.36 
  702.58,1143.65 706.678,1061.49 710.776,979.126 714.874,901.402 718.972,831.881 723.07,773.467 727.168,724.668 731.266,686.877 735.364,657.807 739.462,634.482 
  743.559,616.178 747.657,600.523 751.755,587.046 755.853,573.655 759.951,561.309 764.049,547.962 768.147,534.071 772.245,518.319 776.343,499.116 780.441,476.589 
  784.539,449.541 788.637,419.433 792.735,387.733 796.832,357.927 800.93,333.084 805.028,319.115 809.126,316.681 813.224,332.668 817.322,364.404 821.42,410.435 
  825.518,468.031 829.616,532.175 833.714,596.517 837.812,655.929 841.91,706.876 846.008,746.999 850.105,775.351 854.203,794.752 858.301,805.372 862.399,812.092 
  866.497,815.429 870.595,817.238 874.693,817.432 878.791,815.544 882.889,811.153 886.987,805.811 891.085,798.569 895.183,793.222 899.281,793.285 903.378,801.311 
  907.476,819.769 911.574,850.616 915.672,892.291 919.77,944.849 923.868,1002.67 927.966,1062.13 932.064,1115.93 936.162,1159.79 940.26,1189.86 944.358,1202.99 
  948.456,1197.78 952.554,1176.66 956.651,1141.68 960.749,1095.74 964.847,1043.03 968.945,988.968 973.043,935.303 977.141,884.657 981.239,841.354 985.337,805.502 
  989.435,779.911 993.533,765.291 997.631,763.759 1001.73,775.677 1005.83,801.159 1009.92,839.353 1014.02,888.875 1018.12,944.063 1022.22,1000.58 1026.32,1052.08 
  1030.41,1091.93 1034.51,1113.59 1038.61,1115.51 1042.71,1095.02 1046.81,1055.93 1050.9,1001.36 1055,937.982 1059.1,874.041 1063.2,813.756 1067.3,764.72 
  1071.39,727.726 1075.49,702.234 1079.59,687.36 1083.69,678.589 1087.78,670.919 1091.88,663.171 1095.98,653.233 1100.08,641.353 1104.18,628.994 1108.27,621.144 
  1112.37,620.535 1116.47,630.822 1120.57,655.181 1124.67,693.721 1128.76,743.535 1132.86,801.616 1136.96,862.394 1141.06,920.231 1145.16,967.561 1149.25,1001.04 
  1153.35,1016.89 1157.45,1014.25 1161.55,996.492 1165.65,965.893 1169.74,927.02 1173.84,885.79 1177.94,847.703 1182.04,814.405 1186.14,789.887 1190.23,774.866 
  1194.33,769.851 1198.43,775.779 1202.53,789.854 1206.62,811.584 1210.72,838.707 1214.82,867.551 1218.92,895.615 1223.02,919.02 1227.11,934.707 1231.21,939.793 
  1235.31,932.89 1239.41,914.169 1243.51,883.023 1247.6,842.953 1251.7,796.827 1255.8,749.796 1259.9,704.451 1264,666.476 1268.09,638.551 1272.19,622.073 
  1276.29,619.541 1280.39,627.44 1284.49,645.204 1288.58,668.961 1292.68,696.213 1296.78,724.292 1300.88,751.258 1304.97,775.939 1309.07,796.199 1313.17,812.819 
  1317.27,825.013 1321.37,832.433 1325.46,835.771 1329.56,835.318 1333.66,833.136 1337.76,831.142 1341.86,832.972 1345.95,839.973 1350.05,853.706 1354.15,874.433 
  1358.25,902.051 1362.35,934.307 1366.44,967.823 1370.54,999.154 1374.64,1024.75 1378.74,1044.14 1382.84,1052.4 1386.93,1052.58 1391.03,1044.47 1395.13,1030.77 
  1399.23,1012.67 1403.33,993.331 1407.42,972.198 1411.52,950.323 1415.62,928.705 1419.72,904.996 1423.81,877.323 1427.91,846.374 1432.01,809.952 1436.11,768.71 
  1440.21,723.471 1444.3,675.445 1448.4,625.376 1452.5,575.526 1456.6,528.321 1460.7,483.68 1464.79,443.797 1468.89,408.322 1472.99,378.563 1477.09,354.256 
  1481.19,335.959 1485.28,323.903 1489.38,319.083 1493.48,320.559 1497.58,330.279 1501.68,346.53 1505.77,369.936 1509.87,396.905 1513.97,427.083 1518.07,455.64 
  1522.16,481.694 1526.26,502.607 1530.36,516.89 1534.46,526.669 1538.56,532.979 1542.65,538.77 1546.75,547.819 1550.85,561.626 1554.95,582.478 1559.05,611.509 
  1563.14,645.461 1567.24,684.763 1571.34,723.835 1575.44,761.404 1579.54,794.514 1583.63,822.625 1587.73,846.225 1591.83,865.618 1595.93,883.372 1600.03,901.111 
  1604.12,919.309 1608.22,937.469 1612.32,954.954 1616.42,967.171 1620.51,971.777 1624.61,964.099 1628.71,941.75 1632.81,903.379 1636.91,848.17 1641,777.837 
  1645.1,697.903 1649.2,612.892 1653.3,528.638 1657.4,450.759 1661.49,384.818 1665.59,334.359 1669.69,300.733 1673.79,284.902 1677.89,284.854 1681.98,299.903 
  1686.08,327.412 1690.18,364.559 1694.28,410.371 1698.38,462.269 1702.47,518.663 1706.57,577.798 1710.67,637.226 1714.77,694.551 1718.87,748.354 1722.96,795.576 
  1727.06,836.389 1731.16,866.903 1735.26,889.903 1739.35,904.05 1743.45,910.189 1747.55,911.762 1751.65,907.917 1755.75,902.524 1759.84,896.037 1763.94,891.412 
  1768.04,887.879 1772.14,887.192 1776.24,888.82 1780.33,890.922 1784.43,893.359 1788.53,894.181 1792.63,893.397 1796.73,887.517 1800.82,879.217 1804.92,868.034 
  1809.02,854.803 1813.12,842.177 1817.22,832.573 1821.31,827.913 1825.41,829.471 1829.51,837.177 1833.61,852.243 1837.7,873.802 1841.8,898.385 1845.9,926.275 
  1850,954.503 1854.1,981.796 1858.19,1007.3 1862.29,1031.27 1866.39,1052.87 1870.49,1072 1874.59,1088.82 1878.68,1103.64 1882.78,1115.6 1886.88,1125.09 
  1890.98,1131.51 1895.08,1134.67 1899.17,1135.98 1903.27,1134.47 1907.37,1131.54 1911.47,1126.69 1915.57,1119.83 1919.66,1110.96 1923.76,1098.6 1927.86,1082.38 
  1931.96,1061.56 1936.06,1033.29 1940.15,1000.33 1944.25,961.974 1948.35,921.09 1952.45,881.651 1956.54,846.988 1960.64,820.578 1964.74,804.72 1968.84,800.997 
  1972.94,808.572 1977.03,825.02 1981.13,848.865 1985.23,876.435 1989.33,905.997 1993.43,935.678 1997.52,964.195 2001.62,991.4 2005.72,1018.24 2009.82,1042.01 
  2013.92,1062.8 2018.01,1077.79 2022.11,1083.22 2026.21,1075.86 2030.31,1053.75 2034.41,1014.45 2038.5,957.521 2042.6,884.73 2046.7,799.111 2050.8,706.091 
  2054.89,610.022 2058.99,516.949 2063.09,430.75 2067.19,355.818 2071.29,295.909 2075.38,251.416 2079.48,221.999 2083.58,208.051 2087.68,207.601 2091.78,218.536 
  2095.87,238.237 2099.97,262.093 2104.07,287.42 2108.17,308.569 2112.27,323.888 2116.36,328.434 2120.46,321.614 2124.56,303.556 2128.66,276.975 2132.76,247.29 
  2136.85,217.344 2140.95,195.267 2145.05,184.904 2149.15,188.758 2153.24,207.112 2157.34,240.327 2161.44,283.071 2165.54,333.398 2169.64,384.666 2173.73,432.176 
  2177.83,473.349 2181.93,503.598 2186.03,520.887 2190.13,524.122 2194.22,515.184 2198.32,494.559 2202.42,464.669 2206.52,431.839 2210.62,397.763 2214.71,370.155 
  2218.81,350.434 2222.91,342.162 2227.01,345.12 2231.11,359.706 2235.2,381.697 2239.3,407.204 2243.4,433.554 2247.5,456.408 2251.6,473.776 2255.69,484.758 
  2259.79,490.037 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#e26f46; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,582.111 214.927,546.56 219.025,522.087 223.123,508.129 227.221,505.603 231.319,510.657 235.417,523.318 239.515,540.128 243.613,557.863 247.711,575.621 
  251.809,592.386 255.907,606.644 260.005,618.302 264.102,626.046 268.2,631.16 272.298,631.574 276.396,628.028 280.494,618.979 284.592,604.322 288.69,583.394 
  292.788,556.186 296.886,525.065 300.984,491.74 305.082,459.818 309.18,433.544 313.278,415.726 317.375,410.691 321.473,420.104 325.571,446.195 329.669,485.966 
  333.767,537.039 337.865,596.365 341.963,657.082 346.061,716.076 350.159,766.958 354.257,806.871 358.355,833.089 362.453,844.861 366.551,842.389 370.648,828.608 
  374.746,804.75 378.844,774.84 382.942,742.211 387.04,710.724 391.138,681.865 395.236,657.77 399.334,641.225 403.432,634.024 407.53,636.356 411.628,649.355 
  415.726,673.195 419.824,706.162 423.921,746.836 428.019,791.364 432.117,835.502 436.215,876.448 440.313,908.946 444.411,931.702 448.509,943.756 452.607,944.706 
  456.705,938.315 460.803,927.931 464.901,918.019 468.999,911.472 473.097,912.24 477.194,922.35 481.292,941.202 485.39,967.042 489.488,997.075 493.586,1025.27 
  497.684,1047.76 501.782,1060.18 505.88,1059.37 509.978,1043.7 514.076,1013.14 518.174,973.118 522.272,926.828 526.37,881.979 530.467,845.791 534.565,823.02 
  538.663,818.877 542.761,834.058 546.859,867.286 550.957,912.82 555.055,965.276 559.153,1017.88 563.251,1063.49 567.349,1098.67 571.447,1121.3 575.545,1133.1 
  579.643,1134.59 583.74,1129.35 587.838,1120.5 591.936,1110.36 596.034,1098.95 600.132,1086.13 604.23,1070.88 608.328,1050.71 612.426,1026.48 616.524,998.807 
  620.622,969.7 624.72,942.814 628.818,921.834 632.916,909.187 637.013,908.247 641.111,918.265 645.209,939.438 649.307,967.192 653.405,996.939 657.503,1026.39 
  661.601,1050.03 665.699,1064.88 669.797,1071.65 673.895,1070.16 677.993,1060.95 682.091,1048.32 686.189,1034 690.286,1021.19 694.384,1008.99 698.482,997.752 
  702.58,985.053 706.678,969.472 710.776,947.633 714.874,918.218 718.972,879.134 723.07,831.877 727.168,776.987 731.266,718.558 735.364,658.939 739.462,602.6 
  743.559,552.175 747.657,510.365 751.755,478.983 755.853,458.437 759.951,446.945 764.049,445.163 768.147,450.446 772.245,462.957 776.343,479.987 780.441,501.564 
  784.539,529.349 788.637,561.81 792.735,600.048 796.832,645.014 800.93,695.072 805.028,750.367 809.126,810.665 813.224,872.206 817.322,934.119 821.42,993.871 
  825.518,1047.85 829.616,1091.99 833.714,1124.38 837.812,1141.58 841.91,1142.27 846.008,1127.88 850.105,1099.26 854.203,1059.31 858.301,1012.24 862.399,962.521 
  866.497,912.796 870.595,866.172 874.693,823.363 878.791,787.63 882.889,754.795 886.987,726.454 891.085,701.85 895.183,681.015 899.281,664.614 903.378,654.552 
  907.476,650.711 911.574,654.97 915.672,665.624 919.77,680.996 923.868,699.987 927.966,716.876 932.064,729.964 936.162,736.018 940.26,731.699 944.358,716.494 
  948.456,691.271 952.554,658.142 956.651,620.725 960.749,583.056 964.847,549.78 968.945,525.168 973.043,511.284 977.141,509.384 981.239,520.253 985.337,541.433 
  989.435,571.416 993.533,606.412 997.631,645.476 1001.73,685.084 1005.83,724.479 1009.92,763.517 1014.02,801.217 1018.12,838.245 1022.22,874.227 1026.32,908.817 
  1030.41,942.677 1034.51,973.826 1038.61,1001.83 1042.71,1026.82 1046.81,1046.32 1050.9,1060.65 1055,1069.13 1059.1,1071.48 1063.2,1068.51 1067.3,1061.44 
  1071.39,1049.67 1075.49,1034.97 1079.59,1019.13 1083.69,1004.01 1087.78,991.206 1091.88,982.827 1095.98,980.926 1100.08,985.513 1104.18,997.486 1108.27,1012.89 
  1112.37,1033.16 1116.47,1053.29 1120.57,1071.55 1124.67,1086.39 1128.76,1093.92 1132.86,1095.94 1136.96,1092.02 1141.06,1082.44 1145.16,1069.55 1149.25,1055.62 
  1153.35,1042.04 1157.45,1029.04 1161.55,1017.73 1165.65,1007.95 1169.74,998.816 1173.84,990.91 1177.94,982.433 1182.04,974.938 1186.14,967.221 1190.23,958.53 
  1194.33,948.619 1198.43,937.459 1202.53,925.018 1206.62,911.502 1210.72,896.811 1214.82,880.658 1218.92,864.472 1223.02,847.676 1227.11,829.981 1231.21,811.269 
  1235.31,788.965 1239.41,763.534 1243.51,733.913 1247.6,698.749 1251.7,660.921 1255.8,621.78 1259.9,583.427 1264,547.932 1268.09,518.455 1272.19,496.102 
  1276.29,479.744 1280.39,469.951 1284.49,464.351 1288.58,460.914 1292.68,459.987 1296.78,460.044 1300.88,462.132 1304.97,466.05 1309.07,472.987 1313.17,483.684 
  1317.27,501.189 1321.37,523.327 1325.46,552.547 1329.56,588.122 1333.66,627.876 1337.76,670.677 1341.86,713.125 1345.95,754.78 1350.05,791.068 1354.15,820.379 
  1358.25,841.579 1362.35,853.131 1366.44,856.491 1370.54,853.535 1374.64,846.909 1378.74,840.89 1382.84,839.165 1386.93,844.14 1391.03,858.507 1395.13,882.757 
  1399.23,917.198 1403.33,960.112 1407.42,1007.75 1411.52,1058.89 1415.62,1109.57 1419.72,1157.94 1423.81,1200.13 1427.91,1235.49 1432.01,1263.84 1436.11,1283.43 
  1440.21,1295.92 1444.3,1299 1448.4,1296.44 1452.5,1287.19 1456.6,1272.04 1460.7,1251.39 1464.79,1224.66 1468.89,1190.87 1472.99,1150.41 1477.09,1102.18 
  1481.19,1046.68 1485.28,986.101 1489.38,923.31 1493.48,862.226 1497.58,808.866 1501.68,767.583 1505.77,741.941 1509.87,734.838 1513.97,746.347 1518.07,774.074 
  1522.16,814.681 1526.26,861.843 1530.36,911.184 1534.46,955.594 1538.56,991.111 1542.65,1013.28 1546.75,1019.92 1550.85,1012.51 1554.95,991.24 1559.05,959.447 
  1563.14,921.425 1567.24,881.404 1571.34,843.76 1575.44,812.532 1579.54,788.499 1583.63,775.91 1587.73,772.068 1591.83,777.5 1595.93,787.927 1600.03,800.435 
  1604.12,810.675 1608.22,811.157 1612.32,799.93 1616.42,772.952 1620.51,730.004 1624.61,672.637 1628.71,605.714 1632.81,536.208 1636.91,472.279 1641,419.692 
  1645.1,386.497 1649.2,374.351 1653.3,385.582 1657.4,415.601 1661.49,460.439 1665.59,513.371 1669.69,567.386 1673.79,614.97 1677.89,651.075 1681.98,671.426 
  1686.08,674.589 1690.18,659.209 1694.28,628.558 1698.38,584.363 1702.47,532.153 1706.57,475.065 1710.67,419.694 1714.77,370.321 1718.87,332.426 1722.96,309.988 
  1727.06,306.403 1731.16,323.968 1735.26,363.414 1739.35,423.026 1743.45,500.135 1747.55,589.362 1751.65,683.948 1755.75,776.852 1759.84,861.752 1763.94,931.085 
  1768.04,981.117 1772.14,1009.46 1776.24,1016.08 1780.33,1004.17 1784.43,976.473 1788.53,938.989 1792.63,897.585 1796.73,853.846 1800.82,814.691 1804.92,781.401 
  1809.02,756.16 1813.12,741.983 1817.22,739.389 1821.31,749.628 1825.41,772.213 1829.51,806.079 1833.61,849.884 1837.7,900.236 1841.8,953.491 1845.9,1006.09 
  1850,1053.76 1854.1,1092.34 1858.19,1121.25 1862.29,1138.19 1866.39,1145.49 1870.49,1143.02 1874.59,1133.94 1878.68,1122.12 1882.78,1109.8 1886.88,1099.81 
  1890.98,1096.04 1895.08,1100.53 1899.17,1113.61 1903.27,1135.4 1907.37,1162.31 1911.47,1192.34 1915.57,1221.01 1919.66,1242.04 1923.76,1253.35 1927.86,1252.26 
  1931.96,1238.6 1936.06,1215.56 1940.15,1184.26 1944.25,1151.11 1948.35,1119.02 1952.45,1090.99 1956.54,1068.5 1960.64,1051.88 1964.74,1037.38 1968.84,1022.17 
  1972.94,1004.36 1977.03,980.565 1981.13,949.643 1985.23,912.477 1989.33,870.634 1993.43,829.47 1997.52,792.146 2001.62,761.881 2005.72,741.613 2009.82,734.539 
  2013.92,738.538 2018.01,752.031 2022.11,772.792 2026.21,797.231 2030.31,822.555 2034.41,846.719 2038.5,869.407 2042.6,890.464 2046.7,910.708 2050.8,931.58 
  2054.89,952.448 2058.99,974.212 2063.09,994.892 2067.19,1014 2071.29,1029.54 2075.38,1038.83 2079.48,1040.56 2083.58,1034.38 2087.68,1019.08 2091.78,996.258 
  2095.87,965.775 2099.97,927.79 2104.07,883.086 2108.17,833.857 2112.27,780.202 2116.36,723.624 2120.46,665.353 2124.56,606.279 2128.66,550.602 2132.76,497.364 
  2136.85,448.71 2140.95,406.964 2145.05,373.172 2149.15,347.737 2153.24,331.634 2157.34,325.817 2161.44,328.67 2165.54,340.651 2169.64,359.324 2173.73,384.958 
  2177.83,415.124 2181.93,449.309 2186.03,486.84 2190.13,526.508 2194.22,567.484 2198.32,609.635 2202.42,650.593 2206.52,690.354 2210.62,725.014 2214.71,753.538 
  2218.81,775.167 2222.91,789.352 2227.01,795.614 2231.11,796.192 2235.2,791.391 2239.3,783.083 2243.4,772.667 2247.5,763.371 2251.6,755.214 2255.69,750.388 
  2259.79,748.165 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,782.444 214.927,737.978 219.025,700.998 223.123,675.086 227.221,660.617 231.319,657.767 235.417,663.553 239.515,674.544 243.613,687.185 247.711,697.086 
  251.809,701.601 255.907,697.127 260.005,684.464 264.102,664.004 268.2,638.541 272.298,610.817 276.396,585.887 280.494,566.636 284.592,557.518 288.69,561.016 
  292.788,579.374 296.886,611.26 300.984,657.043 305.082,712.634 309.18,777.233 313.278,845.876 317.375,916.457 321.473,985.744 325.571,1050.2 329.669,1109.9 
  333.767,1161.78 337.865,1205.07 341.963,1239.01 346.061,1263.01 350.159,1276.96 354.257,1281.19 358.355,1275.51 362.453,1261.37 366.551,1240.09 370.648,1211.9 
  374.746,1176.97 378.844,1136.07 382.942,1088.9 387.04,1035.28 391.138,978.637 395.236,919.845 399.334,862.483 403.432,812.147 407.53,772.795 411.628,748.635 
  415.726,742.624 419.824,755.323 423.921,784.786 428.019,827.198 432.117,876.321 436.215,924.525 440.313,964.819 444.411,989 448.509,992.935 452.607,972.381 
  456.705,926.579 460.803,858.842 464.901,771.272 468.999,671.161 473.097,565.19 477.194,458.978 481.292,360.534 485.39,274.087 489.488,204.578 493.586,151.767 
  497.684,115.712 501.782,96.0596 505.88,88.4582 509.978,90.6392 514.076,98.8368 518.174,111.041 522.272,127.237 526.37,145.782 530.467,167.881 534.565,194.535 
  538.663,226.643 542.761,265.598 546.859,311.378 550.957,362.543 555.055,418.42 559.153,476.814 563.251,534.487 567.349,587.605 571.447,635.073 575.545,673.592 
  579.643,702.314 583.74,720.926 587.838,730.482 591.936,731.286 596.034,727.353 600.132,719.679 604.23,712.389 608.328,707.189 612.426,705.828 616.524,710.992 
  620.622,723.607 624.72,746.598 628.818,780.469 632.916,825.203 637.013,880.446 641.111,945.356 645.209,1016.58 649.307,1088.68 653.405,1158.85 657.503,1221.09 
  661.601,1269.5 665.699,1299.81 669.797,1311.48 673.895,1301.3 677.993,1272.15 682.091,1228.47 686.189,1173.66 690.286,1113.41 694.384,1051.3 698.482,992.854 
  702.58,938.334 706.678,889.92 710.776,846.596 714.874,807.261 718.972,769.948 723.07,736.369 727.168,707.39 731.266,683.219 735.364,665.098 739.462,654.049 
  743.559,649.51 747.657,648.492 751.755,649.993 755.853,651.31 759.951,650.549 764.049,647.218 768.147,642.398 772.245,638.017 776.343,637.469 780.441,642.03 
  784.539,654.759 788.637,674.239 792.735,702.297 796.832,732.078 800.93,763.736 805.028,791.346 809.126,811.06 813.224,820.742 817.322,818.671 821.42,805.918 
  825.518,784.04 829.616,756.245 833.714,725.88 837.812,694.555 841.91,664.356 846.008,636.653 850.105,612.697 854.203,592.476 858.301,576.117 862.399,564.735 
  866.497,560.718 870.595,563.456 874.693,575.643 878.791,595.958 882.889,625.147 886.987,659.001 891.085,694.225 895.183,727.739 899.281,752.647 903.378,764.571 
  907.476,760.337 911.574,739.016 915.672,700.951 919.77,650.669 923.868,594.602 927.966,538.206 932.064,489.781 936.162,454.927 940.26,438.703 944.358,443.335 
  948.456,467.532 952.554,509.042 956.651,564.495 960.749,627.858 964.847,695.101 968.945,760.506 973.043,821.57 977.141,876.768 981.239,925.011 985.337,966.174 
  989.435,1001.87 993.533,1030.77 997.631,1055.05 1001.73,1072.13 1005.83,1082.14 1009.92,1084.1 1014.02,1078.9 1018.12,1065.45 1022.22,1044.99 1026.32,1020 
  1030.41,993.976 1034.51,965.892 1038.61,937.222 1042.71,908.506 1046.81,876.628 1050.9,841.339 1055,800.627 1059.1,753.647 1063.2,702.339 1067.3,647.067 
  1071.39,591.895 1075.49,540.009 1079.59,496.307 1083.69,466.289 1087.78,453.678 1091.88,461.217 1095.98,491.777 1100.08,545.082 1104.18,618.597 1108.27,707.19 
  1112.37,805.295 1116.47,906.557 1120.57,1002.73 1124.67,1086.99 1128.76,1155.55 1132.86,1203.93 1136.96,1233.32 1141.06,1244.06 1145.16,1240.2 1149.25,1223.91 
  1153.35,1201.25 1157.45,1175.12 1161.55,1148.2 1165.65,1122.64 1169.74,1100.24 1173.84,1081.72 1177.94,1065.79 1182.04,1052.12 1186.14,1039.37 1190.23,1026.58 
  1194.33,1011.49 1198.43,993.704 1202.53,971.32 1206.62,945.304 1210.72,915.273 1214.82,884.51 1218.92,853.798 1223.02,824.243 1227.11,800.563 1231.21,782.876 
  1235.31,772.067 1239.41,768.939 1243.51,772.783 1247.6,782.704 1251.7,798.701 1255.8,818.605 1259.9,842.559 1264,869.544 1268.09,898.883 1272.19,929.198 
  1276.29,958.705 1280.39,983.373 1284.49,1000.97 1288.58,1006.34 1292.68,996.696 1296.78,968.158 1300.88,919.498 1304.97,851.54 1309.07,769.266 1313.17,678.42 
  1317.27,587.696 1321.37,507.014 1325.46,445.881 1329.56,410.463 1333.66,407.485 1337.76,436.609 1341.86,494.882 1345.95,575.746 1350.05,669.795 1354.15,767.531 
  1358.25,860.212 1362.35,941.935 1366.44,1009.25 1370.54,1060.61 1374.64,1099.13 1378.74,1127.93 1382.84,1152.17 1386.93,1174.82 1391.03,1197.9 1395.13,1221.66 
  1399.23,1246.63 1403.33,1268.31 1407.42,1285.71 1411.52,1295.59 1415.62,1296.43 1419.72,1285.5 1423.81,1264.64 1427.91,1233.76 1432.01,1193.66 1436.11,1145.82 
  1440.21,1091.78 1444.3,1033.08 1448.4,970.145 1452.5,904.353 1456.6,835.853 1460.7,766.041 1464.79,695.173 1468.89,624.032 1472.99,553.807 1477.09,484.438 
  1481.19,418.401 1485.28,356.212 1489.38,300.523 1493.48,254.201 1497.58,219.663 1501.68,201.213 1505.77,200.832 1509.87,220.918 1513.97,262.66 1518.07,323.35 
  1522.16,400.119 1526.26,487.187 1530.36,577.73 1534.46,664.21 1538.56,741.711 1542.65,803.833 1546.75,846.482 1550.85,870.579 1554.95,875.319 1559.05,864.854 
  1563.14,842.58 1567.24,812.101 1571.34,777.547 1575.44,741.21 1579.54,705.669 1583.63,670.843 1587.73,637.121 1591.83,603.776 1595.93,569.989 1600.03,533.742 
  1604.12,496.324 1608.22,457.446 1612.32,418.635 1616.42,382.08 1620.51,349.971 1624.61,324.811 1628.71,308.355 1632.81,302.297 1636.91,308.687 1641,325.81 
  1645.1,353.645 1649.2,391.572 1653.3,435.721 1657.4,486.29 1661.49,539.447 1665.59,592.698 1669.69,642.498 1673.79,686.576 1677.89,723.426 1681.98,750.45 
  1686.08,767.498 1690.18,775.317 1694.28,774.646 1698.38,767.464 1702.47,755.803 1706.57,742.049 1710.67,728.004 1714.77,717.846 1718.87,710.682 1722.96,708.727 
  1727.06,712.852 1731.16,724.112 1735.26,741.537 1739.35,764.906 1743.45,793.415 1747.55,823.594 1751.65,854.395 1755.75,883.182 1759.84,905.777 1763.94,921.096 
  1768.04,925.21 1772.14,917.81 1776.24,898.435 1780.33,867.539 1784.43,826.637 1788.53,779.259 1792.63,728.199 1796.73,676.812 1800.82,628.46 1804.92,585.962 
  1809.02,549.649 1813.12,521.356 1817.22,498.442 1821.31,481.73 1825.41,470.232 1829.51,460.762 1833.61,454.246 1837.7,450.033 1841.8,447.653 1845.9,448.079 
  1850,452.237 1854.1,459.79 1858.19,472.423 1862.29,489.391 1866.39,511.942 1870.49,539.344 1874.59,570.775 1878.68,606.185 1882.78,642.882 1886.88,679.962 
  1890.98,716.033 1895.08,748.315 1899.17,776.096 1903.27,798.607 1907.37,816.658 1911.47,830.253 1915.57,841.115 1919.66,849.879 1923.76,856.989 1927.86,863.187 
  1931.96,867.504 1936.06,867.425 1940.15,861.086 1944.25,848.884 1948.35,829.44 1952.45,802.108 1956.54,771.859 1960.64,738.499 1964.74,707.349 1968.84,679.135 
  1972.94,655.945 1977.03,637.392 1981.13,620.48 1985.23,602.898 1989.33,580.576 1993.43,550.09 1997.52,509.696 2001.62,458.869 2005.72,398.493 2009.82,334.627 
  2013.92,270.88 2018.01,212.69 2022.11,165.703 2026.21,136.102 2030.31,125.053 2034.41,135.115 2038.5,165.468 2042.6,213.645 2046.7,276.769 2050.8,349.773 
  2054.89,427.494 2058.99,505.116 2063.09,578.954 2067.19,644.776 2071.29,699.824 2075.38,744.017 2079.48,777.834 2083.58,802.443 2087.68,823.068 2091.78,842.429 
  2095.87,864.351 2099.97,891.955 2104.07,926.838 2108.17,967.848 2112.27,1011.22 2116.36,1053.93 2120.46,1090.86 2124.56,1118.2 2128.66,1134.2 2132.76,1136.83 
  2136.85,1127.77 2140.95,1109.84 2145.05,1087.1 2149.15,1062.68 2153.24,1039.58 2157.34,1022.1 2161.44,1008.01 2165.54,998.981 2169.64,991.159 2173.73,982.082 
  2177.83,969.668 2181.93,950.619 2186.03,924.34 2190.13,891.169 2194.22,852.059 2198.32,809.374 2202.42,768.52 2206.52,731.644 2210.62,702.634 2214.71,684.684 
  2218.81,679.928 2222.91,688.829 2227.01,712.008 2231.11,747.604 2235.2,796.233 2239.3,854.334 2243.4,919.681 2247.5,987.662 2251.6,1053.9 2255.69,1115.32 
  2259.79,1168.03 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#c271d2; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1187.97 214.927,1158.4 219.025,1121.93 223.123,1080.46 227.221,1037.29 231.319,994.029 235.417,953.067 239.515,915.027 243.613,882.553 247.711,856.965 
  251.809,840.583 255.907,835.128 260.005,840.803 264.102,856.766 268.2,882.028 272.298,912.758 276.396,945.025 280.494,972.718 284.592,990.822 288.69,996.101 
  292.788,983.591 296.886,952.85 300.984,904.477 305.082,841.781 309.18,767.627 313.278,689.576 317.375,612.199 321.473,541.553 325.571,482.028 329.669,437.983 
  333.767,410.334 337.865,399.151 341.963,403.617 346.061,419.99 350.159,443.543 354.257,469.988 358.355,496.024 362.453,517.578 366.551,533.558 370.648,544.298 
  374.746,549.942 378.844,552.317 382.942,554.963 387.04,558.913 391.138,567.798 395.236,581.426 399.334,602.172 403.432,628.529 407.53,660.699 411.628,695.892 
  415.726,733.928 419.824,772.02 423.921,808.765 428.019,843.526 432.117,876.64 436.215,907.292 440.313,937.052 444.411,964.507 448.509,990.29 452.607,1012.06 
  456.705,1027.92 460.803,1036.35 464.901,1034.01 468.999,1019.54 473.097,993.225 477.194,956.389 481.292,911.675 485.39,861.922 489.488,810.434 493.586,762.488 
  497.684,717.647 501.782,679.105 505.88,647.399 509.978,623.046 514.076,606.861 518.174,598.543 522.272,598.718 526.37,608.436 530.467,626.587 534.565,651.788 
  538.663,683.079 542.761,717.092 546.859,752.176 550.957,786.213 555.055,816.886 559.153,844.612 563.251,870.188 567.349,893.695 571.447,919.347 575.545,945.465 
  579.643,976.59 583.74,1011.55 587.838,1049.58 591.936,1088.81 596.034,1128.59 600.132,1165.75 604.23,1198.96 608.328,1226.53 612.426,1250.37 616.524,1269.28 
  620.622,1284.53 624.72,1296.96 628.818,1307.59 632.916,1316.13 637.013,1321.33 641.111,1321.02 645.209,1313.3 649.307,1294.53 653.405,1264.58 657.503,1221.87 
  661.601,1166.7 665.699,1104.54 669.797,1038.14 673.895,972.268 677.993,911.704 682.091,860.704 686.189,822.08 690.286,795.198 694.384,780.807 698.482,775.571 
  702.58,776.573 706.678,781.814 710.776,788.596 714.874,795.57 718.972,803.388 723.07,811.684 727.168,820.722 731.266,830.525 735.364,841.987 739.462,854.043 
  743.559,866.006 747.657,876.747 751.755,883.98 755.853,886.067 759.951,882.857 764.049,873.926 768.147,860.563 772.245,844.248 776.343,827.151 780.441,812.916 
  784.539,806.431 788.637,810.009 792.735,826.009 796.832,856.087 800.93,898.513 805.028,952.111 809.126,1011.35 813.224,1072.76 817.322,1128.93 821.42,1176.83 
  825.518,1211.87 829.616,1230.7 833.714,1232.44 837.812,1217.12 841.91,1184.76 846.008,1138.64 850.105,1081.19 854.203,1014.11 858.301,940.364 862.399,863.515 
  866.497,783.811 870.595,704.045 874.693,626.563 878.791,552.313 882.889,485.029 886.987,427.7 891.085,382.043 895.183,350.875 899.281,335.797 903.378,336.333 
  907.476,350.412 911.574,373.898 915.672,403.514 919.77,433.849 923.868,459.697 927.966,478.659 932.064,488.915 936.162,491.151 940.26,487.403 944.358,480.19 
  948.456,473.417 952.554,469.402 956.651,472.012 960.749,481.142 964.847,496.937 968.945,518.175 973.043,542.511 977.141,568.382 981.239,590.349 985.337,605.326 
  989.435,611.804 993.533,606.368 997.631,586.709 1001.73,555.988 1005.83,515.546 1009.92,469.557 1014.02,422.817 1018.12,383.328 1022.22,355.524 1026.32,343.823 
  1030.41,350.258 1034.51,373.107 1038.61,411.158 1042.71,456.641 1046.81,506.81 1050.9,554.781 1055,598 1059.1,634.129 1063.2,662.342 1067.3,685.213 
  1071.39,704.78 1075.49,721.047 1079.59,736.999 1083.69,752.895 1087.78,768.897 1091.88,784.066 1095.98,796.094 1100.08,803.913 1104.18,807.6 1108.27,805.049 
  1112.37,796.994 1116.47,783.803 1120.57,767.334 1124.67,749.929 1128.76,731.351 1132.86,713.911 1136.96,697.848 1141.06,683.226 1145.16,670.023 1149.25,658.068 
  1153.35,648.898 1157.45,642.047 1161.55,639.701 1165.65,641.001 1169.74,648.001 1173.84,662.97 1177.94,685.166 1182.04,714.281 1186.14,748.176 1190.23,786.026 
  1194.33,824.583 1198.43,860.766 1202.53,891.616 1206.62,915.101 1210.72,928.893 1214.82,932.681 1218.92,928.461 1223.02,919.553 1227.11,908.433 1231.21,899.624 
  1235.31,896.57 1239.41,901.902 1243.51,915.278 1247.6,936.777 1251.7,960.83 1255.8,983.595 1259.9,998.74 1264,1001.01 1268.09,987.166 1272.19,954.004 
  1276.29,904.685 1280.39,841.273 1284.49,769.712 1288.58,695.972 1292.68,628.421 1296.78,570.466 1300.88,528.282 1304.97,501.356 1309.07,489.208 1313.17,492.432 
  1317.27,508.742 1321.37,533.801 1325.46,566.825 1329.56,605.944 1333.66,648.923 1337.76,693.413 1341.86,736.776 1345.95,776.365 1350.05,808.555 1354.15,830.452 
  1358.25,839.744 1362.35,836.257 1366.44,820.689 1370.54,796.41 1374.64,768.872 1378.74,743.069 1382.84,723.64 1386.93,715.665 1391.03,720.576 1395.13,739.522 
  1399.23,769.934 1403.33,809.745 1407.42,853.392 1411.52,897.738 1415.62,939.92 1419.72,977.714 1423.81,1010.33 1427.91,1039.35 1432.01,1065.77 1436.11,1091.48 
  1440.21,1115.66 1444.3,1140.32 1448.4,1164.38 1452.5,1185.9 1456.6,1201.51 1460.7,1208.42 1464.79,1206.46 1468.89,1192.99 1472.99,1167.8 1477.09,1133.24 
  1481.19,1091.93 1485.28,1045.33 1489.38,998.817 1493.48,955.241 1497.58,916.32 1501.68,884.836 1505.77,861.66 1509.87,846.775 1513.97,840.371 1518.07,839.868 
  1522.16,843.135 1526.26,846.948 1530.36,848.495 1534.46,845.588 1538.56,836.192 1542.65,818.985 1546.75,796.78 1550.85,772.06 1554.95,749.244 1559.05,733.906 
  1563.14,729.765 1567.24,739.239 1571.34,763.285 1575.44,800.266 1579.54,845.162 1583.63,892.4 1587.73,933.948 1591.83,963.423 1595.93,975.792 1600.03,969.272 
  1604.12,944.173 1608.22,902.784 1612.32,851.095 1616.42,794.557 1620.51,738.348 1624.61,689.091 1628.71,648.241 1632.81,616.767 1636.91,595.787 1641,582.286 
  1645.1,575.323 1649.2,572.682 1653.3,573.033 1657.4,577.85 1661.49,586.218 1665.59,601.923 1669.69,625.96 1673.79,660.398 1677.89,706.76 1681.98,763.637 
  1686.08,829.291 1690.18,900.453 1694.28,971.406 1698.38,1036.91 1702.47,1092.14 1706.57,1131.74 1710.67,1154.68 1714.77,1159.4 1718.87,1146.98 1722.96,1121.71 
  1727.06,1087.24 1731.16,1047.37 1735.26,1006.17 1739.35,968.17 1743.45,934.93 1747.55,906.129 1751.65,881.198 1755.75,860.008 1759.84,840.852 1763.94,822.763 
  1768.04,805.954 1772.14,791.385 1776.24,780.126 1780.33,775.128 1784.43,777.099 1788.53,787.039 1792.63,804.233 1796.73,826.868 1800.82,850.959 1804.92,875.249 
  1809.02,895.774 1813.12,910.681 1817.22,918.676 1821.31,920.31 1825.41,918.117 1829.51,912.741 1833.61,908.428 1837.7,904.306 1841.8,903.77 1845.9,907.894 
  1850,916.431 1854.1,929.65 1858.19,947.08 1862.29,966.343 1866.39,984.824 1870.49,1000.72 1874.59,1010.09 1878.68,1008.47 1882.78,994.599 1886.88,967.391 
  1890.98,927.924 1895.08,878.113 1899.17,823.165 1903.27,767.488 1907.37,717.661 1911.47,676.692 1915.57,648.175 1919.66,632.793 1923.76,630.399 1927.86,638.114 
  1931.96,653.503 1936.06,673.266 1940.15,695.652 1944.25,717.766 1948.35,737.322 1952.45,754.016 1956.54,767.152 1960.64,774.243 1964.74,775.677 1968.84,767.837 
  1972.94,752.794 1977.03,728.365 1981.13,694.629 1985.23,653.376 1989.33,606.021 1993.43,554.771 1997.52,502.843 2001.62,451.723 2005.72,404.465 2009.82,361.854 
  2013.92,325.192 2018.01,294.197 2022.11,269.701 2026.21,248.13 2030.31,231.016 2034.41,216.9 2038.5,206.701 2042.6,198.281 2046.7,195.727 2050.8,199.204 
  2054.89,209.864 2058.99,228.878 2063.09,256.959 2067.19,293.271 2071.29,336.206 2075.38,384.547 2079.48,435.222 2083.58,486.853 2087.68,535.956 2091.78,581.882 
  2095.87,621.373 2099.97,655.104 2104.07,681.289 2108.17,700.656 2112.27,714.137 2116.36,721.479 2120.46,726.342 2124.56,727.838 2128.66,729.126 2132.76,731.093 
  2136.85,734.671 2140.95,740.31 2145.05,748.278 2149.15,757.151 2153.24,766.249 2157.34,775.98 2161.44,784.675 2165.54,790.083 2169.64,792.661 2173.73,792.233 
  2177.83,788.656 2181.93,782.531 2186.03,774.525 2190.13,765.506 2194.22,757.393 2198.32,750.31 2202.42,744.342 2206.52,738.512 2210.62,731.926 2214.71,723.844 
  2218.81,712.01 2222.91,696.783 2227.01,677.84 2231.11,656.922 2235.2,636.451 2239.3,619.048 2243.4,608.985 2247.5,609.104 2251.6,621.554 2255.69,645.644 
  2259.79,683.525 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip5702)&#34; style=&#34;stroke:#ac8d18; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,931.237 214.927,993.598 219.025,1042.33 223.123,1073.6 227.221,1084.57 231.319,1075.46 235.417,1045.79 239.515,996.379 243.613,930.706 247.711,851.78 
  251.809,762.3 255.907,669.399 260.005,578.391 264.102,494.544 268.2,424.867 272.298,373.179 276.396,344.309 280.494,339.033 284.592,357.044 288.69,396.518 
  292.788,452.466 296.886,517.979 300.984,587.962 305.082,654.996 309.18,713.264 313.278,757.442 317.375,784.735 321.473,791.407 325.571,779.204 329.669,749.812 
  333.767,706.089 337.865,654.207 341.963,598.889 346.061,544.611 350.159,497.877 354.257,461.621 358.355,438.189 362.453,428.248 366.551,431.809 370.648,446.545 
  374.746,469.343 378.844,498.612 382.942,531.06 387.04,564.816 391.138,597.363 395.236,628.504 399.334,658.009 403.432,687.456 407.53,718.238 411.628,749.467 
  415.726,783.859 419.824,819.95 423.921,855.86 428.019,891.572 432.117,922.223 436.215,946.325 440.313,960.8 444.411,965.254 448.509,957.181 452.607,939.957 
  456.705,911.895 460.803,877.316 464.901,837.758 468.999,797.182 473.097,758.349 477.194,723.482 481.292,696.234 485.39,676.7 489.488,665.374 493.586,662.683 
  497.684,667.264 501.782,677.032 505.88,691.043 509.978,707.359 514.076,724.52 518.174,744.235 522.272,764.873 526.37,789.828 530.467,817.849 534.565,851.162 
  538.663,888.331 542.761,930.43 546.859,975.58 550.957,1022.99 555.055,1072.06 559.153,1119.86 563.251,1163.05 567.349,1200.78 571.447,1227.61 575.545,1239.7 
  579.643,1235.26 583.74,1213.07 587.838,1173.42 591.936,1119.73 596.034,1056.64 600.132,988.692 604.23,922.723 608.328,862.32 612.426,810.021 616.524,765.374 
  620.622,728.479 624.72,695.026 628.818,661.546 632.916,626.12 637.013,587.682 641.111,547.436 645.209,508.819 649.307,474.821 653.405,451.4 657.503,441.796 
  661.601,449.601 665.699,474.171 669.797,515.198 673.895,568.224 677.993,628.359 682.091,687.559 686.189,742.144 690.286,786.331 694.384,816.072 698.482,830.367 
  702.58,830.271 706.678,816.795 710.776,793.396 714.874,761.829 718.972,727.119 723.07,690.032 727.168,653.457 731.266,618.474 735.364,586.6 739.462,558.31 
  743.559,534.017 747.657,512.45 751.755,494.375 755.853,478.279 759.951,461.985 764.049,444.39 768.147,425.341 772.245,403.821 776.343,380.8 780.441,356.958 
  784.539,337.342 788.637,323.288 792.735,320.111 796.832,331.016 800.93,359.288 805.028,407.075 809.126,472.021 813.224,552.101 817.322,641.683 821.42,734.947 
  825.518,825.995 829.616,906.16 833.714,973.474 837.812,1023.9 841.91,1056.86 846.008,1072.27 850.105,1072.94 854.203,1059.8 858.301,1035.7 862.399,1000.75 
  866.497,958.497 870.595,909.201 874.693,855.9 878.791,800.903 882.889,747.065 886.987,697.848 891.085,655.545 895.183,622.017 899.281,598.934 903.378,585.234 
  907.476,581.476 911.574,586.873 915.672,599.198 919.77,618.748 923.868,644.845 927.966,676.676 932.064,714.878 936.162,760.406 940.26,811.867 944.358,868.295 
  948.456,929.187 952.554,989.452 956.651,1046.57 960.749,1093.47 964.847,1127.38 968.945,1142.48 973.043,1135.71 977.141,1107.07 981.239,1057.33 985.337,988.92 
  989.435,908.5 993.533,820.863 997.631,732.394 1001.73,649.534 1005.83,577.174 1009.92,518.939 1014.02,478.278 1018.12,455.333 1022.22,450.59 1026.32,463.557 
  1030.41,492.413 1034.51,534.559 1038.61,586.081 1042.71,644.201 1046.81,703.204 1050.9,760.387 1055,812.813 1059.1,856.899 1063.2,891.198 1067.3,916.007 
  1071.39,930.88 1075.49,935.369 1079.59,930.467 1083.69,916.499 1087.78,895.008 1091.88,866.523 1095.98,833.424 1100.08,797.593 1104.18,762.72 1108.27,732.828 
  1112.37,712.721 1116.47,703.542 1120.57,709.068 1124.67,729.057 1128.76,763.613 1132.86,808.285 1136.96,861.242 1141.06,916.975 1145.16,971.278 1149.25,1020.61 
  1153.35,1060.18 1157.45,1086.84 1161.55,1098.21 1165.65,1091.2 1169.74,1065.87 1173.84,1020.37 1177.94,958.109 1182.04,880.017 1186.14,792.584 1190.23,698.982 
  1194.33,608.132 1198.43,524.238 1202.53,453.085 1206.62,398.533 1210.72,361.327 1214.82,341.577 1218.92,334.013 1223.02,335.633 1227.11,341.434 1231.21,345.923 
  1235.31,345.589 1239.41,338.357 1243.51,326.241 1247.6,309.879 1251.7,292.534 1255.8,277.651 1259.9,270.199 1264,270.1 1268.09,279.897 1272.19,297.974 
  1276.29,324.274 1280.39,354.33 1284.49,386.697 1288.58,417.452 1292.68,443.608 1296.78,462.617 1300.88,472.89 1304.97,473.437 1309.07,465.213 1313.17,449.385 
  1317.27,427.437 1321.37,404.777 1325.46,383.299 1329.56,366.336 1333.66,359.367 1337.76,363.05 1341.86,377.965 1345.95,404.794 1350.05,441.39 1354.15,484.705 
  1358.25,533.628 1362.35,583.385 1366.44,632.255 1370.54,677.48 1374.64,716.337 1378.74,745.808 1382.84,763.271 1386.93,767.738 1391.03,758.63 1395.13,735.081 
  1399.23,699.401 1403.33,656.408 1407.42,609.737 1411.52,566.128 1415.62,532.014 1419.72,511.891 1423.81,509.119 1427.91,525.872 1432.01,561.117 1436.11,612.036 
  1440.21,673.072 1444.3,739.224 1448.4,803.084 1452.5,860.067 1456.6,902.751 1460.7,927.521 1464.79,932.78 1468.89,920.623 1472.99,892.481 1477.09,853.557 
  1481.19,810.642 1485.28,770.38 1489.38,738.29 1493.48,717.217 1497.58,709.713 1501.68,714.075 1505.77,726.162 1509.87,741.374 1513.97,754.258 1518.07,758.892 
  1522.16,753.042 1526.26,734.248 1530.36,705.024 1534.46,666.075 1538.56,622.386 1542.65,578.958 1546.75,540.291 1550.85,510.431 1554.95,490.649 1559.05,482.169 
  1563.14,486.949 1567.24,501.83 1571.34,528.082 1575.44,564.576 1579.54,608.694 1583.63,660.551 1587.73,718.465 1591.83,780.305 1595.93,843.384 1600.03,905.326 
  1604.12,961.877 1608.22,1011.41 1612.32,1051.18 1616.42,1078.53 1620.51,1093.97 1624.61,1097.71 1628.71,1091.28 1632.81,1078.71 1636.91,1062.51 1641,1047.96 
  1645.1,1037.75 1649.2,1032.94 1653.3,1035.9 1657.4,1043.1 1661.49,1052.85 1665.59,1061.72 1669.69,1066.57 1673.79,1063.87 1677.89,1052.59 1681.98,1031.7 
  1686.08,1000.44 1690.18,961.246 1694.28,914.235 1698.38,861.148 1702.47,803.721 1706.57,744.356 1710.67,683.187 1714.77,623.156 1718.87,564.812 1722.96,512.061 
  1727.06,463.434 1731.16,422.256 1735.26,388.318 1739.35,362.665 1743.45,344.962 1747.55,335.93 1751.65,334.62 1755.75,341.235 1759.84,355.931 1763.94,378.24 
  1768.04,407.501 1772.14,443.879 1776.24,486.813 1780.33,534.483 1784.43,586.447 1788.53,638.137 1792.63,687.344 1796.73,729.516 1800.82,760.922 1804.92,778.785 
  1809.02,781.805 1813.12,770.256 1817.22,746.287 1821.31,713.969 1825.41,677.399 1829.51,642.638 1833.61,612.527 1837.7,591.421 1841.8,581.463 1845.9,583.313 
  1850,594.643 1854.1,613.37 1858.19,637.454 1862.29,662.635 1866.39,687.089 1870.49,708.284 1874.59,725.889 1878.68,739.395 1882.78,750.753 1886.88,761.029 
  1890.98,772.789 1895.08,786.181 1899.17,801.769 1903.27,819.025 1907.37,837.314 1911.47,852.273 1915.57,863.257 1919.66,867.967 1923.76,864.738 1927.86,852.217 
  1931.96,833.769 1936.06,809.788 1940.15,783.504 1944.25,755.79 1948.35,730.045 1952.45,706.974 1956.54,686.507 1960.64,669.834 1964.74,655.205 1968.84,642.827 
  1972.94,632.235 1977.03,623.492 1981.13,615.813 1985.23,608.166 1989.33,600.469 1993.43,592.937 1997.52,585.814 2001.62,579.617 2005.72,576.568 2009.82,578.513 
  2013.92,587.483 2018.01,606.31 2022.11,634.696 2026.21,672.966 2030.31,719.934 2034.41,770.818 2038.5,824.852 2042.6,875.754 2046.7,922.077 2050.8,961.148 
  2054.89,990.736 2058.99,1011.55 2063.09,1024.22 2067.19,1030.9 2071.29,1034.34 2075.38,1036.31 2079.48,1037.06 2083.58,1038.68 2087.68,1039.28 2091.78,1039.07 
  2095.87,1036.31 2099.97,1032.44 2104.07,1026.82 2108.17,1020.86 2112.27,1019.64 2116.36,1023.9 2120.46,1036.57 2124.56,1057.47 2128.66,1087.39 2132.76,1121.57 
  2136.85,1156.41 2140.95,1188.3 2145.05,1212.05 2149.15,1227.06 2153.24,1229.18 2157.34,1220.37 2161.44,1203.03 2165.54,1180.3 2169.64,1155.73 2173.73,1134.93 
  2177.83,1122.37 2181.93,1120.53 2186.03,1132.3 2190.13,1158.1 2194.22,1197.12 2198.32,1244.9 2202.42,1297.89 2206.52,1352.3 2210.62,1399.12 2214.71,1435.68 
  2218.81,1457.38 2222.91,1462.26 2227.01,1450.15 2231.11,1422.88 2235.2,1383.58 2239.3,1337.21 2243.4,1287.8 2247.5,1238.17 2251.6,1191.87 2255.69,1150.29 
  2259.79,1113.25 
  &#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;非常にお手軽である。&lt;/p&gt;
&lt;h3 id=&#34;カーネルの和積&#34;&gt;カーネルの和、積&lt;/h3&gt;
&lt;p&gt;カーネルの和と積も定義されている。線形カーネルと周期カーネルで和、積を使ってみる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;kernel_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Lin(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Periodic(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;)
gp_sum &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GPE(kernel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; kernel_sum)
samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(gp_sum, xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
plot(xs, samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6100&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6100)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6101&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6100)&#34; points=&#34;
149.361,1503.47 2321.26,1503.47 2321.26,47.2441 149.361,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6102&#34;&gt;
    &lt;rect x=&#34;149&#34; y=&#34;47&#34; width=&#34;2173&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1493.39 2321.26,1493.39 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1283.95 2321.26,1283.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,1074.51 2321.26,1074.51 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,865.068 2321.26,865.068 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,655.627 2321.26,655.627 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,446.185 2321.26,446.185 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  149.361,236.743 2321.26,236.743 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1503.47 149.361,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  415.726,1503.47 415.726,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  825.518,1503.47 825.518,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1235.31,1503.47 1235.31,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1645.1,1503.47 1645.1,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2054.89,1503.47 2054.89,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1493.39 181.939,1493.39 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1283.95 181.939,1283.95 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,1074.51 181.939,1074.51 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,865.068 181.939,865.068 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,655.627 181.939,655.627 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,446.185 181.939,446.185 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6100)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  149.361,236.743 181.939,236.743 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 415.726, 1557.47)&#34; x=&#34;415.726&#34; y=&#34;1557.47&#34;&gt;-20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 825.518, 1557.47)&#34; x=&#34;825.518&#34; y=&#34;1557.47&#34;&gt;-10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1235.31, 1557.47)&#34; x=&#34;1235.31&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1645.1, 1557.47)&#34; x=&#34;1645.1&#34; y=&#34;1557.47&#34;&gt;10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2054.89, 1557.47)&#34; x=&#34;2054.89&#34; y=&#34;1557.47&#34;&gt;20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1510.89)&#34; x=&#34;125.361&#34; y=&#34;1510.89&#34;&gt;-6&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1301.45)&#34; x=&#34;125.361&#34; y=&#34;1301.45&#34;&gt;-4&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 1092.01)&#34; x=&#34;125.361&#34; y=&#34;1092.01&#34;&gt;-2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 882.568)&#34; x=&#34;125.361&#34; y=&#34;882.568&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 673.127)&#34; x=&#34;125.361&#34; y=&#34;673.127&#34;&gt;2&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 463.685)&#34; x=&#34;125.361&#34; y=&#34;463.685&#34;&gt;4&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6100)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 125.361, 254.243)&#34; x=&#34;125.361&#34; y=&#34;254.243&#34;&gt;6&lt;/text&gt;
&lt;/g&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#009af9; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1106.88 214.927,1100.46 219.025,1094.16 223.123,1086.27 227.221,1077.92 231.319,1068.35 235.417,1058.34 239.515,1046.88 243.613,1035.58 247.711,1021.92 
  251.809,1008.79 255.907,995.719 260.005,981.843 264.102,968.419 268.2,956.364 272.298,945.378 276.396,936.383 280.494,928.279 284.592,923.276 288.69,920.965 
  292.788,920.921 296.886,923.015 300.984,927.024 305.082,932.317 309.18,938.617 313.278,945.963 317.375,951.383 321.473,957.065 325.571,961.292 329.669,963.411 
  333.767,965.057 337.865,965.659 341.963,965.65 346.061,966.11 350.159,966.835 354.257,968.762 358.355,971.823 362.453,976.703 366.551,983.624 370.648,991.366 
  374.746,1001.67 378.844,1012.46 382.942,1026.09 387.04,1039.75 391.138,1055.2 395.236,1071.55 399.334,1086.98 403.432,1102.02 407.53,1115.77 411.628,1128.91 
  415.726,1139.06 419.824,1146.33 423.921,1151.12 428.019,1152.63 432.117,1151.74 436.215,1147.26 440.313,1141.76 444.411,1133.66 448.509,1124.29 452.607,1114.87 
  456.705,1104.6 460.803,1095.51 464.901,1088.03 468.999,1080.71 473.097,1075.08 477.194,1070.3 481.292,1065.79 485.39,1062.46 489.488,1059.22 493.586,1056 
  497.684,1051.92 501.782,1048.5 505.88,1044.56 509.978,1039.76 514.076,1034.29 518.174,1028.32 522.272,1021.55 526.37,1013.91 530.467,1005.06 534.565,995.903 
  538.663,985.295 542.761,973.767 546.859,961.959 550.957,948.882 555.055,935.635 559.153,922.27 563.251,908.354 567.349,895.394 571.447,883.453 575.545,872.243 
  579.643,863.218 583.74,855.926 587.838,851.269 591.936,849.005 596.034,849.29 600.132,851.528 604.23,856.016 608.328,861.543 612.426,867.934 616.524,874.077 
  620.622,880.378 624.72,885.412 628.818,889.221 632.916,891.862 637.013,893.25 641.111,893.653 645.209,894.035 649.307,894.067 653.405,895.069 657.503,896.869 
  661.601,900.494 665.699,905.793 669.797,912.357 673.895,920.738 677.993,930.463 682.091,942.233 686.189,955.528 690.286,969.438 694.384,985.357 698.482,1000.76 
  702.58,1016.73 706.678,1031.98 710.776,1046.13 714.874,1058.36 718.972,1067.98 723.07,1075.25 727.168,1079.49 731.266,1081.29 735.364,1079.57 739.462,1074.9 
  743.559,1068.66 747.657,1060.62 751.755,1051.34 755.853,1041.57 759.951,1032.34 764.049,1023.41 768.147,1014.97 772.245,1008.16 776.343,1002.57 780.441,997.67 
  784.539,993.837 788.637,990.295 792.735,987.745 796.832,983.885 800.93,979.978 805.028,976.727 809.126,971.99 813.224,967.337 817.322,961.974 821.42,955.477 
  825.518,949.181 829.616,941.281 833.714,932.328 837.812,923.433 841.91,912.589 846.008,901.047 850.105,888.594 854.203,876.212 858.301,862.486 862.399,848.552 
  866.497,834.877 870.595,821.79 874.693,810.288 878.791,798.985 882.889,790.335 886.987,783.791 891.085,779.753 895.183,777.023 899.281,777.664 903.378,780.103 
  907.476,784.335 911.574,789.841 915.672,796.669 919.77,803.235 923.868,808.9 927.966,814.04 932.064,817.466 936.162,820.39 940.26,821.653 944.358,821.909 
  948.456,822.276 952.554,822.194 956.651,823.629 960.749,825.419 964.847,828.984 968.945,833.996 973.043,841.231 977.141,850.263 981.239,860.388 985.337,872.07 
  989.435,885.153 993.533,899.746 997.631,915.137 1001.73,931.147 1005.83,947.024 1009.92,961.87 1014.02,975.831 1018.12,987.577 1022.22,997.4 1026.32,1004 
  1030.41,1008.1 1034.51,1008.75 1038.61,1007.1 1042.71,1002.98 1046.81,995.445 1050.9,988.03 1055,978.811 1059.1,968.94 1063.2,959.247 1067.3,950.388 
  1071.39,942.334 1075.49,935.678 1079.59,930.308 1083.69,925.175 1087.78,921.511 1091.88,918.627 1095.98,914.798 1100.08,911.618 1104.18,908.269 1108.27,903.826 
  1112.37,899.768 1116.47,895.197 1120.57,889.269 1124.67,883.341 1128.76,875.997 1132.86,868.278 1136.96,860.061 1141.06,850.043 1145.16,839.702 1149.25,827.801 
  1153.35,815.51 1157.45,802.464 1161.55,789.152 1165.65,775.397 1169.74,761.979 1173.84,748.798 1177.94,737.019 1182.04,726.326 1186.14,717.377 1190.23,711.277 
  1194.33,707.042 1198.43,705.253 1202.53,705.906 1206.62,708.6 1210.72,712.765 1214.82,719.092 1218.92,725.817 1223.02,732.17 1227.11,738.465 1231.21,742.671 
  1235.31,747.041 1239.41,748.994 1243.51,750.166 1247.6,750.155 1251.7,750.891 1255.8,750.886 1259.9,752.03 1264,754.174 1268.09,757.959 1272.19,763.473 
  1276.29,770.325 1280.39,779.329 1284.49,790.018 1288.58,801.984 1292.68,814.991 1296.78,829.8 1300.88,845.167 1304.97,860.901 1309.07,876.196 1313.17,891.528 
  1317.27,905.065 1321.37,917.141 1325.46,925.981 1329.56,933.328 1333.66,937.032 1337.76,937.141 1341.86,935.449 1345.95,930.678 1350.05,923.568 1354.15,915.262 
  1358.25,905.641 1362.35,895.736 1366.44,886.444 1370.54,877.723 1374.64,870.13 1378.74,863.368 1382.84,857.523 1386.93,853.288 1391.03,849.613 1395.13,846.035 
  1399.23,842.771 1403.33,839.432 1407.42,836.112 1411.52,832.083 1415.62,827.142 1419.72,822.603 1423.81,817.211 1427.91,810.82 1432.01,803.843 1436.11,795.776 
  1440.21,786.674 1444.3,777.44 1448.4,766.709 1452.5,754.869 1456.6,742.389 1460.7,729.233 1464.79,715.399 1468.89,702.053 1472.99,689.132 1477.09,676.042 
  1481.19,664.645 1485.28,654.146 1489.38,645.035 1493.48,638.915 1497.58,634.809 1501.68,632.939 1505.77,634.002 1509.87,637.005 1513.97,642.039 1518.07,648.111 
  1522.16,654.433 1526.26,660.675 1530.36,667.295 1534.46,671.93 1538.56,675.224 1542.65,676.781 1546.75,678.444 1550.85,678.216 1554.95,678.759 1559.05,679.209 
  1563.14,680.458 1567.24,682.782 1571.34,686.713 1575.44,692.666 1579.54,699.608 1583.63,708.733 1587.73,719.28 1591.83,731.897 1595.93,744.829 1600.03,759.446 
  1604.12,775.226 1608.22,791.203 1612.32,806.663 1616.42,820.904 1620.51,834.922 1624.61,846.776 1628.71,854.916 1632.81,861.419 1636.91,865.383 1641,865.602 
  1645.1,862.768 1649.2,857.909 1653.3,851.079 1657.4,842.258 1661.49,832.797 1665.59,823.568 1669.69,813.903 1673.79,804.894 1677.89,797.338 1681.98,790.862 
  1686.08,785.539 1690.18,781.253 1694.28,777.354 1698.38,773.898 1702.47,771.137 1706.57,767.51 1710.67,763.892 1714.77,759.557 1718.87,755.189 1722.96,750.209 
  1727.06,744.645 1731.16,738.462 1735.26,731.361 1739.35,722.9 1743.45,714.16 1747.55,703.767 1751.65,693.673 1755.75,681.82 1759.84,669.358 1763.94,656.536 
  1768.04,642.318 1772.14,629.15 1776.24,615.761 1780.33,602.473 1784.43,590.943 1788.53,580.783 1792.63,572.625 1796.73,566.427 1800.82,563.1 1804.92,561.819 
  1809.02,562.766 1813.12,565.831 1817.22,570.601 1821.31,576.761 1825.41,583.327 1829.51,589.981 1833.61,595.831 1837.7,600.268 1841.8,603.623 1845.9,606.033 
  1850,606.216 1854.1,606.4 1858.19,606.668 1862.29,607.367 1866.39,608.315 1870.49,611.931 1874.59,615.645 1878.68,621.13 1882.78,628.824 1886.88,637.906 
  1890.98,648.756 1895.08,661.419 1899.17,674.613 1903.27,689.388 1907.37,704.974 1911.47,721.46 1915.57,736.662 1919.66,750.977 1923.76,764.558 1927.86,775.447 
  1931.96,784.451 1936.06,790.701 1940.15,793.354 1944.25,793.478 1948.35,790.556 1952.45,785.459 1956.54,778.631 1960.64,769.917 1964.74,759.967 1968.84,750.725 
  1972.94,740.739 1977.03,732.373 1981.13,724.9 1985.23,718.516 1989.33,713.27 1993.43,708.985 1997.52,705.034 2001.62,701.639 2005.72,698.257 2009.82,695.455 
  2013.92,691.715 2018.01,687.542 2022.11,682.523 2026.21,678.025 2030.31,672.328 2034.41,665.641 2038.5,658.513 2042.6,650.371 2046.7,641.636 2050.8,631.616 
  2054.89,620.664 2058.99,609.168 2063.09,596.106 2067.19,582.35 2071.29,569.508 2075.38,555.543 2079.48,542.498 2083.58,530.011 2087.68,518.497 2091.78,508.528 
  2095.87,499.999 2099.97,494.015 2104.07,490.785 2108.17,489.702 2112.27,491.429 2116.36,494.65 2120.46,500.301 2124.56,505.264 2128.66,512.469 2132.76,518.774 
  2136.85,524.613 2140.95,528.791 2145.05,532.345 2149.15,533.755 2153.24,534.948 2157.34,534.562 2161.44,535.108 2165.54,535.902 2169.64,537.134 2173.73,540.105 
  2177.83,544.288 2181.93,549.996 2186.03,557.911 2190.13,566.948 2194.22,578.225 2198.32,590.359 2202.42,604.638 2206.52,619.455 2210.62,635.055 2214.71,650.746 
  2218.81,666.757 2222.91,680.931 2227.01,694.374 2231.11,704.929 2235.2,713.882 2239.3,719.025 2243.4,722.028 2247.5,721.951 2251.6,718.285 2255.69,713.189 
  2259.79,705.674 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#e26f46; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,660.658 214.927,647.261 219.025,633.188 223.123,619.711 227.221,607.087 231.319,596.179 235.417,587.21 239.515,581.42 243.613,579.098 247.711,579.162 
  251.809,582.855 255.907,590.506 260.005,601.072 264.102,613.766 268.2,628.472 272.298,644.082 276.396,658.885 280.494,673.752 284.592,686.409 288.69,695.739 
  292.788,701.838 296.886,704.303 300.984,703.517 305.082,699.445 309.18,692.769 313.278,683.909 317.375,673.679 321.473,663.175 325.571,652.968 329.669,643.825 
  333.767,635.835 337.865,631.005 341.963,627.85 346.061,627.432 350.159,629.242 354.257,632.631 358.355,637.881 362.453,643.98 366.551,651.108 370.648,658.477 
  374.746,665.664 378.844,672.194 382.942,678.549 387.04,683.873 391.138,687.19 395.236,689.443 399.334,691.22 403.432,690.507 407.53,690.042 411.628,688.086 
  415.726,685.617 419.824,684.2 423.921,682.94 428.019,682.257 432.117,682.725 436.215,685.25 440.313,688.716 444.411,692.993 448.509,698.822 452.607,705.61 
  456.705,713.253 460.803,721.285 464.901,729.066 468.999,736.286 473.097,744.107 477.194,749.724 481.292,754.997 485.39,758.027 489.488,758.678 493.586,757.62 
  497.684,753.124 501.782,746.335 505.88,737.612 509.978,726.873 514.076,713.922 518.174,700.131 522.272,686.291 526.37,672.803 530.467,660.257 534.565,649.58 
  538.663,641.149 542.761,635.553 546.859,632.939 550.957,634.247 555.055,638.691 559.153,646.164 563.251,656.75 567.349,670.104 571.447,684.763 575.545,700.65 
  579.643,715.903 583.74,729.816 587.838,742.283 591.936,751.469 596.034,756.681 600.132,759.193 604.23,758.1 608.328,753.202 612.426,746.44 616.524,736.922 
  620.622,727.159 624.72,716.953 628.818,706.591 632.916,697.079 637.013,690.041 641.111,684.837 645.209,682.601 649.307,682.107 653.405,683.949 657.503,687.822 
  661.601,693.084 665.699,698.927 669.797,706.803 673.895,713.921 677.993,720.794 682.091,727.734 686.189,733.926 690.286,738.657 694.384,742.137 698.482,744.515 
  702.58,745.724 706.678,745.85 710.776,744.512 714.874,742.518 718.972,740.72 723.07,738.41 727.168,737.611 731.266,736.947 735.364,737.588 739.462,739.973 
  743.559,743.633 747.657,748.126 751.755,753.945 755.853,761.331 759.951,768.423 764.049,776.503 768.147,784.92 772.245,792.409 776.343,799.131 780.441,805.483 
  784.539,810.284 788.637,812.952 792.735,813.646 796.832,811.768 800.93,808.068 805.028,800.673 809.126,791.236 813.224,779.798 817.322,766.763 821.42,753.431 
  825.518,739.584 829.616,726.016 833.714,714.074 837.812,703.402 841.91,694.609 846.008,690.104 850.105,688.134 854.203,689.189 858.301,693.425 862.399,701.788 
  866.497,713.38 870.595,726.269 874.693,741.057 878.791,756.576 882.889,772.068 886.987,785.821 891.085,797.768 895.183,806.675 899.281,811.985 903.378,814.022 
  907.476,812.325 911.574,807.566 915.672,800.378 919.77,791.08 923.868,780.917 927.966,770.078 932.064,760.05 936.162,751.128 940.26,744.064 944.358,739.493 
  948.456,736.899 952.554,737.415 956.651,739.525 960.749,742.823 964.847,748.38 968.945,754.915 973.043,762.104 977.141,769.629 981.239,776.275 985.337,782.823 
  989.435,789.243 993.533,793.508 997.631,797.392 1001.73,799.391 1005.83,800.465 1009.92,800.127 1014.02,798.674 1018.12,797.175 1022.22,795.221 1026.32,793.346 
  1030.41,792.139 1034.51,791.288 1038.61,792.172 1042.71,795.297 1046.81,798.671 1050.9,803.42 1055,809.343 1059.1,816.536 1063.2,824.046 1067.3,832.048 
  1071.39,840.341 1075.49,847.545 1079.59,854.693 1083.69,860.554 1087.78,865.219 1091.88,867.785 1095.98,868.344 1100.08,866.703 1104.18,861.249 1108.27,854.102 
  1112.37,845.135 1116.47,832.936 1120.57,820.254 1124.67,806.291 1128.76,792.326 1132.86,779.321 1136.96,766.867 1141.06,757.042 1145.16,748.975 1149.25,744.257 
  1153.35,742.241 1157.45,744.094 1161.55,748.638 1165.65,757.624 1169.74,769.099 1173.84,782.635 1177.94,797.415 1182.04,812.989 1186.14,828.536 1190.23,842.136 
  1194.33,853.445 1198.43,862.162 1202.53,866.791 1206.62,868.732 1210.72,866.774 1214.82,861.795 1218.92,854.33 1223.02,844.874 1227.11,834.373 1231.21,823.316 
  1235.31,813.288 1239.41,804.795 1243.51,798.256 1247.6,793.796 1251.7,791.583 1255.8,792.11 1259.9,793.834 1264,798.135 1268.09,803.453 1272.19,810.002 
  1276.29,817.282 1280.39,824.573 1284.49,832.047 1288.58,838.417 1292.68,844.177 1296.78,848.826 1300.88,851.775 1304.97,854.745 1309.07,854.954 1313.17,854.663 
  1317.27,853.388 1321.37,851.517 1325.46,849.417 1329.56,847.935 1333.66,846.442 1337.76,846.23 1341.86,846.862 1345.95,850.026 1350.05,854.015 1354.15,859.023 
  1358.25,864.839 1362.35,872.343 1366.44,879.893 1370.54,887.399 1374.64,895.514 1378.74,903.246 1382.84,909.993 1386.93,915.724 1391.03,920.521 1395.13,922.92 
  1399.23,923.109 1403.33,920.493 1407.42,915.328 1411.52,908.224 1415.62,897.931 1419.72,886.299 1423.81,874.013 1427.91,859.888 1432.01,846.099 1436.11,832.356 
  1440.21,820.759 1444.3,811.251 1448.4,802.771 1452.5,798.307 1456.6,796.941 1460.7,798.87 1464.79,804.533 1468.89,813.518 1472.99,824.809 1477.09,838.718 
  1481.19,853.911 1485.28,869.403 1489.38,884.718 1493.48,898.231 1497.58,909.347 1501.68,917.841 1505.77,921.851 1509.87,923.136 1513.97,920.805 1518.07,916.077 
  1522.16,908.026 1526.26,898.035 1530.36,887.664 1534.46,877.135 1538.56,867.342 1542.65,858.998 1546.75,852.654 1550.85,848.162 1554.95,846.419 1559.05,846.502 
  1563.14,849.181 1567.24,853.222 1571.34,858.776 1575.44,865.487 1579.54,872.934 1583.63,879.856 1587.73,887.382 1591.83,894.033 1595.93,899.286 1600.03,904.587 
  1604.12,907.592 1608.22,908.78 1612.32,909.449 1616.42,909.321 1620.51,907.935 1624.61,905.604 1628.71,903.6 1632.81,902.036 1636.91,901.273 1641,900.648 
  1645.1,902.3 1649.2,905.276 1653.3,909.217 1657.4,914.305 1661.49,920.188 1665.59,927.891 1669.69,935.099 1673.79,943.122 1677.89,951.074 1681.98,958.484 
  1686.08,965.476 1690.18,971.416 1694.28,975.299 1698.38,977.347 1702.47,977.025 1706.57,974.519 1710.67,969.355 1714.77,961.878 1718.87,951.322 1722.96,939.71 
  1727.06,926.499 1731.16,912.944 1735.26,898.936 1739.35,886.38 1743.45,874.412 1747.55,864.663 1751.65,856.761 1755.75,853.122 1759.84,851.734 1763.94,854.266 
  1768.04,860.271 1772.14,869.091 1776.24,880.938 1780.33,895.037 1784.43,910.486 1788.53,926.34 1792.63,940.709 1796.73,954.515 1800.82,964.872 1804.92,972.955 
  1809.02,976.843 1813.12,977.991 1817.22,975.351 1821.31,969.6 1825.41,961.395 1829.51,951.671 1833.61,941.227 1837.7,930.584 1841.8,920.924 1845.9,912.909 
  1850,906.613 1854.1,902.218 1858.19,900.659 1862.29,901.44 1866.39,903.955 1870.49,908.819 1874.59,914.546 1878.68,920.948 1882.78,928.05 1886.88,935.485 
  1890.98,943.021 1895.08,948.749 1899.17,954.591 1903.27,959.061 1907.37,962.386 1911.47,963.651 1915.57,964.768 1919.66,963.807 1923.76,962.293 1927.86,960.318 
  1931.96,958.505 1936.06,956.463 1940.15,955.478 1944.25,955.728 1948.35,957.255 1952.45,960.021 1956.54,964.436 1960.64,969.439 1964.74,975.5 1968.84,983.439 
  1972.94,990.592 1977.03,999.024 1981.13,1006.76 1985.23,1014.23 1989.33,1021.08 1993.43,1026.19 1997.52,1030.31 2001.62,1032.34 2005.72,1031.67 2009.82,1029.22 
  2013.92,1023.26 2018.01,1015.2 2022.11,1005.04 2026.21,993.366 2030.31,979.828 2034.41,965.757 2038.5,951.967 2042.6,939.37 2046.7,927.743 2050.8,917.995 
  2054.89,911.531 2058.99,907.203 2063.09,906.682 2067.19,909.407 2071.29,915.526 2075.38,925.001 2079.48,936.894 2083.58,950.817 2087.68,966.848 2091.78,982.213 
  2095.87,996.872 2099.97,1009.9 2104.07,1020.72 2108.17,1027.85 2112.27,1032.22 2116.36,1032.48 2120.46,1029.53 2124.56,1023.2 2128.66,1014.9 2132.76,1005.39 
  2136.85,995 2140.95,984.202 2145.05,974.895 2149.15,966.535 2153.24,960.789 2157.34,956.751 2161.44,955.622 2165.54,956.22 2169.64,959.671 2173.73,964.241 
  2177.83,969.682 2181.93,976.476 2186.03,983.773 2190.13,991.005 2194.22,997.809 2198.32,1004.21 2202.42,1010.08 2206.52,1013.83 2210.62,1016.79 2214.71,1018.51 
  2218.81,1019.03 2222.91,1018.53 2227.01,1016.68 2231.11,1015.18 2235.2,1012.76 2239.3,1011.47 2243.4,1010.63 2247.5,1010.28 2251.6,1012.54 2255.69,1014.94 
  2259.79,1019.4 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1462.26 214.927,1454.22 219.025,1445.87 223.123,1438.07 227.221,1430.53 231.319,1424.28 235.417,1418.2 239.515,1413.89 243.613,1410.53 247.711,1408.83 
  251.809,1408.29 255.907,1408.72 260.005,1408.72 264.102,1410.21 268.2,1411.44 272.298,1412.45 276.396,1412.09 280.494,1411.89 284.592,1410.04 288.69,1406.46 
  292.788,1402.26 296.886,1396.43 300.984,1389.73 305.082,1382.18 309.18,1374.34 313.278,1367.01 317.375,1360.11 321.473,1355.09 325.571,1351.07 329.669,1349.35 
  333.767,1348.79 337.865,1349.76 341.963,1350.37 346.061,1352.27 350.159,1352.64 354.257,1351.88 358.355,1349.55 362.453,1345.48 366.551,1339.32 370.648,1331.33 
  374.746,1322.63 378.844,1313.23 382.942,1304 387.04,1295.19 391.138,1287.3 395.236,1280.76 399.334,1274.89 403.432,1270.68 407.53,1267.47 411.628,1265.65 
  415.726,1264.33 419.824,1264.63 423.921,1265.54 428.019,1266.89 432.117,1268.68 436.215,1271.73 440.313,1274.28 444.411,1277.3 448.509,1280.32 452.607,1282.69 
  456.705,1286.29 460.803,1288.41 464.901,1290.02 468.999,1292.51 473.097,1294.21 477.194,1295.4 481.292,1295.43 485.39,1295.27 489.488,1294.27 493.586,1292.45 
  497.684,1288.88 501.782,1284.34 505.88,1278.83 509.978,1272.58 514.076,1265.31 518.174,1257.26 522.272,1249.31 526.37,1241.1 530.467,1234.31 534.565,1227.69 
  538.663,1221.95 542.761,1217.21 546.859,1214.6 550.957,1212.59 555.055,1212.5 559.153,1212.2 563.251,1213.04 567.349,1214.27 571.447,1215.15 575.545,1216.54 
  579.643,1216.4 583.74,1215.97 587.838,1214.06 591.936,1210.2 596.034,1205.71 600.132,1199.5 604.23,1193.26 608.328,1185.22 612.426,1177.67 616.524,1170.37 
  620.622,1163.35 624.72,1158.82 628.818,1155.06 632.916,1153.3 637.013,1152.63 641.111,1153.57 645.209,1155.27 649.307,1156.23 653.405,1157.26 657.503,1155.62 
  661.601,1153.09 665.699,1148.64 669.797,1142.48 673.895,1134.42 677.993,1125.47 682.091,1115.97 686.189,1107.06 690.286,1098.55 694.384,1090.57 698.482,1084.08 
  702.58,1078.04 706.678,1074.39 710.776,1071.26 714.874,1068.78 718.972,1068.53 723.07,1068.52 727.168,1069.31 731.266,1071.02 735.364,1072.86 739.462,1075.73 
  743.559,1078.54 747.657,1081.45 751.755,1084.66 755.853,1087.61 759.951,1090.11 764.049,1092.36 768.147,1094.92 772.245,1096.66 776.343,1098.7 780.441,1099.25 
  784.539,1099.84 788.637,1099.23 792.735,1097.72 796.832,1096.38 800.93,1092.62 805.028,1088.01 809.126,1082.27 813.224,1075.56 817.322,1068.37 821.42,1059.92 
  825.518,1052.17 829.616,1044 833.714,1037.35 837.812,1030.96 841.91,1025.07 846.008,1021.09 850.105,1018.62 854.203,1016.54 858.301,1016.29 862.399,1016.42 
  866.497,1017.22 870.595,1018.38 874.693,1019.39 878.791,1020.23 882.889,1020.46 886.987,1019.49 891.085,1017.47 895.183,1013.76 899.281,1008.96 903.378,1003.24 
  907.476,996.084 911.574,988.519 915.672,980.638 919.77,974.115 923.868,966.989 927.966,962.122 932.064,958.537 936.162,957.148 940.26,956.858 944.358,957.957 
  948.456,959.357 952.554,960.191 956.651,960.641 960.749,959.897 964.847,956.707 968.945,951.789 973.043,945.363 977.141,937.628 981.239,928.733 985.337,919.35 
  989.435,910.607 993.533,901.514 997.631,893.627 1001.73,887.525 1005.83,882.115 1009.92,878.249 1014.02,874.987 1018.12,873.222 1022.22,872.783 1026.32,872.185 
  1030.41,873.548 1034.51,875.432 1038.61,877.092 1042.71,880.257 1046.81,883.083 1050.9,886.146 1055,888.779 1059.1,891.416 1063.2,894.493 1067.3,896.724 
  1071.39,899.205 1075.49,901.05 1079.59,902.162 1083.69,903.381 1087.78,903.953 1091.88,903.249 1095.98,902.021 1100.08,899.134 1104.18,896.454 1108.27,891.472 
  1112.37,885.084 1116.47,878.453 1120.57,870.89 1124.67,863.612 1128.76,855.404 1132.86,847.65 1136.96,840.054 1141.06,833.893 1145.16,828.797 1149.25,824.902 
  1153.35,821.865 1157.45,820.758 1161.55,820.145 1165.65,820.719 1169.74,821.513 1173.84,822.691 1177.94,824.173 1182.04,824.594 1186.14,824.881 1190.23,823.057 
  1194.33,820.89 1198.43,817.624 1202.53,812.777 1206.62,806.203 1210.72,799.325 1214.82,791.445 1218.92,783.933 1223.02,776.976 1227.11,770.277 1231.21,765.735 
  1235.31,762.762 1239.41,761.046 1243.51,760.747 1247.6,761.829 1251.7,763.098 1255.8,764.512 1259.9,765.017 1264,763.367 1268.09,760.183 1272.19,755.442 
  1276.29,748.67 1280.39,740.85 1284.49,731.805 1288.58,722.67 1292.68,713.329 1296.78,704.37 1300.88,696.832 1304.97,691.04 1309.07,685.437 1313.17,681.969 
  1317.27,678.674 1321.37,676.846 1325.46,676.251 1329.56,677.091 1333.66,677.994 1337.76,679.663 1341.86,681.626 1345.95,684.351 1350.05,687.245 1354.15,690.281 
  1358.25,693.132 1362.35,696.401 1366.44,698.682 1370.54,701.145 1374.64,703.527 1378.74,705.281 1382.84,706.73 1386.93,707.886 1391.03,708.144 1395.13,707.233 
  1399.23,706.266 1403.33,703.366 1407.42,699.586 1411.52,694.894 1415.62,689.048 1419.72,682.144 1423.81,674.453 1427.91,666.658 1432.01,658.301 1436.11,650.785 
  1440.21,643.089 1444.3,637.457 1448.4,632.149 1452.5,628.534 1456.6,625.818 1460.7,624.423 1464.79,624.056 1468.89,624.518 1472.99,625.438 1477.09,627.019 
  1481.19,627.91 1485.28,628.183 1489.38,628.781 1493.48,627.138 1497.58,624.987 1501.68,620.898 1505.77,616.145 1509.87,609.55 1513.97,602.466 1518.07,595.18 
  1522.16,587.058 1526.26,580.163 1530.36,574.205 1534.46,569.176 1538.56,566.418 1542.65,564.921 1546.75,565.081 1550.85,566 1554.95,567.35 1559.05,568.644 
  1563.14,568.41 1567.24,567.065 1571.34,564.069 1575.44,558.748 1579.54,552.01 1583.63,543.658 1587.73,534.601 1591.83,525.244 1595.93,516.411 1600.03,508.05 
  1604.12,500.336 1608.22,493.985 1612.32,489.034 1616.42,484.85 1620.51,482.141 1624.61,480.632 1628.71,480.767 1632.81,480.665 1636.91,481.952 1641,483.729 
  1645.1,486.077 1649.2,488.565 1653.3,491.483 1657.4,494.672 1661.49,497.713 1665.59,500.79 1669.69,503.067 1673.79,505.589 1677.89,507.581 1681.98,509.104 
  1686.08,510.658 1690.18,511.359 1694.28,511.97 1698.38,510.971 1702.47,509.304 1706.57,507.253 1710.67,503.524 1714.77,498.55 1718.87,492.23 1722.96,485.539 
  1727.06,477.872 1731.16,469.606 1735.26,461.537 1739.35,453.496 1743.45,446.932 1747.55,440.635 1751.65,435.701 1755.75,432.258 1759.84,429.629 1763.94,428.437 
  1768.04,428.075 1772.14,429.14 1776.24,429.697 1780.33,430.652 1784.43,431.781 1788.53,432.297 1792.63,432.244 1796.73,430.899 1800.82,428.514 1804.92,424.811 
  1809.02,419.348 1813.12,412.83 1817.22,405.657 1821.31,398.068 1825.41,390.468 1829.51,383.179 1833.61,377.771 1837.7,372.522 1841.8,370.551 1845.9,369.061 
  1850,369.206 1854.1,370.231 1858.19,371.27 1862.29,372.801 1866.39,372.33 1870.49,371.244 1874.59,367.476 1878.68,361.548 1882.78,355.06 1886.88,346.619 
  1890.98,337.834 1895.08,328.117 1899.17,319.67 1903.27,311.378 1907.37,303.785 1911.47,297.789 1915.57,292.747 1919.66,289.057 1923.76,286.187 1927.86,284.866 
  1931.96,284.164 1936.06,285.005 1940.15,285.967 1944.25,288.201 1948.35,290.543 1952.45,292.819 1956.54,295.995 1960.64,299.206 1964.74,302.006 1968.84,305.193 
  1972.94,307.16 1977.03,309.489 1981.13,311.931 1985.23,314.04 1989.33,314.757 1993.43,315.585 1997.52,315.932 2001.62,314.689 2005.72,313.578 2009.82,310.959 
  2013.92,306.75 2018.01,301.43 2022.11,295.359 2026.21,288.501 2030.31,280.957 2034.41,273.28 2038.5,264.685 2042.6,256.708 2046.7,250.032 2050.8,244.43 
  2054.89,239.19 2058.99,235.435 2063.09,233.184 2067.19,232.34 2071.29,232.038 2075.38,232.394 2079.48,233.915 2083.58,235.484 2087.68,236.061 2091.78,236.724 
  2095.87,236.066 2099.97,234.632 2104.07,232.115 2108.17,228.349 2112.27,222.797 2116.36,215.969 2120.46,208.822 2124.56,201.472 2128.66,193.791 2132.76,186.934 
  2136.85,180.854 2140.95,176.802 2145.05,174.09 2149.15,173.081 2153.24,173.417 2157.34,174.484 2161.44,175.542 2165.54,177.164 2169.64,176.212 2173.73,174.268 
  2177.83,171.051 2181.93,165.203 2186.03,157.763 2190.13,149.777 2194.22,140.736 2198.32,131.303 2202.42,122.538 2206.52,114.552 2210.62,106.647 2214.71,101.112 
  2218.81,96.0619 2222.91,92.7809 2227.01,89.9039 2231.11,88.839 2235.2,88.4582 2239.3,88.9636 2243.4,90.4319 2247.5,92.0718 2251.6,94.8618 2255.69,96.853 
  2259.79,100.549 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#c271d2; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,1115.87 214.927,1121.5 219.025,1129.22 223.123,1138.25 227.221,1149.32 231.319,1161.44 235.417,1172.98 239.515,1185.3 243.613,1196.44 247.711,1205.83 
  251.809,1212.76 255.907,1216.72 260.005,1218.88 264.102,1216.65 268.2,1210.98 272.298,1203.94 276.396,1193.6 280.494,1181.58 284.592,1167.72 288.69,1154.35 
  292.788,1140.68 296.886,1127.85 300.984,1115.96 305.082,1105.61 309.18,1096.92 313.278,1089.37 317.375,1082.6 321.473,1077.47 325.571,1071.89 329.669,1067.39 
  333.767,1063.04 337.865,1058.45 341.963,1053.81 346.061,1048.87 350.159,1043.61 354.257,1038.27 358.355,1032.12 362.453,1025.86 366.551,1018.71 370.648,1010.95 
  374.746,1002.23 378.844,993.027 382.942,982.359 387.04,970.984 391.138,958.975 395.236,946.725 399.334,933.826 403.432,921.267 407.53,909.26 411.628,899.588 
  415.726,890.973 419.824,885.726 423.921,884.042 428.019,885.445 432.117,890.875 436.215,899.148 440.313,910.005 444.411,923.666 448.509,938.352 452.607,953.333 
  456.705,968.421 460.803,981.997 464.901,992.955 468.999,1002.56 473.097,1009.39 477.194,1013.81 481.292,1016.53 485.39,1016.89 489.488,1016.16 493.586,1014.43 
  497.684,1013.51 501.782,1012.39 505.88,1012.32 509.978,1014.82 514.076,1018.27 518.174,1023.99 522.272,1032.25 526.37,1042.13 530.467,1052.48 534.565,1064.8 
  538.663,1076.67 542.761,1088.56 546.859,1099.4 550.957,1108.48 555.055,1115.16 559.153,1119.46 563.251,1120.21 567.349,1118.06 571.447,1112.84 575.545,1104.64 
  579.643,1094.71 583.74,1081.96 587.838,1068.72 591.936,1054.77 596.034,1041.1 600.132,1028.13 604.23,1016.86 608.328,1006.43 612.426,997.779 616.524,990.507 
  620.622,984.317 624.72,979.192 628.818,973.458 632.916,968.541 637.013,964.762 641.111,960.041 645.209,955.266 649.307,950.56 653.405,945.518 657.503,939.805 
  661.601,933.91 665.699,927.435 669.797,920.155 673.895,912.525 677.993,903.34 682.091,894.14 686.189,883.328 690.286,871.874 694.384,859.604 698.482,847.233 
  702.58,834.402 706.678,821.787 710.776,810.458 714.874,800.537 718.972,792.182 723.07,787.74 727.168,785.941 731.266,787.772 735.364,793.184 739.462,802.417 
  743.559,813.849 747.657,827.195 751.755,841.984 755.853,857.456 759.951,871.785 764.049,885.196 768.147,896.311 772.245,905.398 776.343,912.56 780.441,917.069 
  784.539,918.741 788.637,919.153 792.735,917.89 796.832,916.446 800.93,915.073 805.028,914.219 809.126,915.09 813.224,917.158 817.322,920.969 821.42,926.972 
  825.518,935.138 829.616,945.482 833.714,955.976 837.812,968.38 841.91,980.067 846.008,991.819 850.105,1002.22 854.203,1011.55 858.301,1017.85 862.399,1021.71 
  866.497,1022.13 870.595,1019.87 874.693,1014.23 878.791,1006.01 882.889,995.737 886.987,982.722 891.085,969.512 895.183,955.403 899.281,942.196 903.378,929.043 
  907.476,917.704 911.574,907.586 915.672,898.73 919.77,891.81 923.868,885.69 927.966,879.843 932.064,874.95 936.162,870.82 940.26,866.25 944.358,861.665 
  948.456,856.921 952.554,851.818 956.651,846.568 960.749,840.699 964.847,834.859 968.945,828.418 973.043,821.371 977.141,813.388 981.239,804.562 985.337,794.892 
  989.435,784.557 993.533,772.679 997.631,760.223 1001.73,747.703 1005.83,735.049 1009.92,722.564 1014.02,711.142 1018.12,701.226 1022.22,694.19 1026.32,689.228 
  1030.41,687.736 1034.51,690.575 1038.61,696.131 1042.71,705.3 1046.81,716.988 1050.9,730.951 1055,745.451 1059.1,760.774 1063.2,775.354 1067.3,788.602 
  1071.39,799.88 1075.49,808.256 1079.59,814.616 1083.69,819.071 1087.78,821.021 1091.88,820.857 1095.98,820.277 1100.08,818.042 1104.18,817.167 1108.27,816.651 
  1112.37,817.249 1116.47,819.837 1120.57,823.446 1124.67,830.019 1128.76,838.344 1132.86,847.628 1136.96,859.316 1141.06,871.353 1145.16,883.432 1149.25,895.598 
  1153.35,905.713 1157.45,914.436 1161.55,920.589 1165.65,923.876 1169.74,924.609 1173.84,921.685 1177.94,915.527 1182.04,906.576 1186.14,895.737 1190.23,883.238 
  1194.33,869.815 1198.43,855.443 1202.53,841.967 1206.62,829.868 1210.72,818.545 1214.82,808.396 1218.92,800.252 1223.02,793.658 1227.11,787.062 1231.21,781.673 
  1235.31,777.072 1239.41,771.967 1243.51,767.612 1247.6,763.115 1251.7,757.913 1255.8,753.333 1259.9,748.488 1264,742.404 1268.09,736.577 1272.19,729.676 
  1276.29,722.714 1280.39,714.385 1284.49,705.638 1288.58,695.829 1292.68,685.253 1296.78,673.255 1300.88,661.335 1304.97,648.573 1309.07,635.574 1313.17,623.38 
  1317.27,612.09 1321.37,602.702 1325.46,595.02 1329.56,590.593 1333.66,589.869 1337.76,592.689 1341.86,598.806 1345.95,608.396 1350.05,620.672 1354.15,634.378 
  1358.25,649.678 1362.35,665.204 1366.44,679.024 1370.54,691.692 1374.64,702.749 1378.74,711.211 1382.84,717.591 1386.93,721.397 1391.03,722.769 1395.13,723.231 
  1399.23,721.63 1403.33,720.085 1407.42,719.487 1411.52,718.329 1415.62,719.562 1419.72,722.203 1423.81,726.476 1427.91,732.372 1432.01,741.23 1436.11,751.356 
  1440.21,762.345 1444.3,775.157 1448.4,786.825 1452.5,798.139 1456.6,808.989 1460.7,816.923 1464.79,823.372 1468.89,826.418 1472.99,826.021 1477.09,822.658 
  1481.19,816.418 1485.28,807.928 1489.38,796.332 1493.48,783.575 1497.58,770.17 1501.68,756.405 1505.77,743.067 1509.87,730.19 1513.97,719.348 1518.07,709.346 
  1522.16,701.479 1526.26,693.858 1530.36,688.429 1534.46,682.833 1538.56,677.702 1542.65,673.54 1546.75,669.217 1550.85,664.371 1554.95,659.588 1559.05,654.871 
  1563.14,649.332 1567.24,644.064 1571.34,637.741 1575.44,631.334 1579.54,623.72 1583.63,615.553 1587.73,607.002 1591.83,596.301 1595.93,585.65 1600.03,574.503 
  1604.12,562.129 1608.22,549.253 1612.32,536.748 1616.42,524.169 1620.51,512.796 1624.61,503.457 1628.71,497.122 1632.81,492.47 1636.91,492.248 1641,495.001 
  1645.1,501.857 1649.2,511.525 1653.3,523.923 1657.4,538.123 1661.49,553.151 1665.59,567.912 1669.69,582.451 1673.79,595.235 1677.89,605.989 1681.98,614.499 
  1686.08,619.647 1690.18,623.673 1694.28,625.103 1698.38,624.393 1702.47,623.745 1706.57,622.342 1710.67,620.942 1714.77,620.608 1718.87,621.635 1722.96,624.347 
  1727.06,628.918 1731.16,635.452 1735.26,644.175 1739.35,654.776 1743.45,665.735 1747.55,678.302 1751.65,690.232 1755.75,701.917 1759.84,711.602 1763.94,719.647 
  1768.04,725.72 1772.14,728.253 1776.24,728.116 1780.33,724.429 1784.43,718.165 1788.53,708.726 1792.63,697.644 1796.73,684.641 1800.82,670.847 1804.92,657.013 
  1809.02,643.283 1813.12,631.154 1817.22,620.258 1821.31,610.835 1825.41,602.505 1829.51,595.678 1833.61,589.818 1837.7,584.528 1841.8,579.56 1845.9,575.272 
  1850,570.455 1854.1,566.188 1858.19,561.27 1862.29,556.31 1866.39,550.719 1870.49,545.52 1874.59,538.973 1878.68,532.261 1882.78,525.317 1886.88,516.734 
  1890.98,507.395 1895.08,497.634 1899.17,486.614 1903.27,474.998 1907.37,462.425 1911.47,449.596 1915.57,437.123 1919.66,425.334 1923.76,414.215 1927.86,404.862 
  1931.96,398.285 1936.06,394.138 1940.15,394.187 1944.25,397.749 1948.35,404.908 1952.45,414.702 1956.54,427.285 1960.64,441.749 1964.74,456.982 1968.84,472.285 
  1972.94,485.879 1977.03,498.569 1981.13,508.597 1985.23,516.907 1989.33,522.456 1993.43,525.806 1997.52,527.305 2001.62,527.003 2005.72,525.828 2009.82,523.998 
  2013.92,523.237 2018.01,522.71 2022.11,523.977 2026.21,526.535 2030.31,531.305 2034.41,538.438 2038.5,547.295 2042.6,557.887 2046.7,569.475 2050.8,581.39 
  2054.89,593.701 2058.99,605.259 2063.09,614.747 2067.19,622.695 2071.29,627.995 2075.38,630.436 2079.48,629.911 2083.58,625.982 2087.68,618.735 2091.78,609.336 
  2095.87,598.122 2099.97,585.095 2104.07,571.196 2108.17,557.372 2112.27,544.502 2116.36,532.056 2120.46,521.561 2124.56,512.151 2128.66,503.611 2132.76,496.922 
  2136.85,490.926 2140.95,485.832 2145.05,481.022 2149.15,476.67 2153.24,472.39 2157.34,468.009 2161.44,462.742 2165.54,457.794 2169.64,452.273 2173.73,446.579 
  2177.83,440.665 2181.93,433.732 2186.03,426.226 2190.13,417.868 2194.22,408.393 2198.32,398.134 2202.42,387.54 2206.52,375.414 2210.62,363.505 2214.71,350.451 
  2218.81,337.409 2222.91,325.441 2227.01,314.992 2231.11,306.067 2235.2,299.478 2239.3,296.376 2243.4,296.529 2247.5,300.789 2251.6,307.863 2255.69,318.105 
  2259.79,330.901 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6102)&#34; style=&#34;stroke:#ac8d18; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  210.829,512.207 214.927,510.119 219.025,507.378 223.123,503.723 227.221,499.699 231.319,494.855 235.417,489.652 239.515,484.349 243.613,479.422 247.711,473.865 
  251.809,469.864 255.907,465.039 260.005,461.557 264.102,459.087 268.2,457.333 272.298,456.004 276.396,455.868 280.494,455.174 284.592,453.961 288.69,451.646 
  292.788,448.821 296.886,443.868 300.984,437.631 305.082,429.267 309.18,418.962 313.278,407.736 317.375,394.304 321.473,381 325.571,366.934 329.669,354.274 
  333.767,342.141 337.865,331.75 341.963,324.543 346.061,319.371 350.159,317.497 354.257,318.759 358.355,322.598 362.453,329.771 366.551,338.873 370.648,349.898 
  374.746,362.639 378.844,376.371 382.942,391.225 387.04,406.839 391.138,421.808 395.236,436.967 399.334,452.245 403.432,466.796 407.53,481.766 411.628,495.342 
  415.726,508.615 419.824,521.386 423.921,534.477 428.019,547.042 432.117,558.761 436.215,570.294 440.313,581.309 444.411,590.934 448.509,600.532 452.607,609.494 
  456.705,617.141 460.803,624.999 464.901,630.808 468.999,636.424 473.097,640.799 477.194,643.876 481.292,646.581 485.39,648.779 489.488,650.12 493.586,651.006 
  497.684,650.935 501.782,651.122 505.88,650.495 509.978,649.04 514.076,647.265 518.174,644.971 522.272,642.076 526.37,638.767 530.467,634.918 534.565,629.945 
  538.663,624.951 542.761,619.703 546.859,614.007 550.957,609.021 555.055,603.481 559.153,599.52 563.251,596.847 567.349,594.176 571.447,592.382 575.545,591.524 
  579.643,590.641 583.74,589.763 587.838,588.67 591.936,586.822 596.034,583.543 600.132,578.961 604.23,572.307 608.328,563.638 612.426,554.046 616.524,541.571 
  620.622,528.66 624.72,514.768 628.818,501.095 632.916,488.118 637.013,475.582 641.111,466.369 645.209,458.862 649.307,454.406 653.405,452.953 657.503,454.118 
  661.601,458.578 665.699,465.515 669.797,475.378 673.895,486.707 677.993,499.674 682.091,513.702 686.189,528.871 690.286,543.302 694.384,558.597 698.482,574.315 
  702.58,588.694 706.678,603.601 710.776,618.019 714.874,631.506 718.972,645.325 723.07,658.747 727.168,671.375 731.266,683.784 735.364,695.14 739.462,706.632 
  743.559,717.508 747.657,727.763 751.755,736.774 755.853,745.223 759.951,753.242 764.049,760.311 768.147,766.885 772.245,771.711 776.343,775.96 780.441,779.445 
  784.539,782.02 788.637,783.377 792.735,785.487 796.832,785.939 800.93,786.125 805.028,785.934 809.126,785.525 813.224,784.412 817.322,782.242 821.42,779.763 
  825.518,777.448 829.616,773.468 833.714,769.386 837.812,764.349 841.91,759.214 846.008,754.168 850.105,748.888 854.203,744.013 858.301,738.815 862.399,734.992 
  866.497,731.108 870.595,728.718 874.693,727.39 878.791,726.238 882.889,725.618 886.987,725.468 891.085,724.232 895.183,721.764 899.281,718.163 903.378,713.677 
  907.476,706.382 911.574,698.268 915.672,687.54 919.77,675.698 923.868,662.619 927.966,648.532 932.064,634.65 936.162,621.513 940.26,610.168 944.358,600.368 
  948.456,593.332 952.554,588.899 956.651,588.116 960.749,589.737 964.847,594.538 968.945,602.108 973.043,611.735 977.141,623.082 981.239,635.967 985.337,649.998 
  989.435,665.531 993.533,680.644 997.631,696.132 1001.73,711.211 1005.83,726.286 1009.92,740.239 1014.02,754.752 1018.12,769.022 1022.22,782.461 1026.32,795.163 
  1030.41,807.712 1034.51,820.403 1038.61,832.387 1042.71,843.055 1046.81,854.273 1050.9,864.097 1055,872.902 1059.1,881.917 1063.2,889.647 1067.3,896.579 
  1071.39,902.57 1075.49,907.516 1079.59,911.818 1083.69,914.98 1087.78,917.91 1091.88,919.421 1095.98,920.947 1100.08,921.245 1104.18,921.735 1108.27,921.318 
  1112.37,920.887 1116.47,919.36 1120.57,917.617 1124.67,914.879 1128.76,912.046 1132.86,908.408 1136.96,903.56 1141.06,899.443 1145.16,894.214 1149.25,888.792 
  1153.35,883.184 1157.45,878.22 1161.55,873.459 1165.65,869.321 1169.74,866.358 1173.84,864.108 1177.94,862.486 1182.04,861.852 1186.14,861.572 1190.23,860.294 
  1194.33,858.7 1198.43,856.431 1202.53,853.114 1206.62,847.574 1210.72,841.194 1214.82,831.818 1218.92,821.411 1223.02,808.932 1227.11,796.398 1231.21,781.917 
  1235.31,768.691 1239.41,755.554 1243.51,743.854 1247.6,735.085 1251.7,728.262 1255.8,724.351 1259.9,722.926 1264,725.748 1268.09,730.397 1272.19,737.872 
  1276.29,747.991 1280.39,759.551 1284.49,772.939 1288.58,787.4 1292.68,802.044 1296.78,817.506 1300.88,833.084 1304.97,848.504 1309.07,862.916 1313.17,877.502 
  1317.27,891.44 1321.37,905.867 1325.46,919.054 1329.56,931.896 1333.66,944.387 1337.76,957.082 1341.86,968.487 1345.95,979.342 1350.05,990.198 1354.15,1000.35 
  1358.25,1009.1 1362.35,1018.08 1366.44,1025.11 1370.54,1032.68 1374.64,1038.57 1378.74,1042.99 1382.84,1047.62 1386.93,1050.71 1391.03,1053.38 1395.13,1054.78 
  1399.23,1056.36 1403.33,1056.46 1407.42,1056.69 1411.52,1056.16 1415.62,1055.26 1419.72,1054.32 1423.81,1052.71 1427.91,1050.2 1432.01,1047.05 1436.11,1043.43 
  1440.21,1038.72 1444.3,1034.26 1448.4,1029.08 1452.5,1023.41 1456.6,1017.94 1460.7,1013.02 1464.79,1008.45 1468.89,1004.85 1472.99,1001.63 1477.09,998.956 
  1481.19,997.512 1485.28,996.967 1489.38,996.217 1493.48,995.468 1497.58,994.328 1501.68,991.584 1505.77,987.806 1509.87,982.559 1513.97,974.818 1518.07,966.367 
  1522.16,955.162 1526.26,943.258 1530.36,929.643 1534.46,915.642 1538.56,901.864 1542.65,889.944 1546.75,878.121 1550.85,869.326 1554.95,863.118 1559.05,859.498 
  1563.14,858.902 1567.24,861.159 1571.34,866.548 1575.44,874.681 1579.54,884.596 1583.63,896.812 1587.73,909.659 1591.83,923.997 1595.93,939.124 1600.03,954.173 
  1604.12,969.785 1608.22,985.077 1612.32,1000.23 1616.42,1014.3 1620.51,1028.47 1624.61,1042.11 1628.71,1055.44 1632.81,1068.55 1636.91,1080.97 1641,1093.48 
  1645.1,1105.11 1649.2,1116 1653.3,1126.48 1657.4,1136.56 1661.49,1145.6 1665.59,1154.22 1669.69,1161.34 1673.79,1167.7 1677.89,1173.99 1681.98,1179.34 
  1686.08,1182.86 1690.18,1186.24 1694.28,1188.4 1698.38,1190.22 1702.47,1190.99 1706.57,1191.89 1710.67,1191.67 1714.77,1191.32 1718.87,1190.96 1722.96,1189.6 
  1727.06,1187.56 1731.16,1185.13 1735.26,1181.87 1739.35,1177.68 1743.45,1173.67 1747.55,1168.63 1751.65,1163.44 1755.75,1158.47 1759.84,1152.36 1763.94,1148.01 
  1768.04,1142.99 1772.14,1139.23 1776.24,1136.69 1780.33,1134.48 1784.43,1132.78 1788.53,1132.23 1792.63,1131.42 1796.73,1130.43 1800.82,1129.66 1804.92,1126.85 
  1809.02,1122.42 1813.12,1117.24 1817.22,1109.35 1821.31,1100.41 1825.41,1089.5 1829.51,1076.93 1833.61,1063.81 1837.7,1049.41 1841.8,1035.93 1845.9,1023.13 
  1850,1012.68 1854.1,1003.48 1858.19,997.296 1862.29,994.227 1866.39,993.591 1870.49,996.948 1874.59,1002.22 1878.68,1010.75 1882.78,1020.45 1886.88,1033.05 
  1890.98,1046.56 1895.08,1061.02 1899.17,1076.01 1903.27,1091.15 1907.37,1106.64 1911.47,1121.61 1915.57,1136.45 1919.66,1151.05 1923.76,1165.63 1927.86,1178.92 
  1931.96,1192.08 1936.06,1204.94 1940.15,1218.2 1944.25,1229.55 1948.35,1241.44 1952.45,1252.74 1956.54,1263.09 1960.64,1272.67 1964.74,1282.09 1968.84,1289.71 
  1972.94,1297.67 1977.03,1304.33 1981.13,1310.15 1985.23,1314.48 1989.33,1318.88 1993.43,1321.66 1997.52,1323.82 2001.62,1326.3 2005.72,1326.84 2009.82,1327.12 
  2013.92,1327.14 2018.01,1326.71 2022.11,1325.98 2026.21,1324.63 2030.31,1322.5 2034.41,1319.73 2038.5,1316.45 2042.6,1312.99 2046.7,1308.15 2050.8,1303.48 
  2054.89,1298.61 2058.99,1292.82 2063.09,1287.33 2067.19,1282.07 2071.29,1277.89 2075.38,1274.54 2079.48,1271.46 2083.58,1269.28 2087.68,1268.02 2091.78,1266.8 
  2095.87,1266.25 2099.97,1265.15 2104.07,1264.41 2108.17,1261.45 2112.27,1256.88 2116.36,1251.27 2120.46,1243.92 2124.56,1233.89 2128.66,1223.19 2132.76,1211.15 
  2136.85,1197.18 2140.95,1183.25 2145.05,1170 2149.15,1157.21 2153.24,1146 2157.34,1138.32 2161.44,1132.43 2165.54,1129.16 2169.64,1129.51 2173.73,1132.63 
  2177.83,1138.42 2181.93,1146.86 2186.03,1157.55 2190.13,1169.71 2194.22,1184.02 2198.32,1197.89 2202.42,1213.01 2206.52,1228.34 2210.62,1243.14 2214.71,1258.76 
  2218.81,1273.43 2222.91,1287.86 2227.01,1301.81 2231.11,1315.89 2235.2,1329.15 2239.3,1341.8 2243.4,1353.86 2247.5,1366.52 2251.6,1378.19 2255.69,1388.91 
  2259.79,1399.2 
  &#34;/&gt;
&lt;/svg&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;kernel_prod &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Lin(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Periodic(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt;)
gp_prod &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GPE(kernel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; kernel_prod)
samples &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; rand(gp_prod, xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
plot(xs, samples, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; xmlns:xlink=&#34;http://www.w3.org/1999/xlink&#34; width=&#34;600&#34; height=&#34;400&#34; viewBox=&#34;0 0 2400 1600&#34;&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6900&#34;&gt;
    &lt;rect x=&#34;0&#34; y=&#34;0&#34; width=&#34;2400&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6900)&#34; points=&#34;
0,1600 2400,1600 2400,0 0,0 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6901&#34;&gt;
    &lt;rect x=&#34;480&#34; y=&#34;0&#34; width=&#34;1681&#34; height=&#34;1600&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polygon clip-path=&#34;url(#clip6900)&#34; points=&#34;
189.504,1503.47 2321.26,1503.47 2321.26,47.2441 189.504,47.2441 
  &#34; fill=&#34;#ffffff&#34; fill-rule=&#34;evenodd&#34; fill-opacity=&#34;1&#34;/&gt;
&lt;defs&gt;
  &lt;clipPath id=&#34;clip6902&#34;&gt;
    &lt;rect x=&#34;189&#34; y=&#34;47&#34; width=&#34;2133&#34; height=&#34;1457&#34;/&gt;
  &lt;/clipPath&gt;
&lt;/defs&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  450.946,1503.47 450.946,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  853.164,1503.47 853.164,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1255.38,1503.47 1255.38,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  1657.6,1503.47 1657.6,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  2059.82,1503.47 2059.82,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1349.09 2321.26,1349.09 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,1160.16 2321.26,1160.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,971.233 2321.26,971.233 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,782.304 2321.26,782.304 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,593.376 2321.26,593.376 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,404.447 2321.26,404.447 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#000000; stroke-width:2; stroke-opacity:0.1; fill:none&#34; points=&#34;
  189.504,215.519 2321.26,215.519 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 2321.26,1503.47 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1503.47 189.504,47.2441 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  450.946,1503.47 450.946,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  853.164,1503.47 853.164,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1255.38,1503.47 1255.38,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  1657.6,1503.47 1657.6,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  2059.82,1503.47 2059.82,1481.63 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1349.09 221.48,1349.09 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,1160.16 221.48,1160.16 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,971.233 221.48,971.233 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,782.304 221.48,782.304 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,593.376 221.48,593.376 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,404.447 221.48,404.447 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6900)&#34; style=&#34;stroke:#000000; stroke-width:4; stroke-opacity:1; fill:none&#34; points=&#34;
  189.504,215.519 221.48,215.519 
  &#34;/&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 450.946, 1557.47)&#34; x=&#34;450.946&#34; y=&#34;1557.47&#34;&gt;-20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 853.164, 1557.47)&#34; x=&#34;853.164&#34; y=&#34;1557.47&#34;&gt;-10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1255.38, 1557.47)&#34; x=&#34;1255.38&#34; y=&#34;1557.47&#34;&gt;0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 1657.6, 1557.47)&#34; x=&#34;1657.6&#34; y=&#34;1557.47&#34;&gt;10&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:middle;&#34; transform=&#34;rotate(0, 2059.82, 1557.47)&#34; x=&#34;2059.82&#34; y=&#34;1557.47&#34;&gt;20&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1366.59)&#34; x=&#34;165.504&#34; y=&#34;1366.59&#34;&gt;-7.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 1177.66)&#34; x=&#34;165.504&#34; y=&#34;1177.66&#34;&gt;-5.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 988.733)&#34; x=&#34;165.504&#34; y=&#34;988.733&#34;&gt;-2.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 799.804)&#34; x=&#34;165.504&#34; y=&#34;799.804&#34;&gt;0.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 610.876)&#34; x=&#34;165.504&#34; y=&#34;610.876&#34;&gt;2.5&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 421.947)&#34; x=&#34;165.504&#34; y=&#34;421.947&#34;&gt;5.0&lt;/text&gt;
&lt;/g&gt;
&lt;g clip-path=&#34;url(#clip6900)&#34;&gt;
&lt;text style=&#34;fill:#000000; fill-opacity:1; font-family:Arial,Helvetica Neue,Helvetica,sans-serif; font-size:48px; text-anchor:end;&#34; transform=&#34;rotate(0, 165.504, 233.019)&#34; x=&#34;165.504&#34; y=&#34;233.019&#34;&gt;7.5&lt;/text&gt;
&lt;/g&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#009af9; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,699.897 253.859,728.434 257.881,753.01 261.903,773.155 265.926,788.905 269.948,799.917 273.97,806.616 277.992,809.037 282.014,808.231 286.036,804.965 
  290.059,799.028 294.081,791.64 298.103,782.986 302.125,773.251 306.147,763.256 310.17,753.535 314.192,744.215 318.214,735.889 322.236,729.18 326.258,724.004 
  330.28,721.202 334.303,720.457 338.325,722.868 342.347,728.014 346.369,735.451 350.391,745.12 354.414,756.404 358.436,770.185 362.458,783.918 366.48,798.253 
  370.502,811.791 374.524,824.301 378.547,834.407 382.569,841.917 386.591,845.862 390.613,845.454 394.635,841.525 398.658,832.862 402.68,820.813 406.702,804.901 
  410.724,786.339 414.746,765.276 418.768,742.261 422.791,718.754 426.813,694.61 430.835,670.574 434.857,647.328 438.879,624.54 442.902,603.015 446.924,581.514 
  450.946,560.731 454.968,540.566 458.99,521.023 463.012,502.239 467.035,484.611 471.057,469.158 475.079,456.054 479.101,446.233 483.123,440.784 487.145,439.659 
  491.168,442.605 495.19,449.781 499.212,461.051 503.234,475.487 507.256,492.528 511.279,512.534 515.301,533.705 519.323,556.823 523.345,580.521 527.367,605.546 
  531.389,630.645 535.412,655.686 539.434,680.658 543.456,704.747 547.478,726.751 551.5,746.325 555.523,763.367 559.545,777.273 563.567,787.71 567.589,795.192 
  571.611,799.706 575.633,801.081 579.656,800.064 583.678,797.68 587.7,793.411 591.722,787.931 595.744,781.889 599.767,775.298 603.789,768.575 607.811,762.058 
  611.833,755.57 615.855,750.032 619.877,745.614 623.9,742.274 627.922,740.707 631.944,740.811 635.966,742.49 639.988,745.995 644.011,751.168 648.033,758.115 
  652.055,765.943 656.077,774.853 660.099,784.359 664.121,793.966 668.144,802.883 672.166,810.886 676.188,817.527 680.21,822.023 684.232,824.334 688.255,823.595 
  692.277,820.626 696.299,814.535 700.321,806.42 704.343,795.898 708.365,783.376 712.388,769.719 716.41,755.164 720.432,739.483 724.454,724.353 728.476,709.283 
  732.499,694.49 736.521,680.392 740.543,666.957 744.565,653.964 748.587,641.094 752.609,629.016 756.632,617.219 760.654,606.079 764.676,595.978 768.698,586.5 
  772.72,579.703 776.742,574.675 780.765,572.17 784.787,572.361 788.809,574.901 792.831,580.582 796.853,588.121 800.876,597.888 804.898,609.259 808.92,621.668 
  812.942,635.286 816.964,649.52 820.986,664.473 825.009,679.649 829.031,694.581 833.053,709.718 837.075,724.757 841.097,738.549 845.12,751.328 849.142,762.504 
  853.164,772.327 857.186,780.165 861.208,785.825 865.23,789.753 869.253,791.898 873.275,792.833 877.297,792.133 881.319,790.627 885.341,788.181 889.364,785.12 
  893.386,781.819 897.408,778.185 901.43,774.442 905.452,770.979 909.474,767.719 913.497,764.92 917.519,762.355 921.541,760.954 925.563,760.264 929.585,760.619 
  933.608,761.537 937.63,763.729 941.652,766.834 945.674,770.055 949.696,774.688 953.718,779.034 957.741,783.658 961.763,788.495 965.785,792.944 969.807,796.705 
  973.829,799.872 977.852,801.443 981.874,802.48 985.896,801.972 989.918,800.419 993.94,796.999 997.962,793.167 1001.98,787.826 1006.01,782.206 1010.03,776.029 
  1014.05,769.345 1018.07,763.048 1022.1,756.191 1026.12,749.736 1030.14,743.756 1034.16,738.272 1038.18,733.003 1042.21,728.127 1046.23,723.516 1050.25,719.097 
  1054.27,715.144 1058.3,711.505 1062.32,708.466 1066.34,705.912 1070.36,704.443 1074.38,703.357 1078.41,703.766 1082.43,704.875 1086.45,707.191 1090.47,710.332 
  1094.49,714.507 1098.52,718.9 1102.54,723.889 1106.56,729.334 1110.58,734.534 1114.61,740.096 1118.63,745.658 1122.65,751.327 1126.67,756.336 1130.69,761.449 
  1134.72,766.088 1138.74,770.469 1142.76,774.184 1146.78,777.002 1150.81,779.968 1154.83,781.732 1158.85,783.698 1162.87,784.333 1166.89,784.388 1170.92,784.717 
  1174.94,784.344 1178.96,784.023 1182.98,783.521 1187,782.817 1191.03,782.308 1195.05,781.339 1199.07,781.403 1203.09,780.542 1207.12,780.125 1211.14,780.03 
  1215.16,779.812 1219.18,779.876 1223.2,779.963 1227.23,780.206 1231.25,780.852 1235.27,780.867 1239.29,781.502 1243.32,781.745 1247.34,782.002 1251.36,782.453 
  1255.38,782.333 1259.4,782.208 1263.43,782.173 1267.45,781.694 1271.47,781.209 1275.49,780.934 1279.52,780.51 1283.54,780.57 1287.56,780.033 1291.58,780.237 
  1295.6,780.739 1299.63,781.685 1303.65,782.298 1307.67,783.997 1311.69,785.322 1315.71,787.516 1319.74,789.696 1323.76,792.286 1327.78,795.125 1331.8,797.715 
  1335.83,800.857 1339.85,804.195 1343.87,807.518 1347.89,810.999 1351.91,814.798 1355.94,818.803 1359.96,822.166 1363.98,826.049 1368,829.783 1372.03,833.329 
  1376.05,835.929 1380.07,837.991 1384.09,839.416 1388.11,840 1392.14,839.525 1396.16,838.691 1400.18,837.138 1404.2,835.106 1408.22,832.284 1412.25,828.699 
  1416.27,824.777 1420.29,820.39 1424.31,815.917 1428.34,810.59 1432.36,805.51 1436.38,800.432 1440.4,794.875 1444.42,790.215 1448.45,786.469 1452.47,782.634 
  1456.49,779.913 1460.51,778.077 1464.54,776.871 1468.56,776.514 1472.58,776.699 1476.6,777.895 1480.62,779.079 1484.65,780.615 1488.67,783.333 1492.69,785.49 
  1496.71,788.292 1500.73,790.856 1504.76,793.379 1508.78,795.705 1512.8,797.813 1516.82,799.135 1520.85,799.959 1524.87,800.237 1528.89,799.385 1532.91,798.071 
  1536.93,795.908 1540.96,792.591 1544.98,788.717 1549,784.538 1553.02,779.477 1557.05,774.651 1561.07,769.983 1565.09,765.852 1569.11,762.126 1573.13,759.841 
  1577.16,758.694 1581.18,758.973 1585.2,760.923 1589.22,764.37 1593.25,769.608 1597.27,776.602 1601.29,784.746 1605.31,793.307 1609.33,803.432 1613.36,814.284 
  1617.38,825.391 1621.4,836.695 1625.42,847.834 1629.44,859.107 1633.47,870.375 1637.49,881.968 1641.51,893.109 1645.53,904.784 1649.56,915.964 1653.58,927.475 
  1657.6,938.432 1661.62,948.24 1665.64,956.38 1669.67,963.701 1673.69,968.446 1677.71,970.965 1681.73,970.857 1685.76,968.597 1689.78,964.249 1693.8,957.272 
  1697.82,949.092 1701.84,938.995 1705.87,928.032 1709.89,915.483 1713.91,902.164 1717.93,887.873 1721.95,872.976 1725.98,857.701 1730,842.348 1734.02,828.236 
  1738.04,814.098 1742.07,801.695 1746.09,791.087 1750.11,782.344 1754.13,775.966 1758.15,771.198 1762.18,768.911 1766.2,768.231 1770.22,769.316 1774.24,771.816 
  1778.27,775.496 1782.29,780.046 1786.31,784.781 1790.33,790.137 1794.35,796.432 1798.38,801.878 1802.4,807.211 1806.42,812.139 1810.44,815.785 1814.47,818.638 
  1818.49,820.241 1822.51,820.006 1826.53,817.918 1830.55,814.44 1834.58,808.972 1838.6,802.423 1842.62,794.65 1846.64,785.589 1850.66,775.971 1854.69,766.444 
  1858.71,757.227 1862.73,749.206 1866.75,742.388 1870.78,738.173 1874.8,736.664 1878.82,737.901 1882.84,742.251 1886.86,749.497 1890.89,759.811 1894.91,772.621 
  1898.93,787.965 1902.95,805.36 1906.98,823.511 1911,842.518 1915.02,862.919 1919.04,882.583 1923.06,902.547 1927.09,922.069 1931.11,941.611 1935.13,961.221 
  1939.15,980.081 1943.17,999.819 1947.2,1018.87 1951.22,1037.71 1955.24,1055.29 1959.26,1070.68 1963.29,1084.24 1967.31,1094.6 1971.33,1100.85 1975.35,1103.18 
  1979.37,1101.93 1983.4,1096.21 1987.42,1087.27 1991.44,1074.26 1995.46,1059.24 1999.49,1041.3 2003.51,1021.21 2007.53,1000.1 2011.55,977.198 2015.57,952.902 
  2019.6,928 2023.62,902.916 2027.64,877.987 2031.66,853.453 2035.69,831.541 2039.71,811.861 2043.73,794.838 2047.75,781.156 2051.77,770.984 2055.8,764.269 
  2059.82,760.753 2063.84,760.202 2067.86,762.313 2071.88,766.321 2075.91,772.225 2079.93,779.279 2083.95,787.282 2087.97,795.974 2092,805.011 2096.02,813.475 
  2100.04,821.548 2104.06,828.958 2108.08,834.414 2112.11,838.554 2116.13,839.996 2120.15,839.027 2124.17,836.022 2128.2,830.213 2132.22,821.899 2136.24,811.213 
  2140.26,799.225 2144.28,785.819 2148.31,771.278 2152.33,756.944 2156.35,743.891 2160.37,731.916 2164.39,722.487 2168.42,716.704 2172.44,714.821 2176.46,716.937 
  2180.48,724.187 2184.51,735.108 2188.53,751.11 2192.55,770.305 2196.57,793.286 2200.59,818.343 2204.62,845.401 2208.64,873.219 2212.66,902.11 2216.68,931.004 
  2220.71,959.17 2224.73,987.293 2228.75,1014.95 2232.77,1042.4 2236.79,1069.54 2240.82,1096.59 2244.84,1123.62 2248.86,1149.33 2252.88,1173.47 2256.9,1194.71 
  2260.93,1212.68 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#e26f46; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,649.061 253.859,631.768 257.881,616.943 261.903,605.212 265.926,596.628 269.948,591.867 273.97,590.711 277.992,593.117 282.014,598.728 286.036,608.512 
  290.059,621.373 294.081,638.125 298.103,657.782 302.125,681.196 306.147,707.846 310.17,738.039 314.192,771.137 318.214,807.107 322.236,846.245 326.258,887.686 
  330.28,931.094 334.303,975.062 338.325,1019.72 342.347,1063.09 346.369,1103.85 350.391,1141 354.414,1172.98 358.436,1198.55 362.458,1216.59 366.48,1226.13 
  370.502,1228.35 374.524,1221.99 378.547,1208.23 382.569,1187.92 386.591,1162.12 390.613,1131.09 394.635,1096.77 398.658,1059.25 402.68,1018.86 406.702,976.808 
  410.724,932.835 414.746,886.729 418.768,839.587 422.791,791.387 426.813,743.121 430.835,695.328 434.857,650.365 438.879,608.32 442.902,571.175 446.924,540.003 
  450.946,515.872 454.968,499.825 458.99,491.17 463.012,491.316 467.035,499.229 471.057,514.515 475.079,535.851 479.101,562.622 483.123,592.336 487.145,624.516 
  491.168,656.09 495.19,685.685 499.212,712.626 503.234,735.212 507.256,751.84 511.279,763.041 515.301,768.177 519.323,767.928 523.345,763.06 527.367,754.481 
  531.389,742.7 535.412,728.977 539.434,715.079 543.456,700.611 547.478,687.133 551.5,675.407 555.523,665.352 559.545,657.389 563.567,652.102 567.589,648.891 
  571.611,648.77 575.633,650.871 579.656,655.509 583.678,662.643 587.7,672.049 591.722,684.202 595.744,697.988 599.767,714.698 603.789,733.386 607.811,754.383 
  611.833,777.318 615.855,802.299 619.877,828.853 623.9,857.034 627.922,886.445 631.944,916.117 635.966,945.847 639.988,974.516 644.011,1001.52 648.033,1025.57 
  652.055,1045.8 656.077,1061.95 660.099,1072.97 664.121,1078.57 668.144,1078.03 672.166,1072.95 676.188,1062.63 680.21,1048.26 684.232,1030.13 688.255,1008.71 
  692.277,985.42 696.299,960.259 700.321,933.589 704.343,905.513 708.365,876.73 712.388,846.46 716.41,815.77 720.432,784.797 724.454,753.725 728.476,723.252 
  732.499,695.175 736.521,668.858 740.543,646.173 744.565,627.514 748.587,613.009 752.609,603.637 756.632,599.706 760.654,600.923 764.676,606.802 768.698,617.384 
  772.72,631.49 776.742,648.802 780.765,667.686 784.787,687.745 788.809,707.251 792.831,725.333 796.853,741.78 800.876,755.199 804.898,765.086 808.92,771.395 
  812.942,774.323 816.964,773.736 820.986,770.409 825.009,765.305 829.031,758.322 833.053,749.941 837.075,741.894 841.097,733.939 845.12,726.234 849.142,719.999 
  853.164,714.507 857.186,710.356 861.208,707.865 865.23,706.724 869.253,706.891 873.275,708.495 877.297,711.782 881.319,716.323 885.341,721.728 889.364,728.868 
  893.386,736.683 897.408,746.394 901.43,756.511 905.452,768.254 909.474,781.005 913.497,794.511 917.519,808.837 921.541,823.586 925.563,838.591 929.585,853.981 
  933.608,869.301 937.63,883.264 941.652,896.453 945.674,907.815 949.696,916.71 953.718,923.968 957.741,928.108 961.763,929.657 965.785,928.275 969.807,924.313 
  973.829,917.868 977.852,909.81 981.874,899.863 985.896,888.761 989.918,876.555 993.94,864.16 997.962,850.913 1001.98,837.511 1006.01,823.903 1010.03,809.767 
  1014.05,795.927 1018.07,781.881 1022.1,768.315 1026.12,755.297 1030.14,743.173 1034.16,732.893 1038.18,723.457 1042.21,716.487 1046.23,711.865 1050.25,709.016 
  1054.27,708.499 1058.3,710.101 1062.32,713.573 1066.34,718.973 1070.36,725.256 1074.38,732.325 1078.41,740.326 1082.43,748.455 1086.45,755.916 1090.47,762.645 
  1094.49,768.675 1098.52,773.312 1102.54,776.619 1106.56,778.623 1110.58,779.554 1114.61,779.638 1118.63,778.293 1122.65,776.967 1126.67,775.015 1130.69,772.534 
  1134.72,770.4 1138.74,768.461 1142.76,766.811 1146.78,765.427 1150.81,764.474 1154.83,764.016 1158.85,763.992 1162.87,764.212 1166.89,765.083 1170.92,766.103 
  1174.94,767.147 1178.96,768.719 1182.98,770.58 1187,772.499 1191.03,774.268 1195.05,776.452 1199.07,778.446 1203.09,780.427 1207.12,782.263 1211.14,784.233 
  1215.16,785.489 1219.18,787.046 1223.2,788.47 1227.23,788.627 1231.25,789.123 1235.27,788.909 1239.29,788.179 1243.32,787.359 1247.34,786.032 1251.36,784.1 
  1255.38,782.28 1259.4,780.307 1263.43,778.071 1267.45,776.326 1271.47,774.415 1275.49,773.077 1279.52,772.295 1283.54,771.241 1287.56,771.031 1291.58,771.312 
  1295.6,771.901 1299.63,772.902 1303.65,774.491 1307.67,776.806 1311.69,779.355 1315.71,782.789 1319.74,786.694 1323.76,790.621 1327.78,795.349 1331.8,799.744 
  1335.83,804.266 1339.85,808.607 1343.87,812.387 1347.89,815.316 1351.91,817.869 1355.94,819.198 1359.96,819.443 1363.98,818.572 1368,816.675 1372.03,814.131 
  1376.05,810.525 1380.07,806.382 1384.09,802.1 1388.11,797.373 1392.14,793.716 1396.16,789.905 1400.18,787.775 1404.2,785.619 1408.22,784.811 1412.25,785.326 
  1416.27,787.343 1420.29,789.44 1424.31,792.677 1428.34,796.116 1432.36,800.056 1436.38,804.054 1440.4,808.189 1444.42,812.137 1448.45,815.56 1452.47,818.022 
  1456.49,820.773 1460.51,822.278 1464.54,822.918 1468.56,823.24 1472.58,822.41 1476.6,821.086 1480.62,818.152 1484.65,814.818 1488.67,810.369 1492.69,804.471 
  1496.71,797.816 1500.73,790.015 1504.76,781.107 1508.78,771.286 1512.8,759.808 1516.82,747.305 1520.85,733.863 1524.87,719.85 1528.89,705.722 1532.91,691.411 
  1536.93,677.117 1540.96,663.88 1544.98,652.668 1549,642.839 1553.02,635.336 1557.05,630.477 1561.07,628.292 1565.09,629.137 1569.11,632.266 1573.13,638.111 
  1577.16,646.311 1581.18,656.052 1585.2,667.733 1589.22,680.955 1593.25,695.364 1597.27,711.661 1601.29,728.878 1605.31,747.161 1609.33,767.149 1613.36,787.769 
  1617.38,808.754 1621.4,830.084 1625.42,850.545 1629.44,870.055 1633.47,887.52 1637.49,902.523 1641.51,914.403 1645.53,922.472 1649.56,926.989 1653.58,927.571 
  1657.6,923.805 1661.62,916.822 1665.64,906.334 1669.67,892.752 1673.69,877.824 1677.71,861.646 1681.73,845.666 1685.76,829.846 1689.78,816.427 1693.8,804.923 
  1697.82,796.987 1701.84,792.037 1705.87,790.51 1709.89,792.098 1713.91,796.55 1717.93,803.082 1721.95,811.797 1725.98,821.62 1730,831.276 1734.02,841.421 
  1738.04,850.769 1742.07,859.777 1746.09,867.202 1750.11,873.059 1754.13,877.522 1758.15,880.293 1762.18,880.91 1766.2,879.88 1770.22,877.148 1774.24,872.281 
  1778.27,865.046 1782.29,855.656 1786.31,844.862 1790.33,831.2 1794.35,815.522 1798.38,797.692 1802.4,777.745 1806.42,755.23 1810.44,730.578 1814.47,704.584 
  1818.49,676.831 1822.51,648.372 1826.53,619.266 1830.55,590.451 1834.58,563.385 1838.6,538.787 1842.62,517.17 1846.64,500.39 1850.66,487.657 1854.69,480.788 
  1858.71,478.949 1862.73,482.668 1866.75,491.548 1870.78,505.218 1874.8,522.769 1878.82,543.347 1882.84,567.323 1886.86,593.821 1890.89,622.61 1894.91,653.31 
  1898.93,686.381 1902.95,721.636 1906.98,758.159 1911,796.182 1915.02,834.607 1919.04,872.59 1923.06,909.221 1927.09,943.198 1931.11,973.105 1935.13,998.166 
  1939.15,1017.79 1943.17,1030.61 1947.2,1036.35 1951.22,1035.54 1955.24,1027.46 1959.26,1013.52 1963.29,993.707 1967.31,969.552 1971.33,942.733 1975.35,914.494 
  1979.37,886.699 1983.4,860.534 1987.42,837.325 1991.44,818.903 1995.46,805.812 1999.49,797.684 2003.51,795.885 2007.53,799.178 2011.55,806.664 2015.57,818.048 
  2019.6,831.742 2023.62,847.798 2027.64,863.881 2031.66,879.841 2035.69,894.778 2039.71,908.488 2043.73,919.619 2047.75,928.354 2051.77,934.942 2055.8,938.157 
  2059.82,938.957 2063.84,936.42 2067.86,930.855 2071.88,922.001 2075.91,910.56 2079.93,895.651 2083.95,877.476 2087.97,855.71 2092,831.063 2096.02,802.815 
  2100.04,771.406 2104.06,736.605 2108.08,699.151 2112.11,658.55 2116.13,616.689 2120.15,573.142 2124.17,529.91 2128.2,486.715 2132.22,447.169 2136.24,410.985 
  2140.26,379.968 2144.28,355.755 2148.31,339.097 2152.33,330.331 2156.35,330.007 2160.37,337.282 2164.39,352.325 2168.42,373.899 2172.44,401.315 2176.46,433.472 
  2180.48,469.709 2184.51,509.419 2188.53,552.429 2192.55,598.711 2196.57,647.603 2200.59,699.207 2204.62,753.11 2208.64,808.319 2212.66,864.224 2216.68,919.128 
  2220.71,971.21 2224.73,1019.61 2228.75,1061.63 2232.77,1096.34 2236.79,1122.63 2240.82,1139.21 2244.84,1146.13 2248.86,1142.69 2252.88,1129.82 2256.9,1107.9 
  2260.93,1078.99 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#3da44d; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,711.463 253.859,736.723 257.881,762.486 261.903,788.35 265.926,813.736 269.948,837.473 273.97,860.067 277.992,880.874 282.014,900.039 286.036,916.746 
  290.059,931.482 294.081,944.252 298.103,954.345 302.125,961.944 306.147,967.664 310.17,971.338 314.192,972.661 318.214,972.159 322.236,969.276 326.258,965.244 
  330.28,958.94 334.303,951.143 338.325,941.592 342.347,931.174 346.369,919.372 350.391,907.88 354.414,896.84 358.436,887.774 362.458,881.402 366.48,878.286 
  370.502,878.359 374.524,882.139 378.547,888.35 382.569,897.266 386.591,907.085 390.613,917.519 394.635,927.772 398.658,937.096 402.68,945.249 406.702,951.818 
  410.724,957.609 414.746,961.9 418.768,964.673 422.791,966.717 426.813,967.859 430.835,967.291 434.857,964.1 438.879,958.157 442.902,949.868 446.924,937.491 
  450.946,921.286 454.968,901.437 458.99,878.338 463.012,852.77 467.035,825.569 471.057,797.865 475.079,771.403 479.101,745.842 483.123,723.135 487.145,703.923 
  491.168,687.508 495.19,674.761 499.212,665.008 503.234,658.074 507.256,653.945 511.279,651.868 515.301,652.06 519.323,654.929 523.345,659.593 527.367,666.802 
  531.389,676.202 535.412,687.628 539.434,701.687 543.456,717.388 547.478,734.509 551.5,752.362 555.523,770.191 559.545,788.559 563.567,806.055 567.589,822.737 
  571.611,838.131 575.633,852.335 579.656,865.181 583.678,876.69 587.7,886.504 591.722,894.93 595.744,901.515 599.767,906.872 603.789,910.044 607.811,911.975 
  611.833,912.458 615.855,911.679 619.877,909.601 623.9,906.37 627.922,901.986 631.944,896.033 635.966,888.983 639.988,881.609 644.011,873.622 648.033,865.807 
  652.055,858.368 656.077,852.317 660.099,848.086 664.121,846.066 668.144,846.225 672.166,848.659 676.188,853.218 680.21,858.96 684.232,865.179 688.255,871.83 
  692.277,878.285 696.299,883.985 700.321,889.005 704.343,893.041 708.365,895.945 712.388,898.54 716.41,900.041 720.432,901.1 724.454,901.017 728.476,900.111 
  732.499,897.422 736.521,893.814 740.543,887.974 744.565,879.302 748.587,868.695 752.609,855.575 756.632,840.762 760.654,824.359 764.676,807.165 768.698,789.885 
  772.72,773.536 776.742,758.117 780.765,744.618 784.787,733.056 788.809,723.556 792.831,715.886 796.853,710.499 800.876,706.718 804.898,704.666 808.92,703.724 
  812.942,704.708 816.964,706.743 820.986,709.997 825.009,714.442 829.031,720.372 833.053,727.574 837.075,736.023 841.097,745.435 845.12,755.579 849.142,766.168 
  853.164,776.533 857.186,786.863 861.208,797.045 865.23,806.336 869.253,814.812 873.275,822.721 877.297,829.42 881.319,835.285 885.341,840.583 889.364,845.07 
  893.386,848.258 897.408,850.752 901.43,851.922 905.452,852.8 909.474,852.283 913.497,851.379 917.519,849.743 921.541,847.592 925.563,844.802 929.585,841.495 
  933.608,837.477 937.63,833.299 941.652,828.538 945.674,824.398 949.696,820.632 953.718,817.427 957.741,815.117 961.763,813.93 965.785,814.154 969.807,815.025 
  973.829,816.896 977.852,819.508 981.874,822.351 985.896,825.165 989.918,827.997 993.94,830.003 997.962,832.293 1001.98,833.259 1006.01,834.185 1010.03,834.88 
  1014.05,835.535 1018.07,834.924 1022.1,834.628 1026.12,833.71 1030.14,831.753 1034.16,829.705 1038.18,826.575 1042.21,822.292 1046.23,817.372 1050.25,811.591 
  1054.27,805.221 1058.3,798.603 1062.32,791.391 1066.34,784.883 1070.36,778.226 1074.38,772.794 1078.41,767.482 1082.43,763.683 1086.45,760.7 1090.47,758.433 
  1094.49,756.749 1098.52,756.034 1102.54,755.937 1106.56,756.419 1110.58,757.034 1114.61,757.892 1118.63,759.444 1122.65,761.371 1126.67,763.892 1130.69,766.385 
  1134.72,769.481 1138.74,772.383 1142.76,775.509 1146.78,778.34 1150.81,780.867 1154.83,783.845 1158.85,786.127 1162.87,788.208 1166.89,790.073 1170.92,791.3 
  1174.94,792.47 1178.96,793.638 1182.98,793.887 1187,793.936 1191.03,793.719 1195.05,794.222 1199.07,793.463 1203.09,792.772 1207.12,792.062 1211.14,791.201 
  1215.16,790.392 1219.18,789.312 1223.2,788.312 1227.23,787.417 1231.25,786.531 1235.27,785.414 1239.29,784.524 1243.32,783.848 1247.34,783.284 1251.36,782.538 
  1255.38,782.552 1259.4,781.798 1263.43,781.591 1267.45,780.781 1271.47,780.463 1275.49,779.747 1279.52,778.649 1283.54,777.753 1287.56,776.645 1291.58,775.562 
  1295.6,774.282 1299.63,773.381 1303.65,772.425 1307.67,771.215 1311.69,770.326 1315.71,769.016 1319.74,767.892 1323.76,767.037 1327.78,766.575 1331.8,766.023 
  1335.83,765.916 1339.85,766.597 1343.87,767.518 1347.89,769.421 1351.91,771.69 1355.94,774.507 1359.96,777.709 1363.98,781.548 1368,785.235 1372.03,789.213 
  1376.05,792.555 1380.07,796.168 1384.09,799.139 1388.11,801.774 1392.14,804.124 1396.16,805.71 1400.18,807.443 1404.2,808.694 1408.22,809.116 1412.25,809.484 
  1416.27,808.782 1420.29,807.989 1424.31,806.104 1428.34,803.917 1432.36,801.113 1436.38,797.416 1440.4,793.343 1444.42,788.806 1448.45,784.03 1452.47,778.944 
  1456.49,773.74 1460.51,768.552 1464.54,763.571 1468.56,758.771 1472.58,754.227 1476.6,750.02 1480.62,746.099 1484.65,742.514 1488.67,738.927 1492.69,736.771 
  1496.71,734.711 1500.73,733.095 1504.76,731.537 1508.78,731.059 1512.8,730.77 1516.82,731.439 1520.85,732.42 1524.87,733.823 1528.89,736.049 1532.91,738.575 
  1536.93,741.258 1540.96,744.218 1544.98,747.04 1549,748.408 1553.02,749.594 1557.05,749.85 1561.07,748.414 1565.09,746.335 1569.11,743.03 1573.13,738.809 
  1577.16,734.16 1581.18,729.565 1585.2,724.856 1589.22,720.515 1593.25,716.412 1597.27,712.83 1601.29,709.447 1605.31,706.662 1609.33,704.446 1613.36,702.331 
  1617.38,701.253 1621.4,700.56 1625.42,700.951 1629.44,702.847 1633.47,706.6 1637.49,711.943 1641.51,719.21 1645.53,729.028 1649.56,740.037 1653.58,752.797 
  1657.6,766.332 1661.62,780.513 1665.64,794.028 1669.67,807.34 1673.69,819.691 1677.71,829.774 1681.73,838.803 1685.76,846.202 1689.78,851.656 1693.8,856.241 
  1697.82,859.209 1701.84,860.798 1705.87,861.251 1709.89,860.031 1713.91,857.662 1717.93,853.452 1721.95,847.937 1725.98,840.574 1730,831.495 1734.02,821.264 
  1738.04,809.908 1742.07,797.566 1746.09,785.159 1750.11,772.046 1754.13,759.551 1758.15,747.37 1762.18,736.202 1766.2,724.929 1770.22,714.786 1774.24,705.701 
  1778.27,697.444 1782.29,690.171 1786.31,684.155 1790.33,679.154 1794.35,675.299 1798.38,672.853 1802.4,671.431 1806.42,671.12 1810.44,672.154 1814.47,673.996 
  1818.49,677.056 1822.51,680.984 1826.53,686.504 1830.55,692.604 1834.58,698.961 1838.6,705.17 1842.62,710.938 1846.64,715.086 1850.66,717.318 1854.69,717.876 
  1858.71,715.439 1862.73,711.543 1866.75,704.906 1870.78,697.438 1874.8,689.061 1878.82,680.23 1882.84,672.198 1886.86,664.58 1890.89,657.891 1894.91,651.626 
  1898.93,646.792 1902.95,642.532 1906.98,638.641 1911,636.047 1915.02,634.332 1919.04,634.425 1923.06,636.409 1927.09,640.679 1931.11,647.685 1935.13,658.636 
  1939.15,672.602 1943.17,690.196 1947.2,710.675 1951.22,733.123 1955.24,757.232 1959.26,781.704 1963.29,805.273 1967.31,827.899 1971.33,847.733 1975.35,865.293 
  1979.37,879.357 1983.4,891.138 1987.42,899.931 1991.44,906.667 1995.46,910.901 1999.49,913.183 2003.51,913.189 2007.53,910.689 2011.55,905.828 2015.57,898.441 
  2019.6,888.331 2023.62,875.589 2027.64,860.362 2031.66,843.44 2035.69,824.513 2039.71,804.794 2043.73,784.44 2047.75,764.024 2051.77,744.428 2055.8,725.122 
  2059.82,707.126 2063.84,690.063 2067.86,674.385 2071.88,660.211 2075.91,647.838 2079.93,636.956 2083.95,628.382 2087.97,621.017 2092,616.113 2096.02,612.415 
  2100.04,611.063 2104.06,611.496 2108.08,612.923 2112.11,616.518 2116.13,621.932 2120.15,629.06 2124.17,637.438 2128.2,647.035 2132.22,656.882 2136.24,666.758 
  2140.26,675.465 2144.28,681.758 2148.31,685.206 2152.33,685.835 2156.35,682.113 2160.37,675.609 2164.39,666.269 2168.42,655.199 2172.44,642.902 2176.46,630.481 
  2180.48,618.578 2184.51,608.053 2188.53,598.268 2192.55,590.277 2196.57,583.243 2200.59,577.497 2204.62,572.608 2208.64,569.443 2212.66,567.878 2216.68,568.219 
  2220.71,571.649 2224.73,578.766 2228.75,590.146 2232.77,606.494 2236.79,627.382 2240.82,653.608 2244.84,683.177 2248.86,716.086 2252.88,750.508 2256.9,785.281 
  2260.93,818.807 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#c271d2; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,817.228 253.859,813.698 257.881,808.333 261.903,798.935 265.926,786.842 269.948,771.045 273.97,752.152 277.992,730.057 282.014,704.968 286.036,677.245 
  290.059,646.367 294.081,612.787 298.103,575.769 302.125,536.394 306.147,493.834 310.17,448.547 314.192,401.364 318.214,353.43 322.236,305.215 326.258,258.446 
  330.28,215.083 334.303,176.017 338.325,143.385 342.347,117.465 346.369,99.5399 350.391,90.0544 354.414,88.4582 358.436,95.1336 362.458,108.298 366.48,128.215 
  370.502,153.191 374.524,182.136 378.547,214.183 382.569,248.124 386.591,283.224 390.613,318.65 394.635,354.355 398.658,389.353 402.68,423.785 406.702,457.642 
  410.724,491.903 414.746,525.537 418.768,559.116 422.791,592.036 426.813,624.388 430.835,655.234 434.857,685.356 438.879,713.522 442.902,739.481 446.924,763.556 
  450.946,785.438 454.968,804.623 458.99,822.2 463.012,838.25 467.035,851.525 471.057,862.99 475.079,872.232 479.101,879.304 483.123,883.761 487.145,884.765 
  491.168,883.344 495.19,878.824 499.212,871.592 503.234,862.322 507.256,851.953 511.279,841.237 515.301,831.069 519.323,822.055 523.345,815.578 527.367,811.11 
  531.389,808.717 535.412,807.89 539.434,807.877 543.456,807.542 547.478,806.485 551.5,804.183 555.523,799.893 559.545,793.226 563.567,784.449 567.589,773.428 
  571.611,759.859 575.633,744.146 579.656,726.664 583.678,707.04 587.7,685.756 591.722,662.2 595.744,636.806 599.767,609.709 603.789,580.507 607.811,550.104 
  611.833,518.167 615.855,485.794 619.877,453.557 623.9,422.716 627.922,394.074 631.944,368.878 635.966,348.52 639.988,332.178 644.011,321.799 648.033,317.439 
  652.055,317.738 656.077,323.419 660.099,333.845 664.121,348.625 668.144,366.392 672.166,387.004 676.188,409.367 680.21,432.686 684.232,456.519 688.255,480.506 
  692.277,504.64 696.299,527.673 700.321,551.141 704.343,574.14 708.365,596.826 712.388,618.82 716.41,640.755 720.432,662.298 724.454,683.398 728.476,703.505 
  732.499,722.532 736.521,740.115 740.543,756.82 744.565,771.753 748.587,785.74 752.609,797.961 756.632,808.578 760.654,817.912 764.676,825.943 768.698,833.248 
  772.72,838.504 776.742,842.511 780.765,844.723 784.787,845.021 788.809,843.701 792.831,840.531 796.853,836.108 800.876,829.905 804.898,823.602 808.92,816.576 
  812.942,810.73 816.964,805.295 820.986,801.804 825.009,799.366 829.031,797.921 833.053,797.348 837.075,797.382 841.097,796.873 845.12,796.67 849.142,794.521 
  853.164,791.853 857.186,788.228 861.208,782.852 865.23,776.529 869.253,768.701 873.275,759.803 877.297,749.853 881.319,739.173 885.341,727.346 889.364,714.602 
  893.386,700.959 897.408,686.67 901.43,671.18 905.452,654.908 909.474,638.086 913.497,621.887 917.519,605.828 921.541,590.373 925.563,576.85 929.585,565.036 
  933.608,555.696 937.63,549.104 941.652,545.611 945.674,544.76 949.696,546.752 953.718,551.77 957.741,558.734 961.763,567.578 965.785,578.213 969.807,589.648 
  973.829,602.222 977.852,614.631 981.874,627.426 985.896,640.243 989.918,652.298 993.94,664.562 997.962,676.316 1001.98,687.698 1006.01,698.624 1010.03,709.481 
  1014.05,720.068 1018.07,729.938 1022.1,739.723 1026.12,748.873 1030.14,757.234 1034.16,765.301 1038.18,772.213 1042.21,778.527 1046.23,784.336 1050.25,789.248 
  1054.27,793.434 1058.3,797.068 1062.32,799.689 1066.34,802.348 1070.36,804.108 1074.38,805.207 1078.41,805.71 1082.43,805.334 1086.45,804.632 1090.47,802.905 
  1094.49,800.98 1098.52,798.415 1102.54,796.093 1106.56,793.43 1110.58,791.398 1114.61,789.552 1118.63,788.414 1122.65,787.291 1126.67,787.007 1130.69,786.767 
  1134.72,786.758 1138.74,786.408 1142.76,786.326 1146.78,785.523 1150.81,784.57 1154.83,783.435 1158.85,782.32 1162.87,780.684 1166.89,778.808 1170.92,777.156 
  1174.94,775.284 1178.96,773.413 1182.98,771.245 1187,769.366 1191.03,767.456 1195.05,766.008 1199.07,764.324 1203.09,763.035 1207.12,762.079 1211.14,761.171 
  1215.16,760.906 1219.18,761.335 1223.2,761.819 1227.23,763.587 1231.25,765.045 1235.27,767.344 1239.29,769.984 1243.32,772.973 1247.34,776.302 1251.36,779.224 
  1255.38,782.256 1259.4,785.101 1263.43,787.799 1267.45,790.27 1271.47,792.636 1275.49,794.052 1279.52,795.956 1283.54,796.991 1287.56,797.859 1291.58,798.336 
  1295.6,798.592 1299.63,798.7 1303.65,798.291 1307.67,797.467 1311.69,796.633 1315.71,795.39 1319.74,793.825 1323.76,792.174 1327.78,789.968 1331.8,788.096 
  1335.83,785.508 1339.85,783.419 1343.87,781.001 1347.89,779.022 1351.91,776.914 1355.94,775.162 1359.96,772.519 1363.98,770.67 1368,769.055 1372.03,767.342 
  1376.05,766.369 1380.07,765.63 1384.09,765.609 1388.11,765.836 1392.14,766.488 1396.16,767.906 1400.18,769.736 1404.2,771.338 1408.22,772.866 1412.25,774.199 
  1416.27,775.624 1420.29,775.719 1424.31,776.307 1428.34,776.25 1432.36,776.06 1436.38,775.799 1440.4,776.168 1444.42,776.843 1448.45,777.769 1452.47,779.949 
  1456.49,782.961 1460.51,786.331 1464.54,790.708 1468.56,795.902 1472.58,802.08 1476.6,809.169 1480.62,817.421 1484.65,826.547 1488.67,836.278 1492.69,848.228 
  1496.71,860.652 1500.73,874.529 1504.76,889.203 1508.78,904.014 1512.8,919.864 1516.82,935.747 1520.85,950.381 1524.87,964.46 1528.89,976.875 1532.91,987.597 
  1536.93,995.372 1540.96,1001.93 1544.98,1004.99 1549,1005.9 1553.02,1005.11 1557.05,1001.54 1561.07,995.7 1565.09,988.66 1569.11,980.8 1573.13,971.42 
  1577.16,961.928 1581.18,951.696 1585.2,940.733 1589.22,929.899 1593.25,918.774 1597.27,907.512 1601.29,895.537 1605.31,883.284 1609.33,870.868 1613.36,858.228 
  1617.38,845.536 1621.4,832.902 1625.42,820.382 1629.44,808.447 1633.47,797.423 1637.49,786.228 1641.51,776.714 1645.53,767.397 1649.56,758.901 1653.58,750.906 
  1657.6,744.211 1661.62,738.12 1665.64,733.056 1669.67,729.172 1673.69,726.81 1677.71,725.896 1681.73,726.419 1685.76,729.039 1689.78,733.086 1693.8,738.056 
  1697.82,743.975 1701.84,749.739 1705.87,755.09 1709.89,759.594 1713.91,762.969 1717.93,765.017 1721.95,765.576 1725.98,765.688 1730,765.138 1734.02,765.416 
  1738.04,766.497 1742.07,768.464 1746.09,771.887 1750.11,777.252 1754.13,784.386 1758.15,793.063 1762.18,803.702 1766.2,816.542 1770.22,831.082 1774.24,847.58 
  1778.27,865.996 1782.29,886.358 1786.31,908.644 1790.33,933.547 1794.35,960.607 1798.38,989.125 1802.4,1019.56 1806.42,1050.91 1810.44,1082.21 1814.47,1112.84 
  1818.49,1141.8 1822.51,1167.85 1826.53,1190.8 1830.55,1208.93 1834.58,1222.54 1838.6,1230.86 1842.62,1233.95 1846.64,1232.17 1850.66,1226.11 1854.69,1215.41 
  1858.71,1201.85 1862.73,1185.13 1866.75,1166.63 1870.78,1146.39 1874.8,1125.16 1878.82,1103.19 1882.84,1081.12 1886.86,1058.71 1890.89,1036.45 1894.91,1013.23 
  1898.93,990.108 1902.95,966.505 1906.98,942.625 1911,918.559 1915.02,894.795 1919.04,871.205 1923.06,848.656 1927.09,827.382 1931.11,807.193 1935.13,787.919 
  1939.15,770.352 1943.17,754.399 1947.2,739.627 1951.22,726.643 1955.24,714.814 1959.26,704.914 1963.29,696.853 1967.31,690.527 1971.33,686.851 1975.35,686.449 
  1979.37,688.187 1983.4,692.756 1987.42,700.089 1991.44,708.976 1995.46,719.31 1999.49,729.261 2003.51,738.047 2007.53,745.414 2011.55,750.484 2015.57,753.717 
  2019.6,755.011 2023.62,755.311 2027.64,754.963 2031.66,755.073 2035.69,756.638 2039.71,760.229 2043.73,765.977 2047.75,774.726 2051.77,786.416 2055.8,801.2 
  2059.82,818.626 2063.84,838.621 2067.86,861.998 2071.88,887.936 2075.91,916.509 2079.93,948.561 2083.95,983.589 2087.97,1022.01 2092,1063.25 2096.02,1107.17 
  2100.04,1153.48 2104.06,1200.85 2108.08,1248.05 2112.11,1293.59 2116.13,1336.17 2120.15,1374.17 2124.17,1406.38 2128.2,1431.56 2132.22,1449.49 2136.24,1460 
  2140.26,1462.26 2144.28,1457.56 2148.31,1445.96 2152.33,1428.28 2156.35,1405.92 2160.37,1379.33 2164.39,1349.91 2168.42,1319.13 2172.44,1286 2176.46,1252.84 
  2180.48,1219.12 2184.51,1185.39 2188.53,1151.34 2192.55,1117.08 2196.57,1081.91 2200.59,1047.18 2204.62,1011.74 2208.64,976.49 2212.66,941.604 2216.68,907.703 
  2220.71,874.662 2224.73,843.742 2228.75,814.735 2232.77,787.404 2236.79,762.754 2240.82,739.879 2244.84,719.375 2248.86,700.898 2252.88,684.569 2256.9,670.648 
  2260.93,659.773 
  &#34;/&gt;
&lt;polyline clip-path=&#34;url(#clip6902)&#34; style=&#34;stroke:#ac8d18; stroke-width:8; stroke-opacity:1; fill:none&#34; points=&#34;
  249.837,376.474 253.859,387.291 257.881,397.869 261.903,406.96 265.926,414.738 269.948,421.01 273.97,425.475 277.992,427.903 282.014,428.055 286.036,425.622 
  290.059,421.384 294.081,415.068 298.103,406.774 302.125,397.408 306.147,387.863 310.17,377.944 314.192,369.193 318.214,361.591 322.236,355.692 326.258,352.136 
  330.28,350.679 334.303,352.027 338.325,355.983 342.347,363.289 346.369,373.214 350.391,386.382 354.414,402.663 358.436,421.579 362.458,443.09 366.48,467.277 
  370.502,491.925 374.524,518.134 378.547,543.91 382.569,568.83 386.591,591.949 390.613,612.585 394.635,630.863 398.658,645.795 402.68,657.708 406.702,666.882 
  410.724,672.651 414.746,675.781 418.768,675.842 422.791,672.875 426.813,667.053 430.835,658.481 434.857,646.315 438.879,631.371 442.902,614.2 446.924,594.482 
  450.946,573.274 454.968,551.011 458.99,528.671 463.012,507.024 467.035,487.301 471.057,469.088 475.079,453.323 479.101,440.409 483.123,429.795 487.145,421.961 
  491.168,416.369 495.19,413.085 499.212,411.449 503.234,411.748 507.256,414.282 511.279,418.364 515.301,424.112 519.323,431.409 523.345,439.935 527.367,449.277 
  531.389,458.773 535.412,468.631 539.434,478.632 543.456,488.091 547.478,497.007 551.5,505.689 555.523,513.177 559.545,519.792 563.567,525.886 567.589,530.548 
  571.611,534.106 575.633,535.849 579.656,535.816 583.678,534.773 587.7,532.089 591.722,528.067 595.744,522.857 599.767,516.713 603.789,510.52 607.811,504.8 
  611.833,499.026 615.855,494.791 619.877,491.444 623.9,489.68 627.922,489.198 631.944,491.298 635.966,494.736 639.988,500.444 644.011,507.87 648.033,517.28 
  652.055,529.041 656.077,542.482 660.099,557.693 664.121,574.161 668.144,591.482 672.166,608.892 676.188,626.472 680.21,643.015 684.232,658.505 688.255,672.149 
  692.277,684.146 696.299,693.942 700.321,701.966 704.343,707.988 708.365,711.534 712.388,713.493 716.41,713.705 720.432,711.845 724.454,707.841 728.476,702.167 
  732.499,694.751 736.521,685.188 740.543,674.228 744.565,662.317 748.587,648.907 752.609,635.366 756.632,621.86 760.654,609.222 764.676,597.059 768.698,586.731 
  772.72,577.937 776.742,570.361 780.765,564.916 784.787,561.196 788.809,558.461 792.831,557.174 796.853,557.376 800.876,558.576 804.898,560.973 808.92,564.309 
  812.942,568.76 816.964,573.73 820.986,579.521 825.009,585.897 829.031,592.5 833.053,599.21 837.075,605.095 841.097,611.715 845.12,617.444 849.142,623.326 
  853.164,627.925 857.186,632.713 861.208,636.466 865.23,639.543 869.253,641.948 873.275,643.78 877.297,644.616 881.319,644.377 885.341,643.338 889.364,641.681 
  893.386,639.363 897.408,637.03 901.43,634.427 905.452,632.126 909.474,629.833 913.497,628.002 917.519,627.432 921.541,627.274 925.563,628.511 929.585,630.325 
  933.608,633.244 937.63,636.806 941.652,641.978 945.674,647.686 949.696,654.974 953.718,662.374 957.741,670.916 961.763,679.739 965.785,689.22 969.807,698.142 
  973.829,707.573 977.852,715.851 981.874,723.889 985.896,730.538 989.918,736.8 993.94,741.381 997.962,745.442 1001.98,748.066 1006.01,750.283 1010.03,751.217 
  1014.05,751.369 1018.07,751.03 1022.1,749.295 1026.12,747.095 1030.14,744.105 1034.16,740.396 1038.18,735.881 1042.21,731.535 1046.23,726.398 1050.25,721.762 
  1054.27,716.897 1058.3,712.558 1062.32,708.793 1066.34,705.922 1070.36,703.571 1074.38,702.057 1078.41,700.734 1082.43,700.817 1086.45,700.781 1090.47,701.97 
  1094.49,703.339 1098.52,704.834 1102.54,707.295 1106.56,709.598 1110.58,712.415 1114.61,715.758 1118.63,718.329 1122.65,721.596 1126.67,725.181 1130.69,728.481 
  1134.72,731.247 1138.74,734.49 1142.76,737.02 1146.78,739.84 1150.81,742.211 1154.83,744.407 1158.85,746.225 1162.87,748.473 1166.89,750.216 1170.92,751.56 
  1174.94,752.841 1178.96,753.913 1182.98,754.828 1187,756.101 1191.03,756.589 1195.05,757.83 1199.07,758.701 1203.09,759.861 1207.12,761.192 1211.14,762.373 
  1215.16,763.717 1219.18,765.476 1223.2,767.227 1227.23,769.18 1231.25,771.053 1235.27,772.928 1239.29,775.13 1243.32,777.273 1247.34,778.919 1251.36,780.748 
  1255.38,782.531 1259.4,783.521 1263.43,784.991 1267.45,786.034 1271.47,786.377 1275.49,787.02 1279.52,787.389 1283.54,787.647 1287.56,787.52 1291.58,787.814 
  1295.6,787.825 1299.63,788.319 1303.65,788.165 1307.67,789.15 1311.69,789.591 1315.71,789.977 1319.74,791.507 1323.76,793.067 1327.78,794.745 1331.8,796.958 
  1335.83,799.797 1339.85,802.904 1343.87,806.132 1347.89,810.06 1351.91,813.883 1355.94,818.07 1359.96,822.26 1363.98,826.534 1368,830.591 1372.03,834.421 
  1376.05,837.693 1380.07,841.15 1384.09,844.075 1388.11,847.045 1392.14,849.617 1396.16,851.715 1400.18,853.189 1404.2,854.793 1408.22,855.871 1412.25,856.86 
  1416.27,857.217 1420.29,857.135 1424.31,857.022 1428.34,856.805 1432.36,856.634 1436.38,856.625 1440.4,856.33 1444.42,856.279 1448.45,855.918 1452.47,856.011 
  1456.49,856.718 1460.51,857.154 1464.54,857.82 1468.56,859.848 1472.58,861.674 1476.6,864.151 1480.62,867.316 1484.65,870.768 1488.67,875.079 1492.69,879.564 
  1496.71,883.731 1500.73,888.754 1504.76,893.022 1508.78,896.878 1512.8,900.974 1516.82,903.577 1520.85,906.343 1524.87,907.932 1528.89,908.743 1532.91,908.829 
  1536.93,907.63 1540.96,905.671 1544.98,902.251 1549,897.597 1553.02,891.979 1557.05,885.689 1561.07,878.734 1565.09,871.617 1569.11,863.893 1573.13,856.635 
  1577.16,849.42 1581.18,843.054 1585.2,837.886 1589.22,833.661 1593.25,829.93 1597.27,827.873 1601.29,826.462 1605.31,826.679 1609.33,828.039 1613.36,830.249 
  1617.38,834.356 1621.4,839.805 1625.42,846.399 1629.44,854.875 1633.47,864.854 1637.49,875.518 1641.51,887.467 1645.53,900.206 1649.56,913.073 1653.58,925.623 
  1657.6,937.432 1661.62,948.507 1665.64,958.996 1669.67,967.786 1673.69,975.573 1677.71,982.453 1681.73,988.11 1685.76,992.353 1689.78,995.937 1693.8,998.057 
  1697.82,999.717 1701.84,999.722 1705.87,998.984 1709.89,997.211 1713.91,995.122 1717.93,991.771 1721.95,988.514 1725.98,984.784 1730,981.453 1734.02,977.963 
  1738.04,974.583 1742.07,972.014 1746.09,969.281 1750.11,967.929 1754.13,966.032 1758.15,965.828 1762.18,966.232 1766.2,967.66 1770.22,970.498 1774.24,974.989 
  1778.27,980.214 1782.29,986.364 1786.31,993.971 1790.33,1001.73 1794.35,1009.99 1798.38,1017.96 1802.4,1025.46 1806.42,1032.12 1810.44,1037.95 1814.47,1042.25 
  1818.49,1045.21 1822.51,1046.62 1826.53,1045.94 1830.55,1043.68 1834.58,1039.22 1838.6,1032.64 1842.62,1023.86 1846.64,1012.96 1850.66,1000.61 1854.69,986.107 
  1858.71,971.093 1862.73,955.097 1866.75,939.551 1870.78,924.257 1874.8,910.203 1878.82,897.309 1882.84,886.612 1886.86,878.18 1890.89,870.948 1894.91,866.989 
  1898.93,864.496 1902.95,864.33 1906.98,866.421 1911,870.834 1915.02,877.996 1919.04,887.512 1923.06,899.676 1927.09,914.202 1931.11,931.379 1935.13,950.538 
  1939.15,970.837 1943.17,992.037 1947.2,1013.56 1951.22,1034.42 1955.24,1054.3 1959.26,1072.17 1963.29,1088.49 1967.31,1102.73 1971.33,1114.18 1975.35,1123.73 
  1979.37,1132.33 1983.4,1138.39 1987.42,1142.06 1991.44,1144.78 1995.46,1145.61 1999.49,1144.31 2003.51,1141.65 2007.53,1137.07 2011.55,1131.75 2015.57,1125.78 
  2019.6,1118.92 2023.62,1112.16 2027.64,1105.1 2031.66,1098.67 2035.69,1092.49 2039.71,1086.8 2043.73,1082.34 2047.75,1078.24 2051.77,1075.44 2055.8,1073.89 
  2059.82,1074.17 2063.84,1075.66 2067.86,1079.81 2071.88,1085.65 2075.91,1093.35 2079.93,1102.72 2083.95,1113.46 2087.97,1124.89 2092,1136.59 2096.02,1148.14 
  2100.04,1158.83 2104.06,1168.12 2108.08,1176.06 2112.11,1181.22 2116.13,1184.7 2120.15,1185.16 2124.17,1183.33 2128.2,1178.16 2132.22,1169.99 2136.24,1158.75 
  2140.26,1144.52 2144.28,1126.83 2148.31,1106.76 2152.33,1084.83 2156.35,1061.34 2160.37,1036.86 2164.39,1013.08 2168.42,990.292 2172.44,969.221 2176.46,950.501 
  2180.48,934.95 2184.51,921.6 2188.53,911.851 2192.55,905.657 2196.57,902.145 2200.59,902.206 2204.62,905.303 2208.64,911.911 2212.66,922.345 2216.68,936.466 
  2220.71,953.878 2224.73,975.367 2228.75,999.575 2232.77,1027.07 2236.79,1056.15 2240.82,1086.11 2244.84,1116.12 2248.86,1145.3 2252.88,1172.4 2256.9,1197.35 
  2260.93,1219.03 
  &#34;/&gt;
&lt;/svg&gt;
&lt;p&gt;これまた簡単。&lt;/p&gt;
&lt;p&gt;「やってみた」系の記事になってしまったが、今日はここまで。
まだ少し触っただけではあるが、手軽にガウス過程が使えて便利。
次は何か具体例を用いて &lt;code&gt;GP&lt;/code&gt;, &lt;code&gt;GPE&lt;/code&gt; のフィッティングを行いたい。&lt;/p&gt;
&lt;p&gt;上の内容のjupyter notebook:&lt;br&gt;
&lt;a href=&#34;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&#34;&gt;https://github.com/matsueushi/notebook_blog/blob/master/gaussianprocess-julia.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h3 id=&#34;参考&#34;&gt;参考&lt;/h3&gt;
&lt;p&gt;FAIRBROTHER, Jamie, et al. GaussianProcesses. jl: A Nonparametric Bayes package for the Julia Language. arXiv preprint &lt;a href=&#34;https://arxiv.org/abs/1812.09064&#34;&gt;arXiv:1812.09064&lt;/a&gt;, 2018.&lt;/p&gt;
&lt;p&gt;GitHubレポジトリ: &lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl&#34;&gt;STOR-i/GaussianProcesses.jl&lt;/a&gt;,
&lt;a href=&#34;https://github.com/STOR-i/GaussianProcesses.jl/tree/master/notebooks&#34;&gt;サンプルノートブック&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;ドキュメント: &lt;a href=&#34;http://stor-i.github.io/GaussianProcesses.jl/latest/&#34;&gt;http://stor-i.github.io/GaussianProcesses.jl/latest/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;持橋大地, 大羽成征. ガウス過程と機械学習, 講談社 機械学習プロフェッショナルシリーズ, 2019&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程の補助変数法をJuliaで実装、回帰結果を比較</title>
      <link>https://matsueushi.github.io/posts/ivm/</link>
      <pubDate>Thu, 04 Jul 2019 10:10:28 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/ivm/</guid>
      <description>&lt;p&gt;7/5 追記 タイトルが「変数補助法」になっていたのを「補助変数法」に修正&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;前回書いた 「&lt;a href=&#34;../sparse-approximate-gp/&#34;&gt;ガウス過程の補助変数法 (Inducing variable method) を理解する&lt;/a&gt; 」の続き。
Julia (v1.0) を使って、前回調べた SoD, SoR, DTC, FITC による回帰の近似結果を実際に確認する。&lt;/p&gt;
&lt;p&gt;簡単のため、&lt;code&gt;gp.jl&lt;/code&gt; により、&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ガウスカーネルのクラス &lt;code&gt;GaussianKernel&lt;/code&gt; が定義されていて、&lt;/li&gt;
&lt;li&gt;カーネル &lt;code&gt;k&lt;/code&gt; に対してカーネル関数 \( k(x, y) \) と相互共分散 \( (k(x_i, y_j))_{i,j}\) がそれぞれ &lt;code&gt;ker(k, x, y)&lt;/code&gt; と &lt;code&gt;cov(k, xs, ys)&lt;/code&gt; で計算できる&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;と仮定する。ということで、まずはライブラリの読み込み。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra

include(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;gp.jl&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;データは、MLPシリーズ 「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」の pp.157, 図5.3 補助入力点の配置 と同じサンプルを使う。上記のページに掲載されている、「補助変数法の例 (1次元の場合).」のデータの生成方法を参考にして次のようにデータを100個作成した。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#75715e&#34;&gt;# サンプルデータの作成&lt;/span&gt;

xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; vcat(rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;80&lt;/span&gt;),rand(&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
sort!(xs)
fx &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(xs&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)
ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fx &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; rand(Normal(), Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(fx)) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;

ts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;)
plot(ts, sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(ts&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)

scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-sample-data.png&#34; alt=&#34;サンプルデータ&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( y = \sin (2x) \) にノイズを加えたもので、\( [0,1] \) の間はデータの密度が高くなっている。&lt;code&gt;ts&lt;/code&gt; は、あとで使う分布を予測したい点である。&lt;/p&gt;
&lt;p&gt;今回予測するのは、観測値 \( y \) ではなく、出力値 \( f \)とする。
(最初にやっていた時は観測値を予測していて、本の図と同じにならなくて混乱していた)&lt;/p&gt;
&lt;p&gt;考えるカーネルは、ガウスカーネル \( k(x, x^\prime) = \exp(-|x- x^\prime|^2) \) である。
観測誤差は \( \sigma^2 = 1.0 \) としておく。コードの中ではこれを &lt;code&gt;eta&lt;/code&gt; で表す。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianKernel()
eta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;gp&#34;&gt;GP&lt;/h3&gt;
&lt;p&gt;まずは、通常のガウス回帰モデルの場合の予測を確認。予測分布は、&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{f}_* | \mathbf{y}) = \mathcal{N}(\mathbf{K}_{*, \mathbf{f}} (\mathbf{K}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{K}_{*, \mathbf{f}} (\mathbf{K}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{K}_{\mathbf{f}, *})
$$&lt;/p&gt;
&lt;p&gt;であった。今回は、複数点の同時予測分布からサンプルを発生させることは行わず、各点ごとに予測分布を求めて平均と2.5%, 97.5%点を計算する。&lt;/p&gt;
&lt;p&gt;1点の予測分布を計算する関数を実装しよう。自分の実装では、&lt;code&gt;cov&lt;/code&gt; は行列を返すため、1x1の行列を &lt;code&gt;first&lt;/code&gt; を使ってスカラーにしている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;Kff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, xs, xs)
n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)
Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(Kff &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n))

&lt;span style=&#34;color:#75715e&#34;&gt;# 1点の予測分布&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; gp(t)
    Kft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, xs, [t])
    Ktf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kft&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
    Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]

    gp_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
    gp_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kft
    Normal(first(gp_mu), sqrt(first(gp_cov)))
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;以下のコードで表示すると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp_dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [gp(t) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ts]
gp_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(gp_dists)
gp_qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat([quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(s, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; gp_dists]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; gp_plot()
    plot(ts, gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], 
        fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)

    plot!(ts, sin&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(ts&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;y=sin(2x)&amp;#34;&lt;/span&gt;)
    plot!(ts, gp_mean, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GP&amp;#34;&lt;/span&gt;)
    scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

gp_plot()
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-gp.png&#34; alt=&#34;GP&#34;&gt;&lt;/p&gt;
&lt;p&gt;(なぜか &lt;code&gt;savefig&lt;/code&gt; でpng形式で保存すると &lt;code&gt;fillrange&lt;/code&gt; した最小値の部分に線が出てしまった。)&lt;/p&gt;
&lt;p&gt;早速それぞれの補助変数法でどれくらい近似できているかを見ていこう。補助入力点が、2点、5点、10点ある場合を考え、点は等間隔に配置されているとする。(SoD を除く)&lt;/p&gt;
&lt;p&gt;本質的な部分とは関係ないが、先にプロット用の関数を定義しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plot_result(gp_mean, gp_qt, mn, qt, ind_xs, label)
    plot(ts, gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; gp_qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], 
        fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;GP&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    plot!(ts, qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.4&lt;/span&gt;,
               label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; label, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)

    plot!(ts, gp_mean, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
    
    plot!(ts, mn, lw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)

    scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
    scatter!(ind_xs, fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(ind_xs)), 
    markershape &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;x, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;the-subset-of-data-sod&#34;&gt;The Subset of Data (SoD)&lt;/h3&gt;
&lt;p&gt;SoD は他の SoR, DTC, FITC とは違い、任意に補助入力点を選べる訳ではなく元の入力点の部分集合として選ばなくてはいけない。
ここでは、サンプルの左からの順番が等間隔になるように選んだ。(例えば5点選ぶ場合、左から1, 21, 41, 61, 81番目)。&lt;/p&gt;
&lt;p&gt;ランダムに選択したり、なるべく等間隔になるように選んだりすればもっとデータがよく代表されるようになり精度が向上するかもしれない。
実装に関しては、GPの入力点を減らしただけである。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sod_plot(sod_xs, sod_ys)
    Kff &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, sod_xs, sod_xs)
    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(sod_xs)
    Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(Kff &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n))

    &lt;span style=&#34;color:#75715e&#34;&gt;# 各点の分布を計算して信用区間を計算する&lt;/span&gt;

    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sod(t)
        Kft &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, sod_xs, [t])
        Ktf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kft&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
        Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]

        gp_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; sod_ys
        gp_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Ktf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kft
        Normal(first(gp_mu), sqrt(first(gp_cov)))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    sod_dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [sod(t) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ts]
    sod_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(sod_dists)
    sod_qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat(
        [quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(s, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; sod_dists]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)

    plot_result(gp_mean, gp_qt, sod_mean, sod_qt, sod_xs, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoD&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

plts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [gp_plot()]

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; where_xs &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;50&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;20&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;]
    sod_xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; xs[where_xs]
    sod_ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ys[where_xs]

    push!(plts, sod_plot(sod_xs, sod_ys))
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

plot(plts&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-sod.png&#34; alt=&#34;SoD&#34;&gt;&lt;/p&gt;
&lt;p&gt;左上がGPで、補助入力点のx座標はグラフの下部に示している。データの左から順番で等間隔になるように補助入力点を選ぶと、データがスパースなところの情報が大きく切り捨てられてかなり近似が悪くなるということだろう。&lt;/p&gt;
&lt;h3 id=&#34;the-subset-of-regressors-sor&#34;&gt;The Subset of Regressors (SoR)&lt;/h3&gt;
&lt;p&gt;前回考えた、予測分布 \( q_{\text{SoR}}(\mathbf{f}_* | \mathbf{y}) \) が
$$
\begin{aligned}
\Sigma = (\sigma^{-2} \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1}
\end{aligned}
$$
を用いて
$$
\begin{aligned}
\mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y}, \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$
と表されることを思い出すと、SoRは次のように実装できる。&lt;code&gt;us&lt;/code&gt; の取り方が SoD と違っていることに注意。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sor_plot(us)
    Kuu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, us)
    Kuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, xs)
    Kfu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kuf&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
    Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kfu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Kuu)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; sor(t)
        Kut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, [t])
        Ktu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kut&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;

        sor_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
        sor_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
        Normal(first(sor_mu), sqrt(first(sor_cov)))
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    sor_dists &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [sor(t) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; t &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; ts]
    sor_mean &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(sor_dists)
    sor_qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; hcat(
        [quantile&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(s, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]) &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; s &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; sor_dists]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)

    plot_result(gp_mean, gp_qt, sor_mean, sor_qt, us, &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;SoR&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

plts &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [gp_plot()]

&lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; du &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;2.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;]
    us &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(range(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, stop &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; du, step &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; du))

    push!(plts, sor_plot(us))
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

plot(plts&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, layout &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;), size &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;800&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;600&lt;/span&gt;])
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-sor.png&#34; alt=&#34;SoR&#34;&gt;&lt;/p&gt;
&lt;p&gt;式を見て結構大胆な近似だと思っていたが、この例だと、5点の段階でも入力データが存在している範囲での予測はそう悪くない。&lt;/p&gt;
&lt;h3 id=&#34;the-deterministic-training-conditional-dtc&#34;&gt;The Deterministic Training Conditional (DTC)&lt;/h3&gt;
&lt;p&gt;DTC, FITCに関しては、SoRの共分散の計算がちょっと変わるだけ。
$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}_* | \mathbf{y})
= \mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;だったから、SoRの最初の計算部分を&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;Kuu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, us)
Kuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, xs)
Kfu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kuf&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;
Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kfu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Kuu)

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; dtc(t)
    Kut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, [t])
    Ktu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kut&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;

    Qtt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Kuu) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
    Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]

    sor_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
    sor_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Qtt &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut

    Normal(first(sor_mu), sqrt(first(sor_cov)))
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;に変えるだけでいい。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-dtc.png&#34; alt=&#34;DTC&#34;&gt;&lt;/p&gt;
&lt;p&gt;5点の場合のデータがない部分の分散の情報がかなり改善されているし、10点ではほとんど平均、分散共にぴったり近似できている。
そうなるとFITCを使うまでもないということにもなりかねないが……&lt;/p&gt;
&lt;h3 id=&#34;the-fully-independent-training-conditional-fitc&#34;&gt;The Fully Independent Training Conditional (FITC)&lt;/h3&gt;
&lt;p&gt;最後にFITC。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\Sigma = (\mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1}, \Lambda = \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})
\end{aligned}
$$
を使って
$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}_* | \mathbf{y})
= \mathcal{N} (\mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} ),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;だったから同様に&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;Kuu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, us)
Kuf &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, xs)
Kfu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kuf&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;

Λ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Diagonal&lt;/span&gt;([ker(gk, xs[i], xs[i]) 
        &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Kfu[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Kuu) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, i] &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; eta 
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)])
Σ &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Λ) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kfu &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Kuu)

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fitc(t)
    Kut &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gk, us, [t])
    Ktu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Kut&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt;

    Qtt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Kuu) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut
    Ktt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [ker(gk, t, t)]

    sor_mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kuf &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; inv(Λ) &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
    sor_cov &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Ktt &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; Qtt &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Ktu &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Σ &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; Kut

    Normal(first(sor_mu), sqrt(first(sor_cov)))
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-fitc.png&#34; alt=&#34;FITC&#34;&gt;&lt;/p&gt;
&lt;p&gt;あまりDTCと変わらない感じになってしまった。この場合だと追加で計算した分散の対角線部分があまり効いてこなかったのだろう。&lt;/p&gt;
&lt;h3 id=&#34;手法の比較&#34;&gt;手法の比較&lt;/h3&gt;
&lt;p&gt;最後に、点の数を揃えて比較してみる。図示方法を変えるだけなので、コードは省略。&lt;/p&gt;
&lt;h4 id=&#34;2点&#34;&gt;2点&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-2pts.png&#34; alt=&#34;2点&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;5点&#34;&gt;5点&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-5pts.png&#34; alt=&#34;5点&#34;&gt;&lt;/p&gt;
&lt;h4 id=&#34;10点&#34;&gt;10点&lt;/h4&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/ivm-10pts.png&#34; alt=&#34;10点&#34;&gt;&lt;/p&gt;
&lt;p&gt;DTCの段階で十分良く近似できていて、\( \mathbf{f} | \mathbf{u} \) の分散の対角部分を考えるメリットがあまり感じられないような結果となってしまった。
どのような場合にFITCの近似ががDTCの場合より劇的に向上するのか考えてみたい。&lt;/p&gt;
&lt;p&gt;Jupyter Notebook: &lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/master/ivm.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/master/ivm.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;レポジトリ: &lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp&#34;&gt;https://github.com/matsueushi/gp_and_mlp&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程の補助変数法 (Inducing variable method) を理解する</title>
      <link>https://matsueushi.github.io/posts/sparse-approximate-gp/</link>
      <pubDate>Thu, 27 Jun 2019 00:55:38 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/sparse-approximate-gp/</guid>
      <description>&lt;p&gt;6/27 追記:  typo, \( p(\mathbf{y} | \mathbf{f}) \) の誤字を修正, \( q_{\text{FITC}}(\mathbf{f}_* | \mathbf{y}) \) の二番目の等号を修正 (\( \sigma^{-2} \) を削除)&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機械学習&lt;/a&gt;」を読んでいるが、5.2補助変数法のところで、どの部分で近似が行われているのかよく分からなくなってしまった。&lt;/p&gt;
&lt;p&gt;そのため、今回は原論文であるQuinonero Candela, J. and Rasmussen, CE.の &lt;a href=&#34;http://www.jmlr.org/papers/volume6/quinonero-candela05a/quinonero-candela05a.pdf&#34;&gt;&amp;ldquo;A Unifying View of Sparse Approximate Gaussian Process Regression&amp;rdquo;&lt;/a&gt; を読んでスパース近似についてまとめて見ようと思う。ゴールは、The Fully Independent Training Conditional (FITC) の理解である。&lt;/p&gt;
&lt;p&gt;\( \mathbf{X}=(\mathbf{x}_1, \ldots, \mathbf{x}_N) \) を学習データ、
\( \mathbf{y}=(y_1, \ldots, y_N)^\top \) を観測値とする。学習データと観測値の関係は、ガウス過程から生成される関数 \( f \) と誤差 \( \epsilon_n \) を用いて&lt;/p&gt;
&lt;p&gt;$$ y_n = f(\mathbf{x_n}) + \epsilon_n,$$
$$\epsilon_n \sim \mathcal{N}(0, \sigma^2)$$&lt;/p&gt;
&lt;p&gt;と結びつく観測モデルを考える。\( \mathbf{f}=(f_1, \ldots, f_N)^\top, f_n=f(\mathbf{x}_n) \) は学習データの出力値である。
上の観測モデルは、
$$
p(\mathbf{y} | \mathbf{f}) = \mathcal{N}(\mathbf{f}, \sigma^2\mathbf{I})
$$
と書き直せる。&lt;/p&gt;
&lt;p&gt;取り組みたい問題は、ガウス過程回帰に基づいた回帰モデル。&lt;/p&gt;
&lt;p&gt;予測したい点を \( \mathbf{X}_*=(\mathbf{x}_{*1}, \ldots, \mathbf{x}_{*M} ) \) ,
出力値を \( \mathbf{f}_* \) , 観測値を \( \mathbf{y}_* \) とする。&lt;/p&gt;
&lt;p&gt;\( \mathbf{f}, \mathbf{f}_* \) の条件付き同時確率分布はベイズルールから&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}, \mathbf{f}_* | \mathbf{y}) = \frac{p(\mathbf{f}, \mathbf{f}_*)p(\mathbf{f} | \mathbf{y})}{p(\mathbf{y})},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;同時事前確率は、ガウス過程の定義より、カーネル関数が定める共分散行列 \( \mathbf{K}=(k(\mathbf{x}_i, \mathbf{x}_j))_{i, j} \) を用いて&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{K}_{\mathbf{f}, \mathbf{f}} &amp;amp; \mathbf{K}_{*, \mathbf{f}} \\
\mathbf{K}_{\mathbf{f}, *} &amp;amp; \mathbf{K}_{*, *}
\end{matrix}
\right)
\right),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;となる。学習データ \( \mathbf{X} \) が大きくなると \( \mathbf{K}_{\mathbf{f}, \mathbf{f}} \) の計算量が大きくなるので、この部分の計算量を減らすような近似を行いたいわけである。&lt;/p&gt;
&lt;p&gt;ガウス過程の予測分布 \( p(\mathbf{f}_* | \mathbf{y} ) \) は、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}_* | \mathbf{y}) &amp;amp;= \int p (\mathbf{f}, \mathbf{f}_* | \mathbf{y}) d\mathbf{f} \\
&amp;amp;= \frac{1}{p(\mathbf{y})} \int p(\mathbf{y} | \mathbf{f}) p(\mathbf{f}, \mathbf{f}_*)d\mathbf{f} \\
&amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{f}} \widetilde{\mathbf{K}}_{\mathbf{f}, \mathbf{f}}^{-1}\mathbf{y},
\mathbf{K}_{*, *} - \mathbf{K}_{*, \mathbf{f}}\widetilde{\mathbf{K}}_{\mathbf{f}, \mathbf{f}}^{-1} \mathbf{K}_{\mathbf{f}, *}),
\end{aligned}
$$
ここで \( \widetilde{\mathbf{K}}_{\mathbf{f}, \mathbf{f}} = \mathbf{K}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I} \) である。
この式は「ガウス過程と機械学習」の公式3.8に対応し、こちらではノイズ項目 \( \sigma^2 \mathbf{I} \) もカーネルに含めているので、notationが少し違っている。&lt;/p&gt;
&lt;p&gt;いくつかスパース近似にはバリエーションがあるが、補助入力点 \( \mathbf{u}=(\mathbf{u}_1, \ldots, \mathbf{u}_m)^\top \) を使って \( p(\mathbf{f}_* | \mathbf{f}) \)を近似するという方法は共通している。まずは近似ではなく正確に成り立っている式を確認する。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}_*, \mathbf{f}) &amp;amp;= \int p(\mathbf{f}_*, \mathbf{f}, \mathbf{u})d\mathbf{u} \\
&amp;amp;= \int p(\mathbf{f}_*, \mathbf{f} | \mathbf{u})p(\mathbf{u})d\mathbf{u},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{u}) = \mathcal{N}(\mathbf{0}, \mathbf{K}_{\mathbf{u}, \mathbf{u}}),
$$&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{f} | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}),
$$&lt;/p&gt;
&lt;p&gt;$$
p(\mathbf{f}_* | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *})
$$&lt;/p&gt;
&lt;p&gt;と表される。ここで、 \( \mathbf{Q}_{\mathbf{a}, \mathbf{b}} := \mathbf{K}_{\mathbf{a}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{b}} \) である。&lt;/p&gt;
&lt;p&gt;補助入力点 \( \mathbf{u} \) を使った条件付き確率 \( q(\mathbf{f}_* | \mathbf{u}), q(\mathbf{f} | \mathbf{u})\) を使って、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
p(\mathbf{f}_*, \mathbf{f}) &amp;amp;\simeq q(\mathbf{f}_*, \mathbf{f}) \\
&amp;amp;= \int q(\mathbf{f}_* | \mathbf{u}) q(\mathbf{f} | \mathbf{u}) p(\mathbf{u}) d\mathbf{u}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;という近似を行う。この時の \( q \) の作り方が近似の手法によって異なることになる。&lt;/p&gt;
&lt;h3 id=&#34;the-subset-of-data-sod-approximation&#34;&gt;The Subset of Data (SoD) Approximation&lt;/h3&gt;
&lt;p&gt;部分データ法は元々の入力点の中から代表となる点を抜き出し、抜き出した点を新たな入力点としてガウス回帰を行うやり方。細かい説明は省略。&lt;/p&gt;
&lt;h3 id=&#34;the-subset-of-regressors-sor-approximation&#34;&gt;The Subset of Regressors (SoR) Approximation&lt;/h3&gt;
&lt;p&gt;The Subset of Regressors Approximation (部分回帰法?, 以下SoR) は \( \mathbf{f}, \mathbf{f}_* \)の同時分布を&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{Q}_{\mathbf{f}, \mathbf{f}} &amp;amp; \mathbf{Q}_{*, \mathbf{f}} \\
\mathbf{Q}_{\mathbf{f}, *} &amp;amp; \mathbf{Q}_{*, *}
\end{matrix}
\right)
\right)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と近似するもので、後に出てくるDTC, FITCの基礎となる考え方である。
心持ちとしては、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f} | \mathbf{u})
&amp;amp;= \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{0}) \\
&amp;amp;\simeq \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}) \\
&amp;amp;= p(\mathbf{f} | \mathbf{u}),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f}_* | \mathbf{u}) &amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{0}) \\
&amp;amp;\simeq \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *}) \\
&amp;amp;= p(\mathbf{f}_* | \mathbf{u})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と、\( p(\mathbf{f} | \mathbf{u}), p(\mathbf{f}_* | \mathbf{u}) \) の分散を \( 0 \) と近似して、\( \mathbf{f}, \mathbf{f}_* \) と \( \mathbf{u} \) の関係がdeterministicと仮定するものである。(deterministicの場合はもはや \( \mathbf{f} | \mathbf{u}\) は正規分布ではないので、この書き方は微妙な感じかもしれないが、論文のnotationに従った)&lt;/p&gt;
&lt;p&gt;仮定から \( q_{\text{SoR}}(\mathbf{f}, \mathbf{f}_* ) \) の導出は、 同時分布が正規分布になることと、多変数正規分布の線形変換の性質から、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\mathbf{f} &amp;amp;= \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u} \\
&amp;amp; \sim \mathcal{N}(\mathbf{0}, (\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1}) \mathbf{K}_{\mathbf{u}, \mathbf{u}} (\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1})^\top) \\
&amp;amp; \sim \mathcal{N}(\mathbf{0}, \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}}) \\
&amp;amp; \sim \mathcal{N}(\mathbf{0}, \mathbf{Q}_{\mathbf{f}, \mathbf{f}}),
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;であり、同様に \( \mathbf{f}_* \sim \mathcal{N}(\mathbf{0}, \mathbf{Q}_{*, *}) \) を得られることと、&lt;a href=&#34;https://en.wikipedia.org/wiki/Cross-covariance_matrix&#34;&gt;相互共分散行列&lt;/a&gt;の線型性から、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\text{cov}(\mathbf{f}, \mathbf{f}_*) &amp;amp;= \text{cov}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u} ) \\
&amp;amp; = \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \text{cov}(\mathbf{u}, \mathbf{u}) (\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1})^\top \\
&amp;amp; = \mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, *} \\
&amp;amp; = \mathbf{Q}_{\mathbf{f}, *},
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;\( \text{cov}(\mathbf{f}_*, \mathbf{f}) = \mathbf{Q}_{*, \mathbf{f}} \) であることから従う。&lt;/p&gt;
&lt;p&gt;予測分布は、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{SoR}}(\mathbf{f}_* | \mathbf{y})
&amp;amp; = \mathcal{N}(\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{y},
\mathbf{Q}_{*, *} - \mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{Q}_{\mathbf{f}, *})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;で与えられる。これが \( \Sigma = (\sigma^{-2} \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1} \) を用いて \( \mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y}, \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} ) \) と等しくなることを示そう。 初見でなぜこうなるか不明だった……&lt;/p&gt;
&lt;p&gt;まず、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\sigma^2 \Sigma^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}}
&amp;amp; = (\mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \sigma^2 \mathbf{K}_{\mathbf{u}, \mathbf{u}}) \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}} \\
&amp;amp; = \mathbf{K}_{\mathbf{u}, \mathbf{f}} (\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}} + \sigma^2 \mathbf{I}) \\
&amp;amp; = \mathbf{K}_{\mathbf{u}, \mathbf{f}} (\mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;であるから、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1}
&amp;amp; = \sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma
(\sigma^2 \Sigma^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, \mathbf{f}})
(\mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \\
&amp;amp; = \sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}}
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;を得る。分散の方の等号も、この式を使えば最終的に \( \Sigma (\mathbf{K}_{\mathbf{u}, \mathbf{u}} + \sigma^{-2}\mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{K}_{\mathbf{f}, \mathbf{u}}) = \mathbf{I} \) に帰着させて示すことができる。&lt;/p&gt;
&lt;h3 id=&#34;the-deterministic-training-conditional-dtc-approximation&#34;&gt;The Deterministic Training Conditional (DTC) Approximation&lt;/h3&gt;
&lt;p&gt;DTCはSoRと似ていて、&lt;/p&gt;
&lt;p&gt;$$
q_{\text{DTC}}(\mathbf{f} | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{0})
$$&lt;/p&gt;
&lt;p&gt;と \( \mathbf{f} \) が deterministic に \( \mathbf{u} \) によって定まると仮定する。一方、出力値の方は&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}_* | \mathbf{u}) &amp;amp;= p(\mathbf{f}_* | \mathbf{u}) \\
&amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と近似を行わない。&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
\text{cov}(\mathbf{f}, \mathbf{f}_*) &amp;amp;= \mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \text{cov}(\mathbf{u}, \mathbf{f}_*) \\
&amp;amp;= \mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{K}_{\mathbf{u}, *} \\
&amp;amp;= \mathbf{Q}_{\mathbf{f}, *}
\end{aligned}
$$
などから、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{Q}_{\mathbf{f}, \mathbf{f}} &amp;amp; \mathbf{Q}_{*, \mathbf{f}} \\
\mathbf{Q}_{\mathbf{f}, *} &amp;amp; \mathbf{K}_{*, *}
\end{matrix}
\right)
\right)
\end{aligned}
$$
となる。SoRの時とほとんど同じ。入力値の近似で計算量が十分削減できる場合は、出力値のカーネルの部分で正確な値を使いたいということだろう。&lt;/p&gt;
&lt;p&gt;予測分布は、&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{DTC}}(\mathbf{f}_* | \mathbf{y})
&amp;amp; = \mathcal{N}(\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \sigma^2 \mathbf{I})^{-1} \mathbf{Q}_{\mathbf{f}, *}) \\
&amp;amp; = \mathcal{N} (\sigma^{-2} \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;となる。これはSoRの時の結果からすぐに従う。&lt;/p&gt;
&lt;h3 id=&#34;the-fully-independent-training-conditional-fitc-approximation&#34;&gt;The Fully Independent Training Conditional (FITC) Approximation&lt;/h3&gt;
&lt;p&gt;いよいよ、当初の目的だったFITCまでたどり着いた。FITCは、DTCとほぼ同じだが、
DTCでは切り捨てていた \( q(\mathbf{f} | \mathbf{u}) \) の分散を考慮する。&lt;/p&gt;
&lt;p&gt;ただ、分散共分散行列をフルで計算したくない (フルで計算すると近似を行わない通常のガウス回帰である) ので、
出力値の間の相関を無視して、対角線の部分だけを計算する。つまり、&lt;/p&gt;
&lt;p&gt;$$
q_{\text{FITC}}(\mathbf{f} | \mathbf{u}) = \mathcal{N}(\mathbf{K}_{\mathbf{f}, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}))
$$&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}_* | \mathbf{u}) &amp;amp;= p(\mathbf{f}_* | \mathbf{u}) \\
&amp;amp;= \mathcal{N}(\mathbf{K}_{*, \mathbf{u}} \mathbf{K}_{\mathbf{u}, \mathbf{u}}^{-1} \mathbf{u}, \mathbf{K}_{*, *} - \mathbf{Q}_{*, *})
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;となる。今までと同じように計算して、同時分布&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}, \mathbf{f}_*) =  \mathcal{N}\left( \mathbf{0},
\left(
\begin{matrix}
\mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}}) &amp;amp; \mathbf{Q}_{*, \mathbf{f}} \\
\mathbf{Q}_{\mathbf{f}, *} &amp;amp; \mathbf{K}_{*, *}
\end{matrix}
\right)
\right)
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;と予測分布&lt;/p&gt;
&lt;p&gt;$$
\begin{aligned}
q_{\text{FITC}}(\mathbf{f}_* | \mathbf{y})
&amp;amp; = \mathcal{N}(\mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \Lambda)^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, \mathbf{f}}(\mathbf{Q}_{\mathbf{f},\mathbf{f}} + \Lambda)^{-1} \mathbf{Q}_{\mathbf{f}, *}) \\
&amp;amp; = \mathcal{N} (\mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{y},
\mathbf{K}_{*, *} - \mathbf{Q}_{*, *} + \mathbf{K}_{*, \mathbf{u}} \Sigma \mathbf{K}_{\mathbf{u}, *} )
\end{aligned}
$$&lt;/p&gt;
&lt;p&gt;を得る。ここで、 \( \Sigma = (\mathbf{K}_{\mathbf{u}, \mathbf{f}} \Lambda^{-1} \mathbf{K}_{\mathbf{f}, \mathbf{u}} + \mathbf{K}_{\mathbf{u}, \mathbf{u}})^{-1}, \Lambda = \text{diag}(\mathbf{K}_{\mathbf{f}, \mathbf{f}} - \mathbf{Q}_{\mathbf{f}, \mathbf{f}} + \sigma^2 \mathbf{I}) \) である。&lt;/p&gt;
&lt;h3 id=&#34;最後に&#34;&gt;最後に&lt;/h3&gt;
&lt;p&gt;統一的な枠組みで SoD, SoR, DTC, FITC と順に読んでいくことで補助変数法を一望することができて面白かった。&lt;/p&gt;
&lt;p&gt;本文では、一部の相関を無視しないで考える The Partially Independent Training Conditional (PITC) や Inducing Variables の選び方についても触れられているようだ。&lt;/p&gt;
&lt;p&gt;時間があれば、各補助変数法を実際に実装してみて、回帰結果がどの程度変わるのか確認してみたい。&lt;/p&gt;
&lt;p&gt;-&amp;gt; やりました&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;../ivm/&#34;&gt;ガウス過程の補助変数法をJuliaで実装、回帰結果を比較&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Juliaでガウス過程を実装&amp;パラメーター推定</title>
      <link>https://matsueushi.github.io/posts/gp-parameter-estimation/</link>
      <pubDate>Sat, 08 Jun 2019 20:08:12 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-parameter-estimation/</guid>
      <description>&lt;p&gt;「ガウス過程と機械学習」を3章まで読み終えたので、復習を兼ねてJulia(1.1.0)でガウス過程を実装し、
カーネルのハイパーパラメーターをOptim.jlで推定するところまでをまとめる。数学的に細かい内容は本を読んで欲しい。
図3.23の陸上男子100mの世界記録の回帰モデルを作成することを今回の目標とする。&lt;/p&gt;
&lt;p&gt;ガウスカーネルによる回帰:
&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_gaussian.png&#34; alt=&#34;ガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;ガウスカーネル＋線形カーネルによる回帰:
&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_linear_gaussian.png&#34; alt=&#34;ガウスカーネル＋線形カーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;任意の有限の入力
\( x_1, \ldots , x_n \)
を与えたときに、出力
\( (f(x_1), \ldots , f(x_n)) \)
が平均
\( (\mu(x_1), \ldots , \mu(x_n)) \)
分散
\( (k(x_n, x_{nm} )) \)
のガウス分布に従う時、
\( f \)
をガウス過程と呼び、
\( f \sim \text{GP} (\mu(x), k(x, x^\prime)) \)
と書く。そして
\( \mu \)
を平均関数、
\( k \)
をカーネル関数と呼んでいるのであった。&lt;/p&gt;
&lt;p&gt;今回は本と同様、簡単のために平均関数が恒等的に0となるものだけを考える。&lt;/p&gt;
&lt;h2 id=&#34;ガウスカーネルの定義&#34;&gt;ガウスカーネルの定義&lt;/h2&gt;
&lt;p&gt;もっとも基本的なカーネルであるガウスカーネルを定義して、ガウス過程を構成する。ガウスカーネルのカーネル関数は次のものとする。
$$ k(x, x^\prime ) = \exp \left( -\frac{|x-x^\prime|^2}{\theta}\right) $$
本文では
$$ k(x, x^\prime ) = \theta_1 \exp \left( -\frac{|x-x^\prime|^2}{\theta_2}\right) $$
この形で紹介されていたが、後々カーネルの線型結合を考えるのでここでは
\( \exp \)
の前に係数を付けない前者を採用する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;abstract type&lt;/span&gt; Kernel &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; cov(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel, xs1, xs2)
    &lt;span style=&#34;color:#75715e&#34;&gt;# covariance matrix&lt;/span&gt;
    n1 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs1, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    n2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs2, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    c &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(n1, n2)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n1
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n2
            c[i, j] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; ker(k, xs1[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], xs2[j, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;])
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
    c
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

cov(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel, xs) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(k, xs, xs)


&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Gaussian Kernel
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; GaussianKernel &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel
     theta&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianKernel, x1, x2)
    exp(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; sum((x1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x2)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;theta)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;分散共分散行列を計算する &lt;code&gt;cov&lt;/code&gt; 関数とガウスカーネルを定義した。
&lt;code&gt;mutable&lt;/code&gt; にしたのは、後々パラメーター推定をするときにパラメーターの更新をするため。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Distributions
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Plots

gk &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
gk_dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MvNormal(zeros(Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)), cov(gk, xs))
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(gk_dist, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;\( \theta=1 \)のガウスカーネルから生成されるガウス過程から、入力を-4から4まで0.5ごとに選んだ点とし、サンプルをいくつか取ってみる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_1.png&#34; alt=&#34;ガウス過程からのサンプル&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;ガウス過程の定義&#34;&gt;ガウス過程の定義&lt;/h2&gt;
&lt;p&gt;上でガウスカーネルを定義した方法には一つ問題があり、例えば点を0.1毎に取ると上手く動かない。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
gk_dist &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; MvNormal(zeros(Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(xs)), cov(gk, xs))
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(gk_dist, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;PosDefException: matrix is not positive definite; Cholesky factorization failed.

Stacktrace:
 [1] checkpositivedefinite at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/factorization.jl:11 [inlined]
 [2] #cholesky!#96(::Bool, ::Function, ::LinearAlgebra.Hermitian{Float64,Array{Float64,2}}, ::Val{false}) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:153
 [3] #cholesky! at ./none:0 [inlined]
 [4] #cholesky!#97(::Bool, ::Function, ::Array{Float64,2}, ::Val{false}) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:185
 [5] #cholesky#101 at ./none:0 [inlined]
 [6] cholesky at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:275 [inlined] (repeats 2 times)
 [7] Type at /Users/apple/.julia/packages/PDMats/AObTs/src/pdmat.jl:19 [inlined]
 [8] MvNormal(::Array{Float64,1}, ::Array{Float64,2}) at /Users/apple/.julia/packages/Distributions/wY4bz/src/multivariate/mvnormal.jl:196
 [9] top-level scope at In[18]:6
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;問題が発生した原因は、 &lt;code&gt;cov&lt;/code&gt; 関数により生成される分散共分散行列が正定値にならないことである。対策としては、分散共分散行列の対角成分に小さい数を加えて行列が正定値になるようにすれば良い。（1.4のリッジ回帰の説明を参照)&lt;/p&gt;
&lt;p&gt;各成分ごとにカーネル関数を計算した結果得られる分散共分散行列に、単位行列の定数倍を加えて最終的に使う分散共分散行列を作るというのは、観測ノイズを考慮した観測モデルを考えるときも同じなので、今回はガウス回帰モデルを次のように定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; LinearAlgebra

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Gaussian Process
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; GaussianProcess{K &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel}
    kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;K
    eta&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt; &lt;span style=&#34;color:#75715e&#34;&gt;# regularization parameter&lt;/span&gt;
    GaussianProcess(kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;K) where {K &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new{K}(kernel, &lt;span style=&#34;color:#ae81ff&#34;&gt;1e-6&lt;/span&gt;)
    GaussianProcess(kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;K, eta&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;) where {K &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel} &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; new{K}(kernel, &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(eta))
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, xs)
    &lt;span style=&#34;color:#75715e&#34;&gt;# regularlize&lt;/span&gt;
    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xs) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n) 
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; dist(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, xs)
    l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)
    k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xs)
    MvNormal(zeros(l), k)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;ここでは、 &lt;code&gt;eta&lt;/code&gt; が観測ノイズの項目に相当し、観測値にノイズがないものとして考える場合は分散共分散行列の正則化のため対角成分に1e-6を加えることにする。&lt;code&gt;xs&lt;/code&gt; の刻みを細かくしてサンプリングできることを確認しよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;))
xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_2.png&#34; alt=&#34;ガウス過程からのサンプリング&#34;&gt;&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_3.png&#34; alt=&#34;ガウス過程からのサンプリング&#34;&gt;)&lt;/p&gt;
&lt;p&gt;ノイズ項を入れるとこんな感じ&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;)
xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;4&lt;/span&gt;)
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), 
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_gaussian_noise.png&#34; alt=&#34;ガウス過程からのサンプリング(ノイズ項)&#34;&gt;&lt;/p&gt;
&lt;p&gt;同様に定数カーネル、線形カーネルも定義しておこう。(その他のカーネルにも本文には出てくるが、ここでは省略)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Constant kernel
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; ConstantKernel &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ConstantKernel, x1, x2)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Linear kernel
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; LinearKernel &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;LinearKernel, x1, x2)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; dot(x1, x2)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;LinearKernelのカーネルの実装では、定数項を考慮するために1を加えている。サンプルをプロットするとそれぞれ下のようになる（コードは略）&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_constant.png&#34; alt=&#34;定数カーネル&#34;&gt;
&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_linear.png&#34; alt=&#34;線形カーネル&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;カーネルの定数倍和&#34;&gt;カーネルの定数倍、和&lt;/h2&gt;
&lt;p&gt;本文3.3.2にあるように、カーネルは組み合わせて使うことができ、カーネルの和・積もまたカーネル関数になる。&lt;/p&gt;
&lt;p&gt;今回、ガウスカーネル、ガウスカーネル＋線形カーネルを考えるにあたっては、カーネルの定数倍、カーネルの和が定義されていれば十分なので、その二つを定義しておこう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;import&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Scalar product
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; KernelScalarProd &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel
    coef&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;
    kernel&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelScalarProd, x1, x2)
     k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, x1, x2)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;Sum
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;mutable&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;struct&lt;/span&gt; KernelSum &lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; Kernel
    kernel1&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel
    kernel2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelSum, x1, x2)
     ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1, x1, x2) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2, x1, x2)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt;(coef&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;, k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KernelScalarProd(&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(coef), k)
&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;(k1&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel, k2&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; KernelSum(k1, k2)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;こんな風にカーネルの線型結合からガウス過程が定義できるようになった。下は、線形カーネルとガウスカーネルの線型結合を考えた例。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;2.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; LinearKernel() 
                    &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.8&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;))
xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.01&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xs, rand(dist(gp, xs), &lt;span style=&#34;color:#ae81ff&#34;&gt;10&lt;/span&gt;), 
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, xlabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;x&amp;#34;&lt;/span&gt;, ylabel &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;f&amp;#34;&lt;/span&gt;,
    linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;,
    title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_sum.png&#34; alt=&#34;線型結合&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;回帰&#34;&gt;回帰&lt;/h2&gt;
&lt;p&gt;サンプリングができたので、次に回帰を行う。&lt;/p&gt;
&lt;p&gt;回帰を行おう。本文の後半には、ガウス過程回帰の計算方法を少なくする方法が書いてあるが、まだそこまで読んでいないのでここは素直な方法(本の公式3.8)でガウス過程回帰を定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; predict(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, xtest, xtrain, ytrain)
    k_star &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xtrain, xtest)
    s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xtest)

    k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(cov(gp, xtrain))
    k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv
    mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ytrain
    sig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; s &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_star
    MvNormal(mu, sig)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まず、パラメーターは既知のものとして、予測分布からのサンプリングと、誤差範囲を示してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.5&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.4&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;]
ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.8&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1.7&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2.3&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]

gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.596&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;6.560&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;0.082&lt;/span&gt;)

xtest &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(range(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, stop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.5&lt;/span&gt;, length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; predict(gp, xtest, xs, ys)
qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mapslices(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]), rand(pred, &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;), dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(xtest, qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;,
    label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(xtest, mean(pred), label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Mean&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;dash)

scatter!(xs, ys, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, title &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Posterior distribution&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;実は、これだとうまくいかない&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;PosDefException: matrix is not Hermitian; Cholesky factorization failed.

Stacktrace:
 [1] checkpositivedefinite(::Int64) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/factorization.jl:11
 [2] #cholesky!#97(::Bool, ::Function, ::Array{Float64,2}, ::Val{false}) at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:182
 [3] #cholesky#101 at ./none:0 [inlined]
 [4] cholesky at /Users/osx/buildbot/slave/package_osx64/build/usr/share/julia/stdlib/v1.1/LinearAlgebra/src/cholesky.jl:275 [inlined] (repeats 2 times)
 [5] Type at /Users/apple/.julia/packages/PDMats/AObTs/src/pdmat.jl:19 [inlined]
 [6] Type at /Users/apple/.julia/packages/Distributions/wY4bz/src/multivariate/mvnormal.jl:196 [inlined]
 [7] predict(::GaussianProcess{KernelScalarProd}, ::Array{Float64,1}, ::Array{Float64,1}, ::Array{Float64,1}) at ./In[24]:10
 [8] top-level scope at In[25]:7
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;原因は、 &lt;code&gt;predict&lt;/code&gt; の &lt;code&gt;sig&lt;/code&gt; が計算誤差によりSymmetricになっていないのが原因なので、&lt;code&gt;predict&lt;/code&gt; を次のように修正する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; predict(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, xtest, xtrain, ytrain)
   k_star &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xtrain, xtest)
   s &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xtest)

   k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(cov(gp, xtrain))
   k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv
   mu &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ytrain
   sig &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Symmetric&lt;/span&gt;(s &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; k_star_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_star)
   MvNormal(mu, sig)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;すると、次のような結果が得られる。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_regression_1.png&#34; alt=&#34;回帰結果&#34;&gt;&lt;/p&gt;
&lt;h2 id=&#34;微分を定義する&#34;&gt;微分を定義する&lt;/h2&gt;
&lt;p&gt;学習データを \( \mathcal{D}=(\mathbf{X}, \mathbf{y}) \), ハイパーパラメーターを \( \boldsymbol{\theta} \), ハイパーパラメータから計算されるカーネル行列を \( \mathbf{K}_\boldsymbol{\theta} \) とした時に、対数尤度関数&lt;/p&gt;
&lt;p&gt;$$ L := -\log | \mathbf{K}_\boldsymbol{\theta} | - \mathbf{y}^T \mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y} $$&lt;/p&gt;
&lt;p&gt;を最大化するハイパーパラメーターを勾配法で求めよう。\( L \) の偏微分は、&lt;/p&gt;
&lt;p&gt;$$ \frac{\partial L}{\partial \theta} = \text{tr} \left( \mathbf{K}_\boldsymbol{{\theta}}^{-1} \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \theta} \right) + (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})^T \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \theta} (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})$$&lt;/p&gt;
&lt;p&gt;だった。パラメータ \( \theta \in \boldsymbol{\theta} \) は \( \theta &amp;gt; 0 \) でなくてはならないので、\( \tau = \log \theta \) と変換して \( \tau \) を最適化する。つまり、実際に勾配法で使う偏微分は
$$ \frac{\partial L}{\partial \tau} = \frac{\partial L}{\partial \theta} \frac{\partial \theta}{\partial \tau} = \theta \frac{\partial L}{\partial \theta}$$
である。同様に \( \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \tau} = \theta \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \theta} \)
だから、\( \theta \) の代わりに \( \tau \) を考えて&lt;/p&gt;
&lt;p&gt;$$ \frac{\partial L}{\partial \tau} = \text{tr} \left( \mathbf{K}_\boldsymbol{{\theta}}^{-1} \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \tau} \right) + (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})^T \frac{\partial \mathbf{K}_\boldsymbol{\theta}}{\partial \tau} (\mathbf{K}_\boldsymbol{\theta}^{-1} \mathbf{y})$$&lt;/p&gt;
&lt;p&gt;を計算する。まずは &lt;code&gt;GaussianKernel&lt;/code&gt;, &lt;code&gt;ConstantKernel&lt;/code&gt;, &lt;code&gt;LinearKernel&lt;/code&gt; の微分を定義する。パラメーターごとの偏微分したもののリストを返すことにする
&lt;code&gt;ConstantKernel&lt;/code&gt;, &lt;code&gt;LinearKernel&lt;/code&gt; はパラメーターを持たないので、空のリストを返しておく。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianKernel, x1, x2)
    [ker(k, x1, x2) &lt;span style=&#34;color:#f92672&#34;&gt;/&lt;/span&gt; k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;theta &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; sum((x1 &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; x2)&lt;span style=&#34;color:#f92672&#34;&gt;.^&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)]
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ConstantKernel, x1, x2)
    []
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;LinearKernel, x1, x2)
    []
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;カーネルの定数倍、和に対して、元のカーネルの微分を利用して微分を定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelScalarProd, x1, x2)
    [ker(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, x1, x2), 
     k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, x1, x2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelSum, x1, x2)
    [logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1, x1, x2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;, 
     logderiv(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2, x1, x2)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;]
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h2 id=&#34;optimjlによる最適化&#34;&gt;Optim.jlによる最適化&lt;/h2&gt;
&lt;p&gt;微分を定義したので、&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/&#34;&gt;Optim.jl&lt;/a&gt; で最適化しよう。&lt;/p&gt;
&lt;p&gt;まず、カーネルのパラメーターを更新する &lt;code&gt;update!&lt;/code&gt; を定義。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianKernel, theta)
    k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;theta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;(theta)
    k
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;ConstantKernel) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k

update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;LinearKernel) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, params&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    update!(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, params[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;eta &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params[&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;]
    gp
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これを和と定数倍の場合にも延長する。和のカーネルを更新する時に、ぞれぞれのカーネルのパラメーターの数を知る必要がある。&lt;code&gt;Base.length&lt;/code&gt; をカーネル、ガウス過程に対して拡張しよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;Kernel) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(fieldnames(typeof(k)))

Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelScalarProd) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel)

Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelSum) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2)

Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess) &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;これでようやく和と定数倍の場合の &lt;code&gt;update&lt;/code&gt; が定義できる。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelScalarProd, params&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;coef &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; params[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;]
    update!(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, params[&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    k
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; update!(k&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;KernelSum, params&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    l &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1)
    update!(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel1, params[&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;l]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    update!(k&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel2, params[l&lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;]&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    k
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;対数尤度関数と微分では共通する計算があるので、&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Avoid repeating computations&lt;br&gt;
&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/#user/tipsandtricks/#avoid-repeating-computations&#34;&gt;https://julianlsolvers.github.io/Optim.jl/stable/#user/tipsandtricks/#avoid-repeating-computations&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;を参考にして &lt;code&gt;fg!&lt;/code&gt; を定義。Optim.jlは関数の最小化を行うため、&lt;code&gt;fg!&lt;/code&gt; では \( -L \) の値と微分を計算している。(ついでに対数尤度も定義しておく)&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; logp(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, xs, ys)
    k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xs)
    k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(k)
    &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;log(det(k)) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; ys&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; fg!(gp&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;GaussianProcess, xs, ys, F, G, params)
    &lt;span style=&#34;color:#75715e&#34;&gt;# -logp and gradient&lt;/span&gt;
    y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(params)
    update!(gp, y&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    k &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; cov(gp, xs)
    k_inv &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; inv(k)
    k_inv_y &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys

    n &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; size(xs, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)

    &lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; deriv(d_mat&lt;span style=&#34;color:#f92672&#34;&gt;::&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#f92672&#34;&gt;&amp;lt;:&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Real&lt;/span&gt;})
        &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;tr(k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; d_mat) &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; k_inv_y&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; d_mat &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv_y)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# gradient&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; G &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nothing
        d_tensor &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; zeros(n, n, Base&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;length(gp))
        &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; i &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
            &lt;span style=&#34;color:#66d9ef&#34;&gt;for&lt;/span&gt; j &lt;span style=&#34;color:#66d9ef&#34;&gt;in&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;n
                t &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; logderiv(gp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;kernel, xs[i, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;], xs[j, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;])
                d_tensor[i, j, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; t
            &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
        &lt;span style=&#34;color:#75715e&#34;&gt;# eta&lt;/span&gt;
        d_tensor[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; y[&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;] &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Matrix&lt;/span&gt;{&lt;span style=&#34;color:#66d9ef&#34;&gt;Float64&lt;/span&gt;}(I, n, n) 
        G &lt;span style=&#34;color:#f92672&#34;&gt;.=&lt;/span&gt; mapslices(deriv, d_tensor, dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; [&lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;])[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;]
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

    &lt;span style=&#34;color:#75715e&#34;&gt;# log likelihoood&lt;/span&gt;
    &lt;span style=&#34;color:#66d9ef&#34;&gt;if&lt;/span&gt; F &lt;span style=&#34;color:#f92672&#34;&gt;!=&lt;/span&gt; nothing
        &lt;span style=&#34;color:#66d9ef&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;log(det(k)) &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt; ys&lt;span style=&#34;color:#f92672&#34;&gt;&amp;#39;&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; k_inv &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ys)
    &lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;まずは図3.16のデータでハイパーパラメーターを推定しよう。推定したいハイパーパラメータの形は
$$ k(\mathbf{x}, \mathbf{x}^\prime \mid \boldsymbol{\theta}) = \theta_1 \exp \left( - \frac{|\mathbf{x} - \mathbf{x}^\prime |^2}{\theta_2} \right) + \theta_3 \delta (\mathbf{x}, \mathbf{x}^\prime) $$
だから、パラメーターを仮置きして下のようにガウス過程を定義する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;Optim.jlの&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/#algo/gradientdescent/&#34;&gt;&lt;code&gt;GradientDescent&lt;/code&gt;&lt;/a&gt; を使ってパラメーターを推定する。実際のハイパーパラメーターに戻すために、最後に &lt;code&gt;exp&lt;/code&gt; を取っている。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Optim

lower &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)
upper &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;30.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;)

res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp, xs, ys, F, G, x)),
    lower, upper, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;], 
    Fminbox(GradientDescent()))

println(res)
pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with Gradient Descent
 * Starting Point: [0.0,0.0,0.0]
 * Minimizer: [0.4677728528438338,1.8810363129622452, ...]
 * Minimum: 1.738770e+00
 * Iterations: 3
 * Convergence: true
   * |x - x&#39;| ≤ 0.0e+00: false 
     |x - x&#39;| = 6.21e-08 
   * |f(x) - f(x&#39;)| ≤ 0.0e+00 |f(x)|: false
     |f(x) - f(x&#39;)| = 9.45e-15 |f(x)|
   * |g(x)| ≤ 1.0e-08: true 
     |g(x)| = 9.23e-09 
   * Stopped by an increasing objective: false
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 353
 * Gradient Calls: 353
[theta1, theta2, theta3] = [1.59643, 6.5603, 0.0819847]
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;男子100m走の世界記録のデータを使ったハイパーパラメーター推定&#34;&gt;男子100m走の世界記録のデータを使ったハイパーパラメーター推定&lt;/h2&gt;
&lt;p&gt;長くなったが、最後に、本と同様、男子100m走の世界記録のデータを使ってハイパーパラメーターを推定してみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; CSV
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Dates
&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; DataFrames

df &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; CSV&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;read(&lt;span style=&#34;color:#66d9ef&#34;&gt;IOBuffer&lt;/span&gt;(
&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;Date,Time
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1964/10/15,10.06
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1968/6/20,10.03
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1968/10/13,10.02
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1968/10/14,9.95
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1983/7/3,9.93
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1987/8/30,9.93
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1988/8/17,9.93
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1988/9/24,9.92
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1991/7/14,9.9
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1991/8/25,9.86
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1994/7/6,9.85
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1996/7/27,9.84
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;1999/6/16,9.79
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2002/9/14,9.78
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2005/6/14,9.77
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2006/5/12,9.77
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2006/6/11,9.77
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2006/8/18,9.77
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2007/9/9,9.74
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2008/5/31,9.72
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2008/8/16,9.69
&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;2009/8/16,9.58&amp;#34;&lt;/span&gt;); dateformat&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;yyyy/mm/dd&amp;#34;&lt;/span&gt;)
disallowmissing!(df)
scatter(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Date&lt;/span&gt;, df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Time, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_data.png&#34; alt=&#34;男子100mの世界記録&#34;&gt;&lt;/p&gt;
&lt;p&gt;値を平均0, 分散1となるように正規化する。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;using&lt;/span&gt; Dates

xs_raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Dates&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;value&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;Date&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; &lt;span style=&#34;color:#66d9ef&#34;&gt;Date&lt;/span&gt;(&lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;)) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;365&lt;/span&gt;
xs_mean, xs_std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(xs_raw), std(xs_raw)
ys_raw &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; df&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;Time
ys_mean, ys_std &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mean(ys_raw), std(ys_raw)

xs &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (xs_raw &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; xs_mean) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; xs_std
ys &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; (ys_raw &lt;span style=&#34;color:#f92672&#34;&gt;.-&lt;/span&gt; ys_mean) &lt;span style=&#34;color:#f92672&#34;&gt;./&lt;/span&gt; ys_std

scatter(xs, ys, label&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_data_2.png&#34; alt=&#34;正規化した男子100mの世界記録&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://julianlsolvers.github.io/Optim.jl/stable/#algo/lbfgs/&#34;&gt;&lt;code&gt;LBFGS&lt;/code&gt;&lt;/a&gt; でハイパーパラメーターを推定する。&lt;code&gt;[0, 0, 0]&lt;/code&gt; からスタートすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;&lt;span style=&#34;color:#66d9ef&#34;&gt;function&lt;/span&gt; plot_gp_100m(gp, pars)

    update!(gp, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars)&lt;span style=&#34;color:#f92672&#34;&gt;...&lt;/span&gt;)
    x_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; collect(range(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, stop&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, length&lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;100&lt;/span&gt;))
    pred &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; predict(gp, x_test, xs, ys)
    qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; mapslices(x &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; quantile(x, [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.025&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.975&lt;/span&gt;]), rand(pred, &lt;span style=&#34;color:#ae81ff&#34;&gt;10000&lt;/span&gt;), dims &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;)

    &lt;span style=&#34;color:#75715e&#34;&gt;# convert&lt;/span&gt;
    x_test &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; x_test &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; xs_std &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; xs_mean
    qt &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; ys_std &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; ys_mean
    Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot(x_test, qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;1&lt;/span&gt;], fillrange &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; qt[&lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;], fillalpha &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0.3&lt;/span&gt;,
        label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;0&lt;/span&gt;)
    Plots&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;plot!(x_test, mean(pred) &lt;span style=&#34;color:#f92672&#34;&gt;.*&lt;/span&gt; ys_std &lt;span style=&#34;color:#f92672&#34;&gt;.+&lt;/span&gt; ys_mean, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;, linewidth &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;2&lt;/span&gt;, linestyle &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;:&lt;/span&gt;dash)
    scatter!(xs_raw, ys_raw, label &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; &lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;&amp;#34;&lt;/span&gt;)
&lt;span style=&#34;color:#66d9ef&#34;&gt;end&lt;/span&gt;

gp &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)

res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp, xs, ys, F, G, x)),
    fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;], 
    Fminbox(LBFGS()))

println(res)
pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logp:&amp;#34;&lt;/span&gt;, logp(gp, xs, ys))

plot_gp_100m(gp, pars)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with L-BFGS
 * Starting Point: [0.0,0.0,0.0]
 * Minimizer: [1.4404906589345008,2.6294999978819886, ...]
 * Minimum: -1.486413e+01
 * Iterations: 20
 * Convergence: true
   * |x - x&#39;| ≤ 0.0e+00: true 
     |x - x&#39;| = 0.00e+00 
   * |f(x) - f(x&#39;)| ≤ 0.0e+00 |f(x)|: true
     |f(x) - f(x&#39;)| = 0.00e+00 |f(x)|
   * |g(x)| ≤ 1.0e-08: false 
     |g(x)| = 5.07e-08 
   * Stopped by an increasing objective: true
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 7536
 * Gradient Calls: 7536
[theta1, theta2, theta3] = [4.22277, 13.8668, 0.102625]
logp:14.864131619224107
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_1.png&#34; alt=&#34;[0,0,0]からスタートしたガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;となって本に載っているのとは別の局所解に収束してしまう。&lt;code&gt;[0, 0, -3]&lt;/code&gt; からスタートすると、&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp, xs, ys, F, G, x)),
    fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;3&lt;/span&gt;), [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;], 
    Fminbox(LBFGS()))

println(res)
pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logp:&amp;#34;&lt;/span&gt;, logp(gp, xs, ys))

plot_gp_100m(gp, pars)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with L-BFGS
 * Starting Point: [0.0,0.0,-3.0]
 * Minimizer: [0.4403584574143354,-1.4741097963164387, ...]
 * Minimum: -1.407396e+01
 * Iterations: 5
 * Convergence: true
   * |x - x&#39;| ≤ 0.0e+00: true 
     |x - x&#39;| = 0.00e+00 
   * |f(x) - f(x&#39;)| ≤ 0.0e+00 |f(x)|: true
     |f(x) - f(x&#39;)| = 0.00e+00 |f(x)|
   * |g(x)| ≤ 1.0e-08: false 
     |g(x)| = 1.45e-08 
   * Stopped by an increasing objective: true
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 331
 * Gradient Calls: 331
[theta1, theta2, theta3] = [1.55326, 0.228982, 0.0429989]
logp:14.073964533876048
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_100m_gaussian.png&#34; alt=&#34;[0,0,-3]からスタートしたガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;と、本と同様の回帰結果が得られる。(パラメーターの値は本と違ってしまっているが&amp;hellip;)&lt;/p&gt;
&lt;p&gt;最後に、ガウスカーネル + 線形カーネルによる回帰を行ってみよう。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;color:#f8f8f2;background-color:#272822;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-julia&#34; data-lang=&#34;julia&#34;&gt;gp_2 &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; GaussianProcess(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; ConstantKernel() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; LinearKernel() &lt;span style=&#34;color:#f92672&#34;&gt;+&lt;/span&gt; &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt; &lt;span style=&#34;color:#f92672&#34;&gt;*&lt;/span&gt; GaussianKernel(&lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;), &lt;span style=&#34;color:#ae81ff&#34;&gt;1.0&lt;/span&gt;)

res &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; optimize(
    Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;only_fg!((F, G, x) &lt;span style=&#34;color:#f92672&#34;&gt;-&amp;gt;&lt;/span&gt; fg!(gp_2, xs, ys, F, G, x)),
    fill(&lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), fill(&lt;span style=&#34;color:#ae81ff&#34;&gt;10.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;5&lt;/span&gt;), [&lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#ae81ff&#34;&gt;0.0&lt;/span&gt;, &lt;span style=&#34;color:#f92672&#34;&gt;-&lt;/span&gt;&lt;span style=&#34;color:#ae81ff&#34;&gt;3.0&lt;/span&gt;], 
    Fminbox(LBFGS()))

println(res)
pars &lt;span style=&#34;color:#f92672&#34;&gt;=&lt;/span&gt; Optim&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;minimizer(res)
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;[theta1, theta2, theta3, theta4, theta5] = &amp;#34;&lt;/span&gt;, exp&lt;span style=&#34;color:#f92672&#34;&gt;.&lt;/span&gt;(pars))
println(&lt;span style=&#34;color:#e6db74&#34;&gt;&amp;#34;logp:&amp;#34;&lt;/span&gt;, logp(gp_2, xs, ys))

plot_gp_100m(gp_2, pars)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;Results of Optimization Algorithm
 * Algorithm: Fminbox with L-BFGS
 * Starting Point: [0.0,0.0,0.0,0.0,-3.0]
 * Minimizer: [-3.591175043240611,-0.6634886622587809, ...]
 * Minimum: -1.970913e+01
 * Iterations: 12
 * Convergence: true
   * |x - x&#39;| ≤ 0.0e+00: true 
     |x - x&#39;| = 0.00e+00 
   * |f(x) - f(x&#39;)| ≤ 0.0e+00 |f(x)|: true
     |f(x) - f(x&#39;)| = 0.00e+00 |f(x)|
   * |g(x)| ≤ 1.0e-08: false 
     |g(x)| = 6.18e+00 
   * Stopped by an increasing objective: true
   * Reached Maximum Number of Iterations: false
 * Objective Calls: 4960
 * Gradient Calls: 4960
[theta1, theta2, theta3, theta4, theta5] = [0.0275659, 0.515051, 0.110337, 0.0252142, 0.0470559]
logp:19.709131389510937
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-parameter-estimation_linear_gaussian.png&#34; alt=&#34;線形+ガウスカーネルによる回帰&#34;&gt;&lt;/p&gt;
&lt;p&gt;内容をまとめたJupyter Notebook -&amp;gt;&lt;br&gt;
&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/notebook_blog/blob/master/gp_blog.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/notebook_blog/blob/master/gp_blog.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;カーネル部分をjlファイルに分離し、指数カーネルや周期カーネルも定義したレポジトリはこちら -&amp;gt;&lt;br&gt;
&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp&#34;&gt;https://github.com/matsueushi/gp_and_mlp&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ガウス過程と機械学習: 3.5まで</title>
      <link>https://matsueushi.github.io/posts/gp-nlp-2/</link>
      <pubDate>Sun, 19 May 2019 22:37:52 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-nlp-2/</guid>
      <description>&lt;p&gt;引き続き「ガウス過程と機械学習(第二刷)」を読み進めJuliaで実装している。&lt;/p&gt;
&lt;p&gt;ハイパーパラメーターの最適化(勾配を使わず、Optim.jlの &lt;code&gt;optimize&lt;/code&gt; を使ってしまった)のところまで読み進めた。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;3.4.2のガウス過程回帰の計算を行う際、予測分布の分散共分散行列が計算誤差の影響で対称行列にならずエラーが発生することがあったので、場合によっては対称化が必要。&lt;/li&gt;
&lt;li&gt;図3.16のガウスカーネル&lt;br&gt;
\(
\begin{aligned}
k(x, x^\prime) = \theta_1 \exp \left( - \frac{|x-x^\prime|^2}{\theta_2} \right)
\end{aligned}
\)
のパラメーター推定で、\( (\theta_1, \theta_2, \theta_3)=(1, 0.4, 0.1) \) とすると下のようになり本と違ってしまった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_posterior_1.png&#34; alt=&#34;(1, 0.4, 0.1) の事後分布&#34;&gt;&lt;/p&gt;
&lt;p&gt;\( (\theta_1, \theta_2, \theta_3)=(1, 0.4, 0.01) \) とすると近い図になる(全く同じには見えない)&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_posterior_2.png&#34; alt=&#34;(1, 0.4, 0.01) の事後分布&#34;&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;尤度の計算が合わなかった。尤度を図示した図3.16で-5未満を切り捨てるとうまくいかなかった。20以下を切り捨てると近い図になった。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_logp.png&#34; alt=&#34;尤度(2次元)&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://matsueushi.github.io/images/posts/gp-nlp-2_logp_3d.png&#34; alt=&#34;尤度(3次元)&#34;&gt;&lt;/p&gt;
&lt;p&gt;本文の局所解(ii)に該当する点の尤度は-2.0299となり本文の-1.934とは違ってしまった。&lt;/p&gt;
&lt;p&gt;図3.20のパラメーター推定は正しくできたが、こちらも対数尤度が違ってしまった((a):本文-1.788、実装-1.738, (b):本文-2.174, 実装-2.5029)
詳細は下のレポジトリ、ノートブックを見て下さい。更新は下のMedium用のブランチではなく、masterの方に行う予定です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp/tree/blog-2019-05-19&#34;&gt;https://github.com/matsueushi/gp_and_mlp/tree/blog-2019-05-19&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-19/gp.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-19/gp.ipynb&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「ガウス過程と機械学習 」を読み始めた</title>
      <link>https://matsueushi.github.io/posts/gp-nlp-1/</link>
      <pubDate>Fri, 10 May 2019 22:30:45 -0400</pubDate>
      
      <guid>https://matsueushi.github.io/posts/gp-nlp-1/</guid>
      <description>&lt;p&gt;持橋・大羽の「&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/&#34;&gt;ガウス過程と機会学習&lt;/a&gt;」を読み始めた。Juliaでコードを書きながら内容を確かめている。&lt;/p&gt;
&lt;p&gt;本を読むまで定義も理解していなかったレベルだったが、無限次元のガウス分布を考えるというモチベーションから「有限次元に制限すれば(通常の)ガウス分布になるもの」としてガウス過程の定義が出てくるのは非常に自然だと思った。&lt;/p&gt;
&lt;p&gt;分散共分散行列の成分を作る時に使われるカーネル \( k(x,x^\prime) \) は \( x \) と \(x^\prime \) の「近さ」を表す関数とでも考えれば良いのだろうか。&lt;/p&gt;
&lt;p&gt;なんでそういうことを考えるのかという気持ちの部分が丁寧に説明されているので意図がわからずに数式の中に闇雲に迷い込むことなく今の所楽しく読み進められている。&lt;/p&gt;
&lt;p&gt;エラッタ:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://chasen.org/~daiti-m/gpbook/errata.html&#34;&gt;http://chasen.org/~daiti-m/gpbook/errata.html&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://scrapbox.io/GPandML2019/support&#34;&gt;https://scrapbox.io/GPandML2019/support&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.3の「ガウス過程とカーネル」のところまで読んだ。&lt;/p&gt;
&lt;p&gt;自分が躓いた点&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;“3.2.4 ガウス過程からのサンプル”で図3.9のようなサンプルを実装するときは正則化項を入れないと計算がうまくいかないことがある(1.4 リッジ回帰の部分で触れられている)。著者のサンプルコードでは非常に正則化項として1e-6を導入していた。共分散行列の計算の際に対角成分に正規化項を加えればよい。&lt;/li&gt;
&lt;li&gt;“3.3.1 ガウス過程のRBFカーネル”で、線形モデルの基底関数のグリッドを無限に細かくするとRBFカーネルになると書かれている部分は、本文中の基底関数を使うと \( H \rightarrow \infty \) とした時にカーネル関数がRBF関数に収束しない。基底関数に \( 1 / \sqrt{H} \) を掛けたものを考えればOK&lt;/li&gt;
&lt;li&gt;“3.3.2 さまざまなカーネル”で線形カーネルを実装するときに、カーネル関数は &lt;code&gt;dot(x1, x2)&lt;/code&gt; ではなく、必ず1となる入力の最初の次元も考慮して &lt;code&gt;1 + dot(x1, x2)&lt;/code&gt; とする。他のカーネルの場合は &lt;code&gt;x1 — x2&lt;/code&gt; の計算の段階で消えるので考慮する必要はない&lt;/li&gt;
&lt;li&gt;また、Matérnカーネルを定義する際に、Juliaでは第二種のベッセル関数は &lt;code&gt;SpecialFunctions&lt;/code&gt; の &lt;code&gt;besselk&lt;/code&gt; を使えば良い。ベッセル関数は \( x=0 \) で特異性を持つので、カーネル関数 &lt;code&gt;k(x1, x2)&lt;/code&gt; を定義するときは &lt;code&gt;x1 = x2&lt;/code&gt; の時に条件分岐で1を返すようにすればいい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;カーネルとガウシアン過程を定義したjlファイル:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.jl&#34;&gt;https://github.com/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.jl&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;3.3章までのノートブック:&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.ipynb&#34;&gt;https://nbviewer.jupyter.org/github/matsueushi/gp_and_mlp/blob/blog-2019-05-10/gp.ipynb&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;引き続き3.4章の回帰モデルから読む予定。&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>